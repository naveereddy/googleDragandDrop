/* angular-google-maps 2.1.5 2015-08-26
 *  AngularJS directives for Google Maps
 *  git: https://github.com/angular-ui/angular-google-maps.git
 */
(function(b,a,c){(function(){a.module("uiGmapgoogle-maps.providers",[]);a.module("uiGmapgoogle-maps.wrapped",[]);a.module("uiGmapgoogle-maps.extensions",["uiGmapgoogle-maps.wrapped","uiGmapgoogle-maps.providers"]);a.module("uiGmapgoogle-maps.directives.api.utils",["uiGmapgoogle-maps.extensions"]);a.module("uiGmapgoogle-maps.directives.api.managers",[]);a.module("uiGmapgoogle-maps.directives.api.options",["uiGmapgoogle-maps.directives.api.utils"]);a.module("uiGmapgoogle-maps.directives.api.options.builders",[]);a.module("uiGmapgoogle-maps.directives.api.models.child",["uiGmapgoogle-maps.directives.api.utils","uiGmapgoogle-maps.directives.api.options","uiGmapgoogle-maps.directives.api.options.builders"]);a.module("uiGmapgoogle-maps.directives.api.models.parent",["uiGmapgoogle-maps.directives.api.managers","uiGmapgoogle-maps.directives.api.models.child","uiGmapgoogle-maps.providers"]);a.module("uiGmapgoogle-maps.directives.api",["uiGmapgoogle-maps.directives.api.models.parent"]);a.module("uiGmapgoogle-maps",["uiGmapgoogle-maps.directives.api","uiGmapgoogle-maps.providers"])}).call(this);(function(){a.module("uiGmapgoogle-maps.providers").factory("uiGmapMapScriptLoader",["$q","uiGmapuuid","lodash",function(e,g,f){var h,i,d,j;j=void 0;h=function(k){if(k.china){return"http://maps.google.cn/maps/api/js?"}else{if(k.transport==="auto"){return"//maps.googleapis.com/maps/api/js?"}else{return k.transport+"://maps.googleapis.com/maps/api/js?"}}};i=function(m){var l,n,k;l=["transport","isGoogleMapsForWork","china"];if(m.isGoogleMapsForWork){l.push("key")}n=f.map(f.omit(m,l),function(p,o){return o+"="+p});if(j){document.getElementById(j).remove()}n=n.join("&");k=document.createElement("script");k.id=j="ui_gmap_map_load_"+(g.generate());k.type="text/javascript";k.src=h(m)+n;return document.body.appendChild(k)};d=function(){return a.isDefined(b.google)&&a.isDefined(b.google.maps)};return{load:function(l){var k,m;k=e.defer();if(d()){k.resolve(b.google.maps);return k.promise}m=l.callback="onGoogleMapsReady"+Math.round(Math.random()*1000);b[m]=function(){b[m]=null;k.resolve(b.google.maps)};if(b.navigator.connection&&b.Connection&&b.navigator.connection.type===b.Connection.NONE){document.addEventListener("online",function(){if(!d()){return i(l)}})}else{i(l)}return k.promise}}}]).provider("uiGmapGoogleMapApi",function(){this.options={transport:"https",isGoogleMapsForWork:false,china:false,v:"3",libraries:"",language:"en",sensor:"false"};this.configure=function(d){a.extend(this.options,d)};this.$get=["uiGmapMapScriptLoader",(function(d){return function(e){return e.load(d.options)}})(this)];return this})}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.extensions").service("uiGmapExtendGWin",["lodash",function(g){return{init:g.once(function(){var h;if(!(google||(typeof google!=="undefined"&&google!==null?google.maps:void 0)||(google.maps.InfoWindow!=null))){return}google.maps.InfoWindow.prototype._open=google.maps.InfoWindow.prototype.open;google.maps.InfoWindow.prototype._close=google.maps.InfoWindow.prototype.close;google.maps.InfoWindow.prototype._isOpen=false;google.maps.InfoWindow.prototype.open=function(k,i,j){if(j!=null){return}this._isOpen=true;this._open(k,i,true)};google.maps.InfoWindow.prototype.close=function(i){if(i!=null){return}this._isOpen=false;this._close(true)};google.maps.InfoWindow.prototype.isOpen=function(i){if(i==null){i=void 0}if(i==null){return this._isOpen}else{return this._isOpen=i}};if(b.InfoBox){b.InfoBox.prototype._open=b.InfoBox.prototype.open;b.InfoBox.prototype._close=b.InfoBox.prototype.close;b.InfoBox.prototype._isOpen=false;b.InfoBox.prototype.open=function(j,i){this._isOpen=true;this._open(j,i)};b.InfoBox.prototype.close=function(){this._isOpen=false;this._close()};b.InfoBox.prototype.isOpen=function(i){if(i==null){i=void 0}if(i==null){return this._isOpen}else{return this._isOpen=i}};h=(function(j){e(i,j);function i(l){this.getOrigCloseBoxImg_=f(this.getOrigCloseBoxImg_,this);this.getCloseBoxDiv_=f(this.getCloseBoxDiv_,this);var k;k=new b.InfoBox(l);g.extend(this,k);if(l.closeBoxDiv!=null){this.closeBoxDiv_=l.closeBoxDiv}}i.prototype.getCloseBoxDiv_=function(){return this.closeBoxDiv_};i.prototype.getCloseBoxImg_=function(){var l,k;l=this.getCloseBoxDiv_();k=this.getOrigCloseBoxImg_();return l||k};i.prototype.getOrigCloseBoxImg_=function(){var k;k="";if(this.closeBoxURL_!==""){k="<img";k+=" src='"+this.closeBoxURL_+"'";k+=" align=right";k+=" style='";k+=" position: relative;";k+=" cursor: pointer;";k+=" margin: "+this.closeBoxMargin_+";";k+="'>"}return k};return i})(b.InfoBox);b.uiGmapInfoBox=h}if(b.MarkerLabel_){return b.MarkerLabel_.prototype.setContent=function(){var i;i=this.marker_.get("labelContent");if(!i||g.isEqual(this.oldContent,i)){return}if(typeof(i!=null?i.nodeType:void 0)==="undefined"){this.labelDiv_.innerHTML=i;this.eventDiv_.innerHTML=this.labelDiv_.innerHTML;this.oldContent=i}else{this.labelDiv_.innerHTML="";this.labelDiv_.appendChild(i);i=i.cloneNode(true);this.labelDiv_.innerHTML="";this.eventDiv_.appendChild(i);this.oldContent=i}}}})}}])}).call(this);(function(){a.module("uiGmapgoogle-maps.extensions").service("uiGmapLodash",["lodash",function(d){this.intersectionObjects=function(h,f,g){var e;if(g==null){g=void 0}e=d.map(h,(function(i){return function(j){return d.find(f,function(k){if(g!=null){return g(j,k)}else{return d.isEqual(j,k)}})}})(this));return d.filter(e,function(i){return i!=null})};this.containsObject=d.includeObject=function(g,f,e){if(e==null){e=void 0}if(g===null){return false}return d.any(g,(function(h){return function(i){if(e!=null){return e(i,f)}else{return d.isEqual(i,f)}}})(this))};this.differenceObjects=function(g,e,f){if(f==null){f=void 0}return d.filter(g,(function(h){return function(i){return !h.containsObject(e,i,f)}})(this))};this.withoutObjects=this.differenceObjects;this.indexOfObject=function(k,g,h,j){var e,f;if(k==null){return -1}e=0;f=k.length;if(j){if(typeof j==="number"){e=(j<0?Math.max(0,f+j):j)}else{e=d.sortedIndex(k,g);return(k[e]===g?e:-1)}}while(e<f){if(h!=null){if(h(k[e],g)){return e}}else{if(d.isEqual(k[e],g)){return e}}e++}return -1};this.isNullOrUndefined=function(e){return d.isNull(e||d.isUndefined(e))};return this}])}).call(this);(function(){a.module("uiGmapgoogle-maps.extensions").factory("uiGmapString",["lodash",function(){return function(d){this.contains=function(f,e){return d.indexOf(f,e)!==-1};return this}}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmap_sync",[function(){return{fakePromise:function(){var d;d=void 0;return{then:function(e){return d=e},resolve:function(){return d.apply(void 0,arguments)}}}}}]).service("uiGmap_async",["$timeout","uiGmapPromise","uiGmapLogger","$q","uiGmapDataStructures","uiGmapGmapUtil","lodash",function(y,n,q,w,t,u,C){var f,h,s,l,i,d,j,r,g,z,o,p,e,B,A,x,v,m,k;m=n.promiseTypes;o=n.isInProgress;v=n.promiseStatus;f=n.ExposedPromise;s=n.SniffedPromise;p=function(E,D){var F;F=E.promise();F.promiseType=E.promiseType;if(F.$$state){q.debug("promiseType: "+F.promiseType+", state: "+(v(F.$$state.status)))}F.cancelCb=D;return F};r=function(D,E){if(D.promiseType===m.create&&E.promiseType!==m["delete"]&&E.promiseType!==m.init){q.debug("lastPromise.promiseType "+E.promiseType+", newPromiseType: "+D.promiseType+", SKIPPED MUST COME AFTER DELETE ONLY");return true}return false};x=function(D,E,F){var G;if(E.promiseType===m["delete"]&&F.promiseType!==m["delete"]){if((F.cancelCb!=null)&&C.isFunction(F.cancelCb)&&o(F)){q.debug("promiseType: "+E.promiseType+", CANCELING LAST PROMISE type: "+F.promiseType);F.cancelCb("cancel safe");G=D.peek();if((G!=null)&&o(G)){if(G.hasOwnProperty("cancelCb")&&C.isFunction(G.cancelCb)){q.debug("promiseType: "+G.promiseType+", CANCELING FIRST PROMISE type: "+G.promiseType);return G.cancelCb("cancel safe")}else{return q.warn("first promise was not cancelable")}}}}};h=function(G,E,D){var F,H;if(!G.existingPieces){G.existingPieces=new t.Queue();return G.existingPieces.enqueue(p(E,D))}else{F=C.last(G.existingPieces._content);if(r(E,F)){return}x(G.existingPieces,E,F);H=f(F["finally"](function(){return p(E,D)}));H.cancelCb=D;H.promiseType=E.promiseType;G.existingPieces.enqueue(H);return F["finally"](function(){return G.existingPieces.dequeue()})}};B=function(E,G,H,D,F){var I;if(H==null){H=""}I=function(J){q.debug(J+": "+J);if((D!=null)&&C.isFunction(D)){return D(J)}};return h(E,s(F,G),I)};d=80;z={value:null};k=function(F,D,E){var G;try{return F.apply(D,E)}catch(H){G=H;z.value=G;return z}};e=function(H,E,F,G){var I,D;D=k(H,E,G);if(D===z){I="error within chunking iterator: "+z.value;q.error(I);F.reject(I)}if(D==="cancel safe"){return false}return true};i=function(G,H,F){var D,E;D=G===H;E=H[F];if(D){return E}return G[E]};l=function(G,F,E,D){var H;if(a.isArray(G)){H=G}else{H=F?F:Object.keys(C.omit(G,["length","forEach","map"]));F=H}if(D==null){D=E}if(a.isArray(H)&&(H===void 0||(H!=null?H.length:void 0)<=0)){if(D!==E){return E()}}return D(H,F)};j=function(K,E,J,G,D,I,F,H){return l(K,H,function(Q,N){var M,L,O,P;if(E&&E<Q.length){M=E}else{M=Q.length}L=F;O=true;while(O&&M--&&L<(Q?Q.length:L+1)){P=i(K,Q,L);O=a.isFunction(P)?true:e(G,void 0,I,[P,L]);++L}if(Q){if(O&&L<Q.length){F=L;if(E){if((D!=null)&&C.isFunction(D)){e(D,void 0,I,[])}return y(function(){return j(K,E,J,G,D,I,F,N)},J,false)}}else{return I.resolve()}}})};g=function(E,L,K,J,F,D,H){var I,M,G;if(K==null){K=d}if(F==null){F=0}if(D==null){D=1}G=void 0;M=n.defer();G=M.promise;if(!D){I="pause (delay) must be set from _async!";q.error(I);M.reject(I);return G}return l(E,H,function(){M.resolve();return G},function(O,N){j(E,K,D,L,J,M,F,N);return G})};A=function(K,I,E,D,F,J,H){var G;G=[];return l(K,H,function(){return n.resolve(G)},function(M,L){return g(K,function(N){return G.push(I(N))},E,D,F,J,L).then(function(){return G})})};return{each:g,map:A,managePromiseQueue:B,promiseLock:B,defaultChunkSize:d,chunkSizeFrom:function(E,D){if(D==null){D=void 0}if(C.isNumber(E)){D=E}if(u.isFalse(E)||E===false){D=false}return D}}}])}).call(this);(function(){var d=[].indexOf||function(g){for(var f=0,e=this.length;f<e;f++){if(f in this&&this[f]===g){return f}}return -1};a.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapBaseObject",function(){var e,f;f=["extended","included"];e=(function(){function g(){}g.extend=function(k){var h,i,j;for(h in k){j=k[h];if(d.call(f,h)<0){this[h]=j}}if((i=k.extended)!=null){i.apply(this)}return this};g.include=function(k){var h,i,j;for(h in k){j=k[h];if(d.call(f,h)<0){this.prototype[h]=j}}if((i=k.included)!=null){i.apply(this)}return this};return g})();return e})}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapChildEvents",function(){return{onChildCreation:function(d){}}})}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapCtrlHandle",["$q",function(e){var d;return d={handle:function(g,f){g.$on("$destroy",function(){return d.handle(g)});g.deferred=e.defer();return{getScope:function(){return g}}},mapPromise:function(g,h){var f;f=h.getScope();f.deferred.promise.then(function(i){return g.map=i});return f.deferred.promise}}}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapEventsHelper",["uiGmapLogger","lodash",function(f,e){var d,g;g=function(h){return a.isDefined(h.events)&&(h.events!=null)&&a.isObject(h.events)};d=function(i,h){if(g(i)){return i}if(g(h)){return h}};return{setEvents:function(j,i,h,l){var k;k=d(i,h);if(k!=null){return e.compact(e.map(k.events,function(n,m){var o;if(l){o=e.contains(l,m)}if(k.events.hasOwnProperty(m)&&a.isFunction(k.events[m])&&!o){return google.maps.event.addListener(j,m,function(){if(!i.$evalAsync){i.$evalAsync=function(){}}return i.$evalAsync(n.apply(i,[j,m,h,arguments]))})}}))}},removeEvents:function(j){var i,h;if(!j){return}for(i in j){h=j[i];if(h){google.maps.event.removeListener(h)}}}}}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapFitHelper",["uiGmapLogger","lodash",function(e,d){return{fit:function(k,h){var j,g,i,l,f;if(h&&(k!=null?k.length:void 0)){j=new google.maps.LatLngBounds();g=false;for(i in k){l=k[i];if(l){if(!g){g=true}f=d.isFunction(l.getPosition)?l.getPosition():l}j.extend(f)}if(g){return h.fitBounds(j)}}}}}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapGmapUtil",["uiGmapLogger","$compile","lodash",function(e,h,k){var l,i,g,f,j,d;i=function(o,m,n){return o===m||n.indexOf(o)!==-1};l=function(m){return i(m,false,["false","FALSE",0,"n","N","no","NO"])};f=function(m){if(Array.isArray(m)&&m.length===2){return m[1]}else{if(a.isDefined(m.type)&&m.type==="Point"){return m.coordinates[1]}else{return m.latitude}}};j=function(m){if(Array.isArray(m)&&m.length===2){return m[0]}else{if(a.isDefined(m.type)&&m.type==="Point"){return m.coordinates[0]}else{return m.longitude}}};g=function(m){if(!m){return}if(Array.isArray(m)&&m.length===2){return new google.maps.LatLng(m[1],m[0])}else{if(a.isDefined(m.type)&&m.type==="Point"){return new google.maps.LatLng(m.coordinates[1],m.coordinates[0])}else{return new google.maps.LatLng(m.latitude,m.longitude)}}};d=function(m){if(a.isUndefined(m)){return false}if(k.isArray(m)){if(m.length===2){return true}}else{if((m!=null)&&(m!=null?m.type:void 0)){if(m.type==="Point"&&k.isArray(m.coordinates)&&m.coordinates.length===2){return true}}}if(m&&a.isDefined((m!=null?m.latitude:void 0)&&a.isDefined(m!=null?m.longitude:void 0))){return true}return false};return{setCoordsFromEvent:function(n,m){if(!n){return}if(Array.isArray(n)&&n.length===2){n[1]=m.lat();n[0]=m.lng()}else{if(a.isDefined(n.type)&&n.type==="Point"){n.coordinates[1]=m.lat();n.coordinates[0]=m.lng()}else{n.latitude=m.lat();n.longitude=m.lng()}}return n},getLabelPositionPoint:function(m){var o,n;if(m===void 0){return void 0}m=/^([-\d\.]+)\s([-\d\.]+)$/.exec(m);o=parseFloat(m[1]);n=parseFloat(m[2]);if((o!=null)&&(n!=null)){return new google.maps.Point(o,n)}},createWindowOptions:function(n,o,p,q){var m;if((p!=null)&&(q!=null)&&(h!=null)){m=a.extend({},q,{content:this.buildContent(o,q,p),position:q.position!=null?q.position:a.isObject(n)?n.getPosition():g(o.coords)});if((n!=null)&&((m!=null?m.pixelOffset:void 0)==null)){if(m.boxClass==null){}else{m.pixelOffset={height:0,width:-2}}}return m}else{if(!q){e.error("infoWindow defaults not defined");if(!p){return e.error("infoWindow content not defined")}}else{return q}}},buildContent:function(o,q,p){var m,n;if(q.content!=null){n=q.content}else{if(h!=null){p=p.replace(/^\s+|\s+$/g,"");m=p===""?"":h(p)(o);if(m.length>0){n=m[0]}}else{n=p}}return n},defaultDelay:50,isTrue:function(m){return i(m,true,["true","TRUE",1,"y","Y","yes","YES"])},isFalse:l,isFalsy:function(m){return i(m,false,[void 0,null])||l(m)},getCoords:g,validateCoords:d,equalCoords:function(n,m){return f(n)===f(m)&&j(n)===j(m)},validatePath:function(p){var q,o,n,m;o=0;if(a.isUndefined(p.type)){if(!Array.isArray(p)||p.length<2){return false}while(o<p.length){if(!((a.isDefined(p[o].latitude)&&a.isDefined(p[o].longitude))||(typeof p[o].lat==="function"&&typeof p[o].lng==="function"))){return false}o++}return true}else{if(a.isUndefined(p.coordinates)){return false}if(p.type==="Polygon"){if(p.coordinates[0].length<4){return false}q=p.coordinates[0]}else{if(p.type==="MultiPolygon"){m={max:0,index:0};k.forEach(p.coordinates,function(s,r){if(s[0].length>this.max){this.max=s[0].length;return this.index=r}},m);n=p.coordinates[m.index];q=n[0];if(q.length<4){return false}}else{if(p.type==="LineString"){if(p.coordinates.length<2){return false}q=p.coordinates}else{return false}}}while(o<q.length){if(q[o].length!==2){return false}o++}return true}},convertPathPoints:function(p){var r,o,q,n,m;o=0;n=new google.maps.MVCArray();if(a.isUndefined(p.type)){while(o<p.length){q;if(a.isDefined(p[o].latitude)&&a.isDefined(p[o].longitude)){q=new google.maps.LatLng(p[o].latitude,p[o].longitude)}else{if(typeof p[o].lat==="function"&&typeof p[o].lng==="function"){q=p[o]}}n.push(q);o++}}else{r;if(p.type==="Polygon"){r=p.coordinates[0]}else{if(p.type==="MultiPolygon"){m={max:0,index:0};k.forEach(p.coordinates,function(t,s){if(t[0].length>this.max){this.max=t[0].length;return this.index=s}},m);r=p.coordinates[m.index][0]}else{if(p.type==="LineString"){r=p.coordinates}}}while(o<r.length){n.push(new google.maps.LatLng(r[o][1],r[o][0]));o++}}return n},getPath:function(m,n){var o;if((n==null)||!k.isString(n)){return n}o=m;k.each(n.split("."),function(p){if(o){return o=o[p]}});return o},validateBoundPoints:function(m){if(a.isUndefined(m.sw.latitude)||a.isUndefined(m.sw.longitude)||a.isUndefined(m.ne.latitude)||a.isUndefined(m.ne.longitude)){return false}return true},convertBoundPoints:function(n){var m;m=new google.maps.LatLngBounds(new google.maps.LatLng(n.sw.latitude,n.sw.longitude),new google.maps.LatLng(n.ne.latitude,n.ne.longitude));return m},fitMapBounds:function(n,m){return n.fitBounds(m)}}}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapIsReady",["$q","$timeout",function(d,e){var i,h,g,f;h=0;f=[];g=function(){return d.all(f)};i=function(k,l,j){return e(function(){if(j<=0){k.reject("Your maps are not found we have checked the maximum amount of times. :)");return}if(h!==l){i(k,l,j-1)}else{k.resolve(g())}},100)};return{spawn:function(){var j;j=d.defer();f.push(j.promise);h+=1;return{instance:h,deferred:j}},promises:g,instances:function(){return h},promise:function(k,j){var l;if(k==null){k=1}if(j==null){j=50}l=d.defer();i(l,k,j);return l.promise},reset:function(){h=0;f.length=0},decrement:function(){if(h>0){h-=1}if(f.length){f.length-=1}}}}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapLinked",["uiGmapBaseObject",function(f){var g;g=(function(h){e(i,h);function i(m,l,k,j){this.scope=m;this.element=l;this.attrs=k;this.ctrls=j}return i})(f);return g}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapLogger",["$log",function(h){var g,d,f,e;g={log:1,info:2,debug:3,warn:4,error:5,none:6};e=function(k,j,i){if(k>=j){return i()}};f=function(i,j){if(h!=null){return h[i](j)}else{return console[i](j)}};d=(function(){function i(){var j;this.doLog=true;j={};["log","info","debug","warn","error"].forEach((function(k){return function(l){return j[l]=function(m){if(k.doLog){return e(g[l],k.currentLevel,function(){return f(l,m)})}}}})(this));this.LEVELS=g;this.currentLevel=g.error;this.log=j.log;this.info=j.info;this.debug=j.debug;this.warn=j.warn;this.error=j.error}i.prototype.spawn=function(){return new i()};i.prototype.setLog=function(j){return h=j};return i})();return new d()}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapModelKey",["uiGmapBaseObject","uiGmapGmapUtil","uiGmapPromise","$q","$timeout","lodash",function(g,m,i,h,k,j){var l;return l=(function(n){e(o,n);function o(p){this.scope=p;this.modelsLength=f(this.modelsLength,this);this.updateChild=f(this.updateChild,this);this.destroy=f(this.destroy,this);this.onDestroy=f(this.onDestroy,this);this.setChildScope=f(this.setChildScope,this);this.getChanges=f(this.getChanges,this);this.getProp=f(this.getProp,this);this.setIdKey=f(this.setIdKey,this);this.modelKeyComparison=f(this.modelKeyComparison,this);o.__super__.constructor.call(this);this["interface"]={};this["interface"].scopeKeys=[];this.defaultIdKey="id";this.idKey=void 0}o.prototype.evalModelHandle=function(p,q){if((p==null)||(q==null)){return}if(q==="self"){return p}else{if(j.isFunction(q)){q=q()}return m.getPath(p,q)}};o.prototype.modelKeyComparison=function(t,s){var p,r,q;p=j.contains(this["interface"].scopeKeys,"coords");if(p&&(this.scope.coords!=null)||!p){q=this.scope}if(q==null){throw"No scope set!"}if(p){r=m.equalCoords(this.scopeOrModelVal("coords",q,t),this.scopeOrModelVal("coords",q,s));if(!r){return r}}r=j.every(j.without(this["interface"].scopeKeys,"coords"),(function(u){return function(v){return u.scopeOrModelVal(q[v],q,t)===u.scopeOrModelVal(q[v],q,s)}})(this));return r};o.prototype.setIdKey=function(p){return this.idKey=p.idKey!=null?p.idKey:this.defaultIdKey};o.prototype.setVal=function(p,q,s){var r;r=this.modelOrKey(p,q);r=s;return p};o.prototype.modelOrKey=function(p,q){if(q==null){return}if(q!=="self"){return m.getPath(p,q)}return p};o.prototype.getProp=function(r,q,p){return this.scopeOrModelVal(r,q,p)};o.prototype.getChanges=function(p,r,s){var u,q,t;if(s){r=j.pick(r,s);p=j.pick(p,s)}q={};t={};u={};for(t in p){if(!r||r[t]!==p[t]){if(j.isArray(p[t])){q[t]=p[t]}else{if(j.isObject(p[t])){u=this.getChanges(p[t],(r?r[t]:null));if(!j.isEmpty(u)){q[t]=u}}else{q[t]=p[t]}}}}return q};o.prototype.scopeOrModelVal=function(q,s,p,w){var t,r,v,u;if(w==null){w=false}t=function(y,x,z){if(z==null){z=false}if(z){return{isScope:y,value:x}}return x};u=j.get(s,q);if(j.isFunction(u)){return t(true,u(p),w)}if(j.isObject(u)){return t(true,u,w)}if(!j.isString(u)){return t(true,u,w)}r=u;if(!r){v=j.get(p,q)}else{v=r==="self"?p:j.get(p,r)}if(j.isFunction(v)){return t(false,v(),w)}return t(false,v,w)};o.prototype.setChildScope=function(u,p,s){var r,t,q,v;for(t in u){q=u[t];r=this.scopeOrModelVal(q,p,s,true);if((r!=null?r.value:void 0)!=null){v=r.value;if(v!==p[q]){p[q]=v}}}return p.model=s};o.prototype.onDestroy=function(p){};o.prototype.destroy=function(p){var q;if(p==null){p=false}if((this.scope!=null)&&!((q=this.scope)!=null?q.$$destroyed:void 0)&&(this.needToManualDestroy||p)){return this.scope.$destroy()}else{return this.clean()}};o.prototype.updateChild=function(q,p){if(p[this.idKey]==null){this.$log.error("Model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");return}return q.updateModel(p)};o.prototype.modelsLength=function(r){var p,q;if(r==null){r=void 0}p=0;q=r?r:this.scope.models;if(q==null){return p}if(a.isArray(q)||(q.length!=null)){p=q.length}else{p=Object.keys(q).length}return p};return o})(g)}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapModelsWatcher",["uiGmapLogger","uiGmap_async","$q","uiGmapPromise",function(g,d,f,e){return{didQueueInitPromise:function(i,h){if(h.models.length===0){d.promiseLock(i,e.promiseTypes.init,null,null,((function(j){return function(){return e.resolve()}})(this)));return true}return false},figureOutState:function(l,q,o,p,j){var k,i,h,m,n;k=[];h={};m=[];n=[];q.models.forEach(function(r){var s;if(r[l]!=null){h[r[l]]={};if(o.get(r[l])==null){return k.push(r)}else{s=o.get(r[l]);if(!p(r,s.clonedModel,q)){return n.push({model:r,child:s})}}}else{return g.error(" id missing for model #{m.toString()},\ncan not use do comparison/insertion")}});i=o.values();i.forEach(function(s){var r;if(s==null){g.error("child undefined in ModelsWatcher.");return}if(s.model==null){g.error("child.model undefined in ModelsWatcher.");return}r=s.model[l];if(h[r]==null){return m.push(s)}});return{adds:k,removals:m,updates:n}}}}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapPromise",["$q","$timeout","uiGmapLogger","lodash",function(j,f,r,n){var l,e,d,g,k,q,i,h,p,o,m;p={create:"create",update:"update","delete":"delete",init:"init"};h={IN_PROGRESS:0,RESOLVED:1,REJECTED:2};m=(function(){var s;s={};s[""+h.IN_PROGRESS]="in-progress";s[""+h.RESOLVED]="resolved";s[""+h.REJECTED]="rejected";return s})();g=function(s){if(s.$$state){return s.$$state.status===h.IN_PROGRESS}if(!s.hasOwnProperty("$$v")){return true}};k=function(s){if(s.$$state){return s.$$state.status===h.RESOLVED}if(s.hasOwnProperty("$$v")){return true}};i=function(s){return m[s]||"done w error"};l=function(v){var t,u,s;t=j.defer();u=j.all([v,t.promise]);s=j.defer();v.then(t.resolve,(function(){}),function(w){t.notify(w);return s.notify(w)});u.then(function(w){return s.resolve(w[0]||w[1])},function(w){return s.reject(w)});s.promise.cancel=function(w){if(w==null){w="canceled"}return t.reject(w)};s.promise.notify=function(w){if(w==null){w="cancel safe"}s.notify(w);if(v.hasOwnProperty("notify")){return v.notify(w)}};if(v.promiseType!=null){s.promise.promiseType=v.promiseType}return s.promise};e=function(t,s){return{promise:t,promiseType:s}};d=function(){return j.defer()};o=function(){var s;s=j.defer();s.resolve.apply(void 0,arguments);return s.promise};q=function(s){var t;if(!n.isFunction(s)){r.error("uiGmapPromise.promise() only accepts functions");return}t=j.defer();f(function(){var u;u=s();return t.resolve(u)});return t.promise};return{defer:d,promise:q,resolve:o,promiseTypes:p,isInProgress:g,isResolved:k,promiseStatus:i,ExposedPromise:l,SniffedPromise:e}}])}).call(this);(function(){var d=function(e,f){return function(){return e.apply(f,arguments)}};a.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapPropMap",["lodash",function(e){var f;return f=(function(){function g(){this.removeAll=d(this.removeAll,this);this.slice=d(this.slice,this);this.push=d(this.push,this);this.keys=d(this.keys,this);this.values=d(this.values,this);this.remove=d(this.remove,this);this.put=d(this.put,this);this.stateChanged=d(this.stateChanged,this);this.get=d(this.get,this);this.length=0;this.dict={};this.didValsStateChange=false;this.didKeysStateChange=false;this.allVals=[];this.allKeys=[]}g.prototype.get=function(h){return this.dict[h]};g.prototype.stateChanged=function(){this.didValsStateChange=true;return this.didKeysStateChange=true};g.prototype.put=function(h,i){if(this.get(h)==null){this.length++}this.stateChanged();return this.dict[h]=i};g.prototype.remove=function(h,j){var i;if(j==null){j=false}if(j&&!this.get(h)){return void 0}i=this.dict[h];delete this.dict[h];this.length--;this.stateChanged();return i};g.prototype.valuesOrKeys=function(j){var h,i;if(j==null){j="Keys"}if(!this["did"+j+"StateChange"]){return this["all"+j]}i=[];h=[];e.each(this.dict,function(m,l){i.push(m);return h.push(l)});this.didKeysStateChange=false;this.didValsStateChange=false;this.allVals=i;this.allKeys=h;return this["all"+j]};g.prototype.values=function(){return this.valuesOrKeys("Vals")};g.prototype.keys=function(){return this.valuesOrKeys()};g.prototype.push=function(i,h){if(h==null){h="key"}return this.put(i[h],i)};g.prototype.slice=function(){return this.keys().map((function(h){return function(i){return h.remove(i)}})(this))};g.prototype.removeAll=function(){return this.slice()};g.prototype.each=function(h){return e.each(this.dict,function(j,i){return h(j)})};g.prototype.map=function(h){return e.map(this.dict,function(j,i){return h(j)})};return g})()}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapPropertyAction",["uiGmapLogger","lodash",function(d,e){var f;f=function(g){this.setIfChange=function(j,i){var h;h=this.exp;if(!e.isEqual(i,j)){return g(h,j)}};this.sic=this.setIfChange;return this};return f}])}).call(this);(function(){var d=function(e,f){return function(){return e.apply(f,arguments)}};a.module("uiGmapgoogle-maps.directives.api.managers").factory("uiGmapClustererMarkerManager",["uiGmapLogger","uiGmapFitHelper","uiGmapPropMap","uiGmapEventsHelper",function(h,g,i,f){var e;e=(function(){j.type="ClustererMarkerManager";function j(m,l,n,k){if(l==null){l={}}this.opt_options=n!=null?n:{};this.opt_events=k;this.checkSync=d(this.checkSync,this);this.getGMarkers=d(this.getGMarkers,this);this.fit=d(this.fit,this);this.destroy=d(this.destroy,this);this.attachEvents=d(this.attachEvents,this);this.clear=d(this.clear,this);this.draw=d(this.draw,this);this.removeMany=d(this.removeMany,this);this.remove=d(this.remove,this);this.addMany=d(this.addMany,this);this.update=d(this.update,this);this.add=d(this.add,this);this.type=j.type;this.clusterer=new NgMapMarkerClusterer(m,l,this.opt_options);this.propMapGMarkers=new i();this.attachEvents(this.opt_events,"opt_events");this.clusterer.setIgnoreHidden(true);this.noDrawOnSingleAddRemoves=true;h.info(this)}j.prototype.checkKey=function(k){var l;if(k.key==null){l="gMarker.key undefined and it is REQUIRED!!";return h.error(l)}};j.prototype.add=function(k){this.checkKey(k);this.clusterer.addMarker(k,this.noDrawOnSingleAddRemoves);this.propMapGMarkers.put(k.key,k);return this.checkSync()};j.prototype.update=function(k){this.remove(k);return this.add(k)};j.prototype.addMany=function(k){return k.forEach((function(l){return function(m){return l.add(m)}})(this))};j.prototype.remove=function(k){var l;this.checkKey(k);l=this.propMapGMarkers.get(k.key);if(l){this.clusterer.removeMarker(k,this.noDrawOnSingleAddRemoves);this.propMapGMarkers.remove(k.key)}return this.checkSync()};j.prototype.removeMany=function(k){return k.forEach((function(l){return function(m){return l.remove(m)}})(this))};j.prototype.draw=function(){return this.clusterer.repaint()};j.prototype.clear=function(){this.removeMany(this.getGMarkers());return this.clusterer.repaint()};j.prototype.attachEvents=function(l,o){var n,k,m;this.listeners=[];if(a.isDefined(l)&&(l!=null)&&a.isObject(l)){m=[];for(k in l){n=l[k];if(l.hasOwnProperty(k)&&a.isFunction(l[k])){h.info(o+": Attaching event: "+k+" to clusterer");m.push(this.listeners.push(google.maps.event.addListener(this.clusterer,k,l[k])))}else{m.push(void 0)}}return m}};j.prototype.clearEvents=function(){f.removeEvents(this.listeners);return this.listeners=[]};j.prototype.destroy=function(){this.clearEvents();return this.clear()};j.prototype.fit=function(){return g.fit(this.getGMarkers(),this.clusterer.getMap())};j.prototype.getGMarkers=function(){return this.clusterer.getMarkers().values()};j.prototype.checkSync=function(){};return j})();return e}])}).call(this);(function(){var d=function(e,f){return function(){return e.apply(f,arguments)}};a.module("uiGmapgoogle-maps.directives.api.managers").factory("uiGmapMarkerManager",["uiGmapLogger","uiGmapFitHelper","uiGmapPropMap",function(e,f,h){var g;g=(function(){i.type="MarkerManager";function i(k,j,l){this.getGMarkers=d(this.getGMarkers,this);this.fit=d(this.fit,this);this.handleOptDraw=d(this.handleOptDraw,this);this.clear=d(this.clear,this);this.destroy=d(this.destroy,this);this.draw=d(this.draw,this);this.removeMany=d(this.removeMany,this);this.remove=d(this.remove,this);this.addMany=d(this.addMany,this);this.update=d(this.update,this);this.add=d(this.add,this);this.type=i.type;this.gMap=k;this.gMarkers=new h();this.$log=e;this.$log.info(this)}i.prototype.add=function(j,l){var k,m;if(l==null){l=true}if(j.key==null){m="gMarker.key undefined and it is REQUIRED!!";e.error(m);throw m}k=this.gMarkers.get(j.key);if(!k){this.handleOptDraw(j,l,true);return this.gMarkers.put(j.key,j)}};i.prototype.update=function(j,k){if(k==null){k=true}this.remove(j,k);return this.add(j,k)};i.prototype.addMany=function(j){return j.forEach((function(k){return function(l){return k.add(l)}})(this))};i.prototype.remove=function(j,k){if(k==null){k=true}this.handleOptDraw(j,k,false);if(this.gMarkers.get(j.key)){return this.gMarkers.remove(j.key)}};i.prototype.removeMany=function(j){return j.forEach((function(k){return function(l){return k.remove(l)}})(this))};i.prototype.draw=function(){var j;j=[];this.gMarkers.each((function(k){return function(l){if(!l.isDrawn){if(l.doAdd){l.setMap(k.gMap);return l.isDrawn=true}else{return j.push(l)}}}})(this));return j.forEach((function(k){return function(l){l.isDrawn=false;return k.remove(l,true)}})(this))};i.prototype.destroy=function(){return this.clear()};i.prototype.clear=function(){this.gMarkers.each(function(j){return j.setMap(null)});delete this.gMarkers;return this.gMarkers=new h()};i.prototype.handleOptDraw=function(j,k,l){if(k===true){if(l){j.setMap(this.gMap)}else{j.setMap(null)}return j.isDrawn=true}else{j.isDrawn=false;return j.doAdd=l}};i.prototype.fit=function(){return f.fit(this.getGMarkers(),this.gMap)};i.prototype.getGMarkers=function(){return this.gMarkers.values()};return i})();return g}])}).call(this);(function(){var d=function(e,f){return function(){return e.apply(f,arguments)}};a.module("uiGmapgoogle-maps.directives.api.managers").factory("uiGmapSpiderfierMarkerManager",["uiGmapLogger","uiGmapFitHelper","uiGmapPropMap","uiGmapMarkerSpiderfier","lodash",function(h,g,j,f,e){var i;return i=(function(){k.type="SpiderfierMarkerManager";function k(n,m,p,l,o){if(m==null){m={}}this.opt_options=p!=null?p:{};this.opt_events=l;this.scope=o;this.checkSync=d(this.checkSync,this);this.isSpiderfied=d(this.isSpiderfied,this);this.getGMarkers=d(this.getGMarkers,this);this.fit=d(this.fit,this);this.destroy=d(this.destroy,this);this.attachEvents=d(this.attachEvents,this);this.clear=d(this.clear,this);this.draw=d(this.draw,this);this.removeMany=d(this.removeMany,this);this.remove=d(this.remove,this);this.addMany=d(this.addMany,this);this.update=d(this.update,this);this.add=d(this.add,this);this.type=k.type;this.markerSpiderfier=new f(n,this.opt_options);this.propMapGMarkers=new j();this.attachEvents(this.opt_events,"opt_events");this.noDrawOnSingleAddRemoves=true;h.info(this)}k.prototype.checkKey=function(l){var m;if(l.key==null){m="gMarker.key undefined and it is REQUIRED!!";return h.error(m)}};k.prototype.add=function(l){l.setMap(this.markerSpiderfier.map);this.checkKey(l);this.markerSpiderfier.addMarker(l,this.noDrawOnSingleAddRemoves);this.propMapGMarkers.put(l.key,l);return this.checkSync()};k.prototype.update=function(l){this.remove(l);return this.add(l)};k.prototype.addMany=function(l){return l.forEach((function(m){return function(n){return m.add(n)}})(this))};k.prototype.remove=function(l){var m;this.checkKey(l);m=this.propMapGMarkers.get(l.key);if(m){l.setMap(null);this.markerSpiderfier.removeMarker(l,this.noDrawOnSingleAddRemoves);this.propMapGMarkers.remove(l.key)}return this.checkSync()};k.prototype.removeMany=function(l){return l.forEach((function(m){return function(n){return m.remove(n)}})(this))};k.prototype.draw=function(){};k.prototype.clear=function(){return this.removeMany(this.getGMarkers())};k.prototype.attachEvents=function(l,m){if(a.isDefined(l)&&(l!=null)&&a.isObject(l)){return e.each(l,(function(n){return function(p,o){if(l.hasOwnProperty(o)&&a.isFunction(l[o])){h.info(m+": Attaching event: "+o+" to markerSpiderfier");return n.markerSpiderfier.addListener(o,function(){if(o==="spiderfy"||o==="unspiderfy"){return n.scope.$evalAsync(l[o].apply(l,arguments))}else{return n.scope.$evalAsync(l[o].apply(l,[arguments[0],o,arguments[0].model,arguments]))}})}}})(this))}};k.prototype.clearEvents=function(m,o){var n,l;if(a.isDefined(m)&&(m!=null)&&a.isObject(m)){for(l in m){n=m[l];if(m.hasOwnProperty(l)&&a.isFunction(m[l])){h.info(o+": Clearing event: "+l+" to markerSpiderfier");this.markerSpiderfier.clearListeners(l)}}}};k.prototype.destroy=function(){this.clearEvents(this.opt_events,"opt_events");return this.clear()};k.prototype.fit=function(){return g.fit(this.getGMarkers(),this.markerSpiderfier.map)};k.prototype.getGMarkers=function(){return this.markerSpiderfier.getMarkers()};k.prototype.isSpiderfied=function(){return e.find(this.getGMarkers(),function(l){return(l!=null?l._omsData:void 0)!=null})};k.prototype.checkSync=function(){};return k})()}])}).call(this);(function(){a.module("uiGmapgoogle-maps").factory("uiGmapadd-events",["$timeout",function(e){var f,d;f=function(i,g,h){return google.maps.event.addListener(i,g,function(){h.apply(this,arguments);return e((function(){}),true)})};d=function(j,h,i){var g;if(i){return f(j,h,i)}g=[];a.forEach(h,function(k,l){return g.push(f(j,l,k))});return function(){a.forEach(g,function(k){return google.maps.event.removeListener(k)});return g=null}};return d}])}).call(this);(function(){a.module("uiGmapgoogle-maps").factory("uiGmaparray-sync",["uiGmapadd-events",function(d){return function(n,p,g,l){var e,h,i,j,f,k,o,q,m;j=false;q=p.$eval(g);if(!p["static"]){f={set_at:function(r){var s;if(j){return}s=n.getAt(r);if(!s){return}if(!s.lng||!s.lat){return q[r]=s}else{q[r].latitude=s.lat();return q[r].longitude=s.lng()}},insert_at:function(r){var s;if(j){return}s=n.getAt(r);if(!s){return}if(!s.lng||!s.lat){return q.splice(r,0,s)}else{return q.splice(r,0,{latitude:s.lat(),longitude:s.lng()})}},remove_at:function(r){if(j){return}return q.splice(r,1)}};e;if(q.type==="Polygon"){e=q.coordinates[0]}else{if(q.type==="LineString"){e=q.coordinates}}h={set_at:function(r){var s;if(j){return}s=n.getAt(r);if(!s){return}if(!s.lng||!s.lat){return}e[r][1]=s.lat();return e[r][0]=s.lng()},insert_at:function(r){var s;if(j){return}s=n.getAt(r);if(!s){return}if(!s.lng||!s.lat){return}return e.splice(r,0,[s.lng(),s.lat()])},remove_at:function(r){if(j){return}return e.splice(r,1)}};o=d(n,a.isUndefined(q.type)?f:h)}k=function(y){var w,x,v,u,s,z,t,r;j=true;z=n;w=false;if(y){x=0;t=z.getLength();u=y.length;v=Math.min(t,u);s=void 0;while(x<v){r=z.getAt(x);s=y[x];if(typeof s.equals==="function"){if(!s.equals(r)){z.setAt(x,s);w=true}}else{if((r.lat()!==s.latitude)||(r.lng()!==s.longitude)){z.setAt(x,new google.maps.LatLng(s.latitude,s.longitude));w=true}}x++}while(x<u){s=y[x];if(typeof s.lat==="function"&&typeof s.lng==="function"){z.push(s)}else{z.push(new google.maps.LatLng(s.latitude,s.longitude))}w=true;x++}while(x<t){z.pop();w=true;x++}}j=false;if(w){return l(z)}};i=function(y){var z,w,x,v,u,s,A,t,r;j=true;A=n;w=false;if(y){z;if(q.type==="Polygon"){z=y.coordinates[0]}else{if(q.type==="LineString"){z=y.coordinates}}x=0;t=A.getLength();u=z.length;v=Math.min(t,u);s=void 0;while(x<v){r=A.getAt(x);s=z[x];if((r.lat()!==s[1])||(r.lng()!==s[0])){A.setAt(x,new google.maps.LatLng(s[1],s[0]));w=true}x++}while(x<u){s=z[x];A.push(new google.maps.LatLng(s[1],s[0]));w=true;x++}while(x<t){A.pop();w=true;x++}}j=false;if(w){return l(A)}};m;if(!p["static"]){if(a.isUndefined(q.type)){m=p.$watchCollection(g,k)}else{m=p.$watch(g,i,true)}}return function(){if(o){o();o=null}if(m){m();return m=null}}}}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapChromeFixes",["$timeout",function(d){return{maybeRepaint:function(e){if(e){e.style.opacity=0.9;return d(function(){return e.style.opacity=1})}}}}])}).call(this);(function(){a.module("uiGmapgoogle-maps").service("uiGmapObjectIterators",["lodash",function(e){var h,g,d,f;h=["length","forEach","map"];g=[];d=function(i){i.forEach=function(j){return e.each(e.omit(i,h),function(k){if(!e.isFunction(k)){return j(k)}})};return i};g.push(d);f=function(i){i.map=function(j){return e.map(e.omit(i,h),function(k){if(!e.isFunction(k)){return j(k)}})};return i};g.push(f);return{slapMap:f,slapForEach:d,slapAll:function(i){g.forEach(function(j){return j(i)});return i}}}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.options.builders").service("uiGmapCommonOptionsBuilder",["uiGmapBaseObject","uiGmapLogger","uiGmapModelKey",function(g,i,h){var j;return j=(function(k){e(l,k);function l(){this.watchProps=f(this.watchProps,this);this.buildOpts=f(this.buildOpts,this);return l.__super__.constructor.apply(this,arguments)}l.prototype.props=["clickable","draggable","editable","visible",{prop:"stroke",isColl:true}];l.prototype.getCorrectModel=function(m){if(a.isDefined(m!=null?m.model:void 0)){return m.model}else{return m}};l.prototype.buildOpts=function(r,n,p){var m,o,q;if(r==null){r={}}if(p==null){p={}}if(!this.scope){i.error("this.scope not defined in CommonOptionsBuilder can not buildOpts");return}if(!this.map){i.error("this.map not defined in CommonOptionsBuilder can not buildOpts");return}m=this.getCorrectModel(this.scope);q=this.scopeOrModelVal("stroke",this.scope,m);o=a.extend(r,this.DEFAULTS,{map:this.map,strokeColor:q!=null?q.color:void 0,strokeOpacity:q!=null?q.opacity:void 0,strokeWeight:q!=null?q.weight:void 0});a.forEach(a.extend(p,{clickable:true,draggable:false,editable:false,"static":false,fit:false,visible:true,zIndex:0,icons:[]}),(function(s){return function(t,u){var v;v=n?n[u]:s.scopeOrModelVal(u,s.scope,m);if(a.isUndefined(v)){return o[u]=t}else{return o[u]=m[u]}}})(this));if(o["static"]){o.editable=false}return o};l.prototype.watchProps=function(m){if(m==null){m=this.props}return m.forEach((function(n){return function(o){if((n.attrs[o]!=null)||(n.attrs[o!=null?o.prop:void 0]!=null)){if(o!=null?o.isColl:void 0){return n.scope.$watchCollection(o.prop,n.setMyOptions)}else{return n.scope.$watch(o,n.setMyOptions)}}}})(this))};return l})(h)}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.options.builders").factory("uiGmapPolylineOptionsBuilder",["uiGmapCommonOptionsBuilder",function(g){var f;return f=(function(i){e(h,i);function h(){return h.__super__.constructor.apply(this,arguments)}h.prototype.buildOpts=function(k,j){return h.__super__.buildOpts.call(this,{path:k},j,{geodesic:false})};return h})(g)}]).factory("uiGmapShapeOptionsBuilder",["uiGmapCommonOptionsBuilder",function(g){var f;return f=(function(i){e(h,i);function h(){return h.__super__.constructor.apply(this,arguments)}h.prototype.buildOpts=function(n,k,l){var m,j;j=this.getCorrectModel(this.scope);m=k?k.fill:this.scopeOrModelVal("fill",this.scope,j);n=a.extend(n,{fillColor:m!=null?m.color:void 0,fillOpacity:m!=null?m.opacity:void 0});return h.__super__.buildOpts.call(this,n,k,l)};return h})(g)}]).factory("uiGmapPolygonOptionsBuilder",["uiGmapShapeOptionsBuilder",function(f){var g;return g=(function(h){e(i,h);function i(){return i.__super__.constructor.apply(this,arguments)}i.prototype.buildOpts=function(k,j){return i.__super__.buildOpts.call(this,{path:k},j,{geodesic:false})};return i})(f)}]).factory("uiGmapRectangleOptionsBuilder",["uiGmapShapeOptionsBuilder",function(f){var g;return g=(function(i){e(h,i);function h(){return h.__super__.constructor.apply(this,arguments)}h.prototype.buildOpts=function(k,j){return h.__super__.buildOpts.call(this,{bounds:k},j)};return h})(f)}]).factory("uiGmapCircleOptionsBuilder",["uiGmapShapeOptionsBuilder",function(g){var f;return f=(function(i){e(h,i);function h(){return h.__super__.constructor.apply(this,arguments)}h.prototype.buildOpts=function(k,j,l){return h.__super__.buildOpts.call(this,{center:k,radius:j},l)};return h})(g)}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.options").service("uiGmapMarkerOptions",["uiGmapLogger","uiGmapGmapUtil","lodash",function(e,f,d){return d.extend(f,{createOptions:function(i,g,k,j){var h;if(k==null){k={}}h=a.extend({},k,{position:k.position!=null?k.position:f.getCoords(i),visible:k.visible!=null?k.visible:f.validateCoords(i)});if((k.icon!=null)||(g!=null)){h=a.extend(h,{icon:k.icon!=null?k.icon:g})}if(j!=null){h.map=j}return h},isLabel:function(g){if(g==null){return false}return(g.labelContent!=null)||(g.labelAnchor!=null)||(g.labelClass!=null)||(g.labelStyle!=null)||(g.labelVisible!=null)}})}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapBasePolyChildModel",["uiGmapLogger","$timeout","uiGmaparray-sync","uiGmapGmapUtil","uiGmapEventsHelper","lodash",function(k,j,g,l,h,i){return function(o,m){var n;return n=(function(p){e(q,p);q.include(l);function q(v,s,x,w,r,u){var t;this.scope=v;this.attrs=s;this.map=x;this.defaults=w;this.model=r;this.clean=f(this.clean,this);this.clonedModel=i.clone(this.model,true);this.isDragging=false;this.internalEvents={dragend:(function(y){return function(){return i.defer(function(){return y.isDragging=false})}})(this),dragstart:(function(y){return function(){return y.isDragging=true}})(this)};t=(function(y){return function(){var z;if(y.isDragging){return}y.pathPoints=y.convertPathPoints(y.scope.path);if(y.gObject!=null){y.clean()}if(y.scope.model!=null){z=y.scope}if(y.pathPoints.length>0){y.gObject=m(y.buildOpts(y.pathPoints,z))}if(y.gObject){g(y.gObject.getPath(),y.scope,"path",function(A){y.pathPoints=A;if(u!=null){return u()}});if(a.isDefined(y.scope.events)&&a.isObject(y.scope.events)){y.listeners=y.model?h.setEvents(y.gObject,y.scope,y.model):h.setEvents(y.gObject,y.scope,y.scope)}return y.internalListeners=y.model?h.setEvents(y.gObject,{events:y.internalEvents},y.model):h.setEvents(y.gObject,{events:y.internalEvents},y.scope)}}})(this);t();this.scope.$watch("path",(function(y){return function(A,z){if(!i.isEqual(A,z)||!y.gObject){return t()}}})(this),true);if(!this.scope["static"]&&a.isDefined(this.scope.editable)){this.scope.$watch("editable",(function(y){return function(B,z){var A;if(B!==z){B=!y.isFalse(B);return(A=y.gObject)!=null?A.setEditable(B):void 0}}})(this),true)}if(a.isDefined(this.scope.draggable)){this.scope.$watch("draggable",(function(y){return function(B,z){var A;if(B!==z){B=!y.isFalse(B);return(A=y.gObject)!=null?A.setDraggable(B):void 0}}})(this),true)}if(a.isDefined(this.scope.visible)){this.scope.$watch("visible",(function(y){return function(B,z){var A;if(B!==z){B=!y.isFalse(B)}return(A=y.gObject)!=null?A.setVisible(B):void 0}})(this),true)}if(a.isDefined(this.scope.geodesic)){this.scope.$watch("geodesic",(function(y){return function(B,z){var A;if(B!==z){B=!y.isFalse(B);return(A=y.gObject)!=null?A.setOptions(y.buildOpts(y.gObject.getPath())):void 0}}})(this),true)}if(a.isDefined(this.scope.stroke)&&a.isDefined(this.scope.stroke.weight)){this.scope.$watch("stroke.weight",(function(y){return function(B,z){var A;if(B!==z){return(A=y.gObject)!=null?A.setOptions(y.buildOpts(y.gObject.getPath())):void 0}}})(this),true)}if(a.isDefined(this.scope.stroke)&&a.isDefined(this.scope.stroke.color)){this.scope.$watch("stroke.color",(function(y){return function(B,z){var A;if(B!==z){return(A=y.gObject)!=null?A.setOptions(y.buildOpts(y.gObject.getPath())):void 0}}})(this),true)}if(a.isDefined(this.scope.stroke)&&a.isDefined(this.scope.stroke.opacity)){this.scope.$watch("stroke.opacity",(function(y){return function(B,z){var A;if(B!==z){return(A=y.gObject)!=null?A.setOptions(y.buildOpts(y.gObject.getPath())):void 0}}})(this),true)}if(a.isDefined(this.scope.icons)){this.scope.$watch("icons",(function(y){return function(B,z){var A;if(B!==z){return(A=y.gObject)!=null?A.setOptions(y.buildOpts(y.gObject.getPath())):void 0}}})(this),true)}this.scope.$on("$destroy",(function(y){return function(){y.clean();return y.scope=null}})(this));if(a.isDefined(this.scope.fill)&&a.isDefined(this.scope.fill.color)){this.scope.$watch("fill.color",(function(y){return function(A,z){if(A!==z){return y.gObject.setOptions(y.buildOpts(y.gObject.getPath()))}}})(this))}if(a.isDefined(this.scope.fill)&&a.isDefined(this.scope.fill.opacity)){this.scope.$watch("fill.opacity",(function(y){return function(A,z){if(A!==z){return y.gObject.setOptions(y.buildOpts(y.gObject.getPath()))}}})(this))}if(a.isDefined(this.scope.zIndex)){this.scope.$watch("zIndex",(function(y){return function(A,z){if(A!==z){return y.gObject.setOptions(y.buildOpts(y.gObject.getPath()))}}})(this))}}q.prototype.clean=function(){var r;h.removeEvents(this.listeners);h.removeEvents(this.internalListeners);if((r=this.gObject)!=null){r.setMap(null)}return this.gObject=null};return q})(o)}}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api.models.child").factory("uiGmapDrawFreeHandChildModel",["uiGmapLogger","$q","lodash",function(h,d,e){var g,f;g=function(m,i,k){var j,l;l=new google.maps.Polyline({map:m,clickable:false});j=google.maps.event.addListener(m,"mousemove",function(n){return l.getPath().push(n.latLng)});google.maps.event.addListenerOnce(m,"mouseup",function(o){var n;google.maps.event.removeListener(j);n=l.getPath();l.setMap(null);i.push(new google.maps.Polygon({map:m,path:n}));l=null;google.maps.event.clearListeners(m.getDiv(),"mousedown");return k()});return void 0};f=function(k,i){var l,j;this.map=k;l=(function(m){return function(){var n;n={draggable:false,disableDefaultUI:true,scrollwheel:false,disableDoubleClickZoom:false};h.info("disabling map move");return m.map.setOptions(n)}})(this);j=(function(m){return function(){var n,o;n={draggable:true,disableDefaultUI:false,scrollwheel:true,disableDoubleClickZoom:true};if((o=m.deferred)!=null){o.resolve()}return e.defer(function(){return m.map.setOptions(e.extend(n,i.options))})}})(this);this.engage=(function(m){return function(n){m.polys=n;m.deferred=d.defer();l();h.info("DrawFreeHandChildModel is engaged (drawing).");google.maps.event.addDomListener(m.map.getDiv(),"mousedown",function(o){return g(m.map,m.polys,j)});return m.deferred.promise}})(this);return this};return f}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.child").factory("uiGmapMarkerChildModel",["uiGmapModelKey","uiGmapGmapUtil","uiGmapLogger","uiGmapEventsHelper","uiGmapPropertyAction","uiGmapMarkerOptions","uiGmapIMarker","uiGmapMarkerManager","uiGmapPromise","lodash",function(p,l,q,k,i,n,j,g,m,o){var h;h=(function(t){var s;e(r,t);r.include(l);r.include(k);r.include(n);s=function(u){if((u!=null?u.gObject:void 0)!=null){u.removeEvents(u.externalListeners);u.removeEvents(u.internalListeners);if(u!=null?u.gObject:void 0){if(u.removeFromManager){u.gManager.remove(u.gObject)}u.gObject.setMap(null);return u.gObject=null}}};function r(E,B,D,v,y,C,z,A,x,u){var w;this.model=B;this.keys=D;this.gMap=v;this.defaults=y;this.doClick=C;this.gManager=z;this.doDrawSelf=A!=null?A:true;this.trackModel=x!=null?x:true;this.needRedraw=u!=null?u:false;this.internalEvents=f(this.internalEvents,this);this.setLabelOptions=f(this.setLabelOptions,this);this.setOptions=f(this.setOptions,this);this.setIcon=f(this.setIcon,this);this.setCoords=f(this.setCoords,this);this.isNotValid=f(this.isNotValid,this);this.maybeSetScopeValue=f(this.maybeSetScopeValue,this);this.createMarker=f(this.createMarker,this);this.setMyScope=f(this.setMyScope,this);this.updateModel=f(this.updateModel,this);this.handleModelChanges=f(this.handleModelChanges,this);this.destroy=f(this.destroy,this);this.clonedModel=o.clone(this.model,true);this.deferred=m.defer();o.each(this.keys,(function(F){return function(H,G){var I;I=F.keys[G];if((I!=null)&&!o.isFunction(I)&&o.isString(I)){return F[G+"Key"]=I}}})(this));this.idKey=this.idKeyKey||"id";if(this.model[this.idKey]!=null){this.id=this.model[this.idKey]}r.__super__.constructor.call(this,E);this.scope.getGMarker=(function(F){return function(){return F.gObject}})(this);this.firstTime=true;if(this.trackModel){this.scope.model=this.model;this.scope.$watch("model",(function(F){return function(H,G){if(H!==G){return F.handleModelChanges(H,G)}}})(this),true)}else{w=new i((function(F){return function(H,G){if(!F.firstTime){return F.setMyScope(H,E)}}})(this),false);o.each(this.keys,function(G,F){return E.$watch(F,w.sic,true)})}this.scope.$on("$destroy",(function(F){return function(){return s(F)}})(this));this.createMarker(this.model);q.info(this)}r.prototype.destroy=function(u){if(u==null){u=true}this.removeFromManager=u;return this.scope.$destroy()};r.prototype.handleModelChanges=function(y,v){var w,x,u;w=this.getChanges(y,v,j.keys);if(!this.firstTime){x=0;u=o.keys(w).length;return o.each(w,(function(z){return function(B,A){var C;x+=1;C=u===x;z.setMyScope(A,y,v,false,true,C);return z.needRedraw=true}})(this))}};r.prototype.updateModel=function(u){this.clonedModel=o.clone(u,true);return this.setMyScope("all",u,this.model)};r.prototype.renderGMarker=function(u,y){var w,x,v;if(u==null){u=true}w=this.getProp("coords",this.scope,this.model);if(((v=this.gManager)!=null?v.isSpiderfied:void 0)!=null){x=this.gManager.isSpiderfied()}if(w!=null){if(!this.validateCoords(w)){q.debug("MarkerChild does not have coords yet. They may be defined later.");return}if(y!=null){y()}if(u&&this.gObject){this.gManager.add(this.gObject)}if(x){return this.gManager.markerSpiderfier.spiderListener(this.gObject,b.event)}}else{if(u&&this.gObject){return this.gManager.remove(this.gObject)}}};r.prototype.setMyScope=function(x,u,z,y,w){var v;if(z==null){z=void 0}if(y==null){y=false}if(w==null){w=true}if(u==null){u=this.model}else{this.model=u}if(!this.gObject){this.setOptions(this.scope,w);v=true}switch(x){case"all":return o.each(this.keys,(function(A){return function(C,B){return A.setMyScope(B,u,z,y,w)}})(this));case"icon":return this.maybeSetScopeValue("icon",u,z,this.iconKey,this.evalModelHandle,y,this.setIcon,w);case"coords":return this.maybeSetScopeValue("coords",u,z,this.coordsKey,this.evalModelHandle,y,this.setCoords,w);case"options":if(!v){return this.createMarker(u,z,y,w)}}};r.prototype.createMarker=function(u,x,w,v){if(x==null){x=void 0}if(w==null){w=false}if(v==null){v=true}this.maybeSetScopeValue("options",u,x,this.optionsKey,this.evalModelHandle,w,this.setOptions,v);return this.firstTime=false};r.prototype.maybeSetScopeValue=function(y,v,B,x,z,A,u,w){if(u==null){u=void 0}if(w==null){w=true}if(u!=null){return u(this.scope,w)}};if(r.doDrawSelf&&doDraw){r.gManager.draw()}r.prototype.isNotValid=function(w,u){var x,v;if(u==null){u=true}v=!u?false:this.gObject===void 0;x=!this.trackModel?w.$id!==this.scope.$id:false;return x||v};r.prototype.setCoords=function(v,u){if(u==null){u=true}if(this.isNotValid(v)||(this.gObject==null)){return}return this.renderGMarker(u,(function(w){return function(){var x,y,z;y=w.getProp("coords",v,w.model);x=w.getCoords(y);z=w.gObject.getPosition();if((z!=null)&&(x!=null)){if(x.lng()===z.lng()&&x.lat()===z.lat()){return}}w.gObject.setPosition(x);return w.gObject.setVisible(w.validateCoords(y))}})(this))};r.prototype.setIcon=function(v,u){if(u==null){u=true}if(this.isNotValid(v)||(this.gObject==null)){return}return this.renderGMarker(u,(function(w){return function(){var y,z,x;x=w.gObject.getIcon();z=w.getProp("icon",v,w.model);if(x===z){return}w.gObject.setIcon(z);y=w.getProp("coords",v,w.model);w.gObject.setPosition(w.getCoords(y));return w.gObject.setVisible(w.validateCoords(y))}})(this))};r.prototype.setOptions=function(v,u){var w;if(u==null){u=true}if(this.isNotValid(v,false)){return}this.renderGMarker(u,(function(x){return function(){var y,A,z;A=x.getProp("coords",v,x.model);z=x.getProp("icon",v,x.model);y=x.getProp("options",v,x.model);x.opts=x.createOptions(A,z,y);if(x.isLabel(x.gObject)!==x.isLabel(x.opts)&&(x.gObject!=null)){x.gManager.remove(x.gObject);x.gObject=void 0}if(x.gObject!=null){x.gObject.setOptions(x.setLabelOptions(x.opts))}if(!x.gObject){if(x.isLabel(x.opts)){x.gObject=new MarkerWithLabel(x.setLabelOptions(x.opts))}else{if(x.opts.content){x.gObject=new RichMarker(x.opts);x.gObject.getIcon=x.gObject.getContent;x.gObject.setIcon=x.gObject.setContent}else{x.gObject=new google.maps.Marker(x.opts)}}o.extend(x.gObject,{model:x.model})}if(x.externalListeners){x.removeEvents(x.externalListeners)}if(x.internalListeners){x.removeEvents(x.internalListeners)}x.externalListeners=x.setEvents(x.gObject,x.scope,x.model,["dragend"]);x.internalListeners=x.setEvents(x.gObject,{events:x.internalEvents(),$evalAsync:function(){}},x.model);if(x.id!=null){return x.gObject.key=x.id}}})(this));if(this.gObject&&(this.gObject.getMap()||this.gManager.type!==g.type)){this.deferred.resolve(this.gObject)}else{if(!this.gObject){return this.deferred.reject("gObject is null")}if(!(((w=this.gObject)!=null?w.getMap():void 0)&&this.gManager.type===g.type)){q.debug("gObject has no map yet");this.deferred.resolve(this.gObject)}}if(this.model[this.fitKey]){return this.gManager.fit()}};r.prototype.setLabelOptions=function(u){if(u.labelAnchor){u.labelAnchor=this.getLabelPositionPoint(u.labelAnchor)}return u};r.prototype.internalEvents=function(){return{dragend:(function(u){return function(w,x,y,A){var z,v,B;v=u.trackModel?u.scope.model:u.model;B=u.setCoordsFromEvent(u.modelOrKey(v,u.coordsKey),u.gObject.getPosition());v=u.setVal(y,u.coordsKey,B);z=u.scope.events;if((z!=null?z.dragend:void 0)!=null){z.dragend(w,x,v,A)}return u.scope.$apply()}})(this),click:(function(u){return function(v,w,x,y){var z;z=u.getProp("click",u.scope,u.model);if(u.doClick&&(z!=null)){return u.scope.$evalAsync(z(v,w,u.model,y))}}})(this)}};return r})(p);return h}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolygonChildModel",["uiGmapBasePolyChildModel","uiGmapPolygonOptionsBuilder",function(j,i){var g,h,f;f=function(k){return new google.maps.Polygon(k)};h=new j(i,f);return g=(function(l){e(k,l);function k(){return k.__super__.constructor.apply(this,arguments)}return k})(h)}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolylineChildModel",["uiGmapBasePolyChildModel","uiGmapPolylineOptionsBuilder",function(j,i){var f,h,g;g=function(k){return new google.maps.Polyline(k)};h=j(i,g);return f=(function(l){e(k,l);function k(){return k.__super__.constructor.apply(this,arguments)}return k})(h)}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.child").factory("uiGmapWindowChildModel",["uiGmapBaseObject","uiGmapGmapUtil","uiGmapLogger","$compile","$http","$templateCache","uiGmapChromeFixes","uiGmapEventsHelper","lodash",function(n,j,p,l,m,i,g,h,o){var k;k=(function(q){e(r,q);r.include(j);r.include(h);function r(B,A,s,v,z,t,w,u,y){var x;this.model=B;this.scope=A;this.opts=s;this.isIconVisibleOnClick=v;this.mapCtrl=z;this.markerScope=t;this.element=w;this.needToManualDestroy=u!=null?u:false;this.markerIsVisibleAfterWindowClose=y!=null?y:true;this.updateModel=f(this.updateModel,this);this.destroy=f(this.destroy,this);this.remove=f(this.remove,this);this.getLatestPosition=f(this.getLatestPosition,this);this.hideWindow=f(this.hideWindow,this);this.showWindow=f(this.showWindow,this);this.handleClick=f(this.handleClick,this);this.watchOptions=f(this.watchOptions,this);this.watchCoords=f(this.watchCoords,this);this.createGWin=f(this.createGWin,this);this.watchElement=f(this.watchElement,this);this.watchAndDoShow=f(this.watchAndDoShow,this);this.doShow=f(this.doShow,this);this.clonedModel=o.clone(this.model,true);this.getGmarker=function(){var D,C;if(((D=this.markerScope)!=null?D.getGMarker:void 0)!=null){return(C=this.markerScope)!=null?C.getGMarker():void 0}};this.listeners=[];this.createGWin();x=this.getGmarker();if(x!=null){x.setClickable(true)}this.watchElement();this.watchOptions();this.watchCoords();this.watchAndDoShow();this.scope.$on("$destroy",(function(C){return function(){return C.destroy()}})(this));p.info(this)}r.prototype.doShow=function(s){if(this.scope.show===true||s){return this.showWindow()}else{return this.hideWindow()}};r.prototype.watchAndDoShow=function(){if(this.model.show!=null){this.scope.show=this.model.show}this.scope.$watch("show",this.doShow,true);return this.doShow()};r.prototype.watchElement=function(){return this.scope.$watch((function(s){return function(){var t,u;if(!(s.element||s.html)){return}if(s.html!==s.element.html()&&s.gObject){if((t=s.opts)!=null){t.content=void 0}u=s.gObject.isOpen();s.remove();return s.createGWin(u)}}})(this))};r.prototype.createGWin=function(v){var u,x,t,w,s;if(v==null){v=false}t=this.getGmarker();x={};if(this.opts!=null){if(this.scope.coords){this.opts.position=this.getCoords(this.scope.coords)}x=this.opts}if(this.element){this.html=o.isObject(this.element)?this.element.html():this.element}u=this.scope.options?this.scope.options:x;this.opts=this.createWindowOptions(t,this.markerScope||this.scope,this.html,u);if(this.opts!=null){if(!this.gObject){if(this.opts.boxClass&&(b.InfoBox&&typeof b.InfoBox==="function")){this.gObject=new b.InfoBox(this.opts)}else{this.gObject=new google.maps.InfoWindow(this.opts)}this.listeners.push(google.maps.event.addListener(this.gObject,"domready",function(){return g.maybeRepaint(this.content)}));this.listeners.push(google.maps.event.addListener(this.gObject,"closeclick",(function(y){return function(){if(t){t.setAnimation(y.oldMarkerAnimation);if(y.markerIsVisibleAfterWindowClose){o.delay(function(){t.setVisible(false);return t.setVisible(y.markerIsVisibleAfterWindowClose)},250)}}y.gObject.close();y.model.show=false;if(y.scope.closeClick!=null){return y.scope.$evalAsync(y.scope.closeClick())}else{return y.scope.$evalAsync()}}})(this)))}this.gObject.setContent(this.opts.content);this.handleClick(((w=this.scope)!=null?(s=w.options)!=null?s.forceClick:void 0:void 0)||v);return this.doShow(this.gObject.isOpen())}};r.prototype.watchCoords=function(){var s;s=this.markerScope!=null?this.markerScope:this.scope;return s.$watch("coords",(function(t){return function(v,u){var w;if(v!==u){if(v==null){t.hideWindow()}else{if(!t.validateCoords(v)){p.error("WindowChildMarker cannot render marker as scope.coords as no position on marker: "+(JSON.stringify(t.model)));return}}w=t.getCoords(v);t.doShow();t.gObject.setPosition(w);if(t.opts){return t.opts.position=w}}}})(this),true)};r.prototype.watchOptions=function(){return this.scope.$watch("options",(function(s){return function(u,t){if(u!==t){s.opts=u;if(s.gObject!=null){s.gObject.setOptions(s.opts);if((s.opts.visible!=null)&&s.opts.visible){return s.showWindow()}else{if(s.opts.visible!=null){return s.hideWindow()}}}}}})(this),true)};r.prototype.handleClick=function(t){var u,s;if(this.gObject==null){return}s=this.getGmarker();u=(function(v){return function(){if(v.gObject==null){v.createGWin()}v.showWindow();if(s!=null){v.initialMarkerVisibility=s.getVisible();v.oldMarkerAnimation=s.getAnimation();return s.setVisible(v.isIconVisibleOnClick)}}})(this);if(t){u()}if(s){return this.listeners=this.listeners.concat(this.setEvents(s,{events:{click:u}},this.model))}};r.prototype.showWindow=function(){var u,s,t;if(this.gObject!=null){s=(function(v){return function(){var x,w,y;if(!v.gObject.isOpen()){w=v.getGmarker();if((v.gObject!=null)&&(v.gObject.getPosition!=null)){y=v.gObject.getPosition()}if(w){y=w.getPosition()}if(!y){return}v.gObject.open(v.mapCtrl,w);x=v.gObject.isOpen();if(v.model.show!==x){return v.model.show=x}}}})(this);if(this.scope.templateUrl){return m.get(this.scope.templateUrl,{cache:i}).then((function(v){return function(w){var y,x;x=v.scope.$new();if(a.isDefined(v.scope.templateParameter)){x.parameter=v.scope.templateParameter}y=l(w.data)(x);v.gObject.setContent(y[0]);return s()}})(this))}else{if(this.scope.template){t=this.scope.$new();if(a.isDefined(this.scope.templateParameter)){t.parameter=this.scope.templateParameter}u=l(this.scope.template)(t);this.gObject.setContent(u[0]);return s()}else{return s()}}}};r.prototype.hideWindow=function(){if((this.gObject!=null)&&this.gObject.isOpen()){return this.gObject.close()}};r.prototype.getLatestPosition=function(t){var s;s=this.getGmarker();if((this.gObject!=null)&&(s!=null)&&!t){return this.gObject.setPosition(s.getPosition())}else{if(t){return this.gObject.setPosition(t)}}};r.prototype.remove=function(){this.hideWindow();this.removeEvents(this.listeners);this.listeners.length=0;delete this.gObject;return delete this.opts};r.prototype.destroy=function(s){var t;if(s==null){s=false}this.remove();if((this.scope!=null)&&!((t=this.scope)!=null?t.$$destroyed:void 0)&&(this.needToManualDestroy||s)){return this.scope.$destroy()}};r.prototype.updateModel=function(s){this.clonedModel=o.clone(s,true);return o.extend(this.model,this.clonedModel)};return r})(n);return k}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapBasePolysParentModel",["$timeout","uiGmapLogger","uiGmapModelKey","uiGmapModelsWatcher","uiGmapPropMap","uiGmap_async","uiGmapPromise","uiGmapFitHelper","lodash",function(h,o,n,g,k,j,i,l,m){return function(q,p,r){var s;return s=(function(t){e(u,t);u.include(g);function u(x,w,v,z,y){this.element=w;this.attrs=v;this.gMap=z;this.defaults=y;this.maybeFit=f(this.maybeFit,this);this.createChild=f(this.createChild,this);this.pieceMeal=f(this.pieceMeal,this);this.createAllNew=f(this.createAllNew,this);this.watchIdKey=f(this.watchIdKey,this);this.createChildScopes=f(this.createChildScopes,this);this.watchDestroy=f(this.watchDestroy,this);this.onDestroy=f(this.onDestroy,this);this.rebuildAll=f(this.rebuildAll,this);this.doINeedToWipe=f(this.doINeedToWipe,this);this.watchModels=f(this.watchModels,this);u.__super__.constructor.call(this,x);this["interface"]=q;this.$log=o;this.plurals=new k();m.each(q.scopeKeys,(function(A){return function(B){return A[B+"Key"]=void 0}})(this));this.models=void 0;this.firstTime=true;this.$log.info(this);this.createChildScopes()}u.prototype.watchModels=function(v){return v.$watch("models",(function(w){return function(y,x){if(y!==x){if(w.doINeedToWipe(y)||v.doRebuildAll){return w.rebuildAll(v,true,true)}else{return w.createChildScopes(false)}}}})(this),true)};u.prototype.doINeedToWipe=function(w){var v;v=w!=null?w.length===0:true;return this.plurals.length>0&&v};u.prototype.rebuildAll=function(w,v,x){return this.onDestroy(x).then((function(y){return function(){if(v){return y.createChildScopes()}}})(this))};u.prototype.onDestroy=function(v){u.__super__.onDestroy.call(this,this.scope);return j.promiseLock(this,i.promiseTypes["delete"],void 0,void 0,(function(w){return function(){return j.each(w.plurals.values(),function(x){return x.destroy(true)},j.chunkSizeFrom(w.scope.cleanchunk,false)).then(function(){var x;return(x=w.plurals)!=null?x.removeAll():void 0})}})(this))};u.prototype.watchDestroy=function(v){return v.$on("$destroy",(function(w){return function(){return w.rebuildAll(v,false,true)}})(this))};u.prototype.createChildScopes=function(v){if(v==null){v=true}if(a.isUndefined(this.scope.models)){this.$log.error("No models to create "+r+"s from! I Need direct models!");return}if((this.gMap==null)||(this.scope.models==null)){return}this.watchIdKey(this.scope);if(v){return this.createAllNew(this.scope,false)}else{return this.pieceMeal(this.scope,false)}};u.prototype.watchIdKey=function(v){this.setIdKey(v);return v.$watch("idKey",(function(w){return function(y,x){if(y!==x&&(y==null)){w.idKey=y;return w.rebuildAll(v,true,true)}}})(this))};u.prototype.createAllNew=function(w,v){var x;if(v==null){v=false}this.models=w.models;if(this.firstTime){this.watchModels(w);this.watchDestroy(w)}if(this.didQueueInitPromise(this,w)){return}x=null;return j.promiseLock(this,i.promiseTypes.create,"createAllNew",(function(y){return x=y}),(function(y){return function(){return j.map(w.models,function(z){var A;A=y.createChild(z,y.gMap);if(x){o.debug("createNew should fall through safely");A.isEnabled=false}x;return A.pathPoints.getArray()},j.chunkSizeFrom(w.chunk)).then(function(z){y.maybeFit(z);return y.firstTime=false})}})(this))};u.prototype.pieceMeal=function(w,v){var y,x;if(v==null){v=true}if(w.$$destroyed){return}y=null;x=null;this.models=w.models;if((w!=null)&&this.modelsLength()&&this.plurals.length){return j.promiseLock(this,i.promiseTypes.update,"pieceMeal",(function(z){return y=z}),(function(z){return function(){return i.promise(function(){return z.figureOutState(z.idKey,w,z.plurals,z.modelKeyComparison)}).then(function(A){x=A;if(x.updates.length){j.each(x.updates,function(B){m.extend(B.child.scope,B.model);return B.child.model=B.model})}return j.each(x.removals,function(B){if(B!=null){B.destroy();z.plurals.remove(B.model[z.idKey]);return y}},j.chunkSizeFrom(w.chunk))}).then(function(){return j.each(x.adds,function(A){if(y){o.debug("pieceMeal should fall through safely")}z.createChild(A,z.gMap);return y},j.chunkSizeFrom(w.chunk)).then(function(){return z.maybeFit()})})}})(this))}else{this.inProgress=false;return this.rebuildAll(this.scope,true,true)}};u.prototype.createChild=function(x,w){var y,v;v=this.scope.$new(false);this.setChildScope(q.scopeKeys,v,x);v.$watch("model",(function(z){return function(B,A){if(B!==A){return z.setChildScope(v,B)}}})(this),true);v["static"]=this.scope["static"];y=new p(v,this.attrs,w,this.defaults,x,(function(z){return function(){return z.maybeFit()}})(this));if(x[this.idKey]==null){this.$log.error(r+" model has no id to assign a child to.\nThis is required for performance. Please assign id,\nor redirect id to a different key.");return}this.plurals.put(x[this.idKey],y);return y};u.prototype.maybeFit=function(v){if(v==null){v=this.plurals.map(function(w){return w.pathPoints})}if(this.scope.fit){v=m.flatten(v);return l.fit(v,this.gMap)}};return u})(n)}}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapCircleParentModel",["uiGmapLogger","$timeout","uiGmapGmapUtil","uiGmapEventsHelper","uiGmapCircleOptionsBuilder","lodash",function(j,i,m,f,l,h){var g,k;k=function(o,n){o.settingFromDirective=true;n();return i(function(){return o.settingFromDirective=false})};return g=(function(o){e(n,o);n.include(m);n.include(f);function n(t,s,p,w,r){var q,u,v;this.attrs=p;this.map=w;this.DEFAULTS=r;this.scope=t;v=null;q=(function(x){return function(){v=null;if(x.listeners!=null){x.removeEvents(x.listeners);return x.listeners=void 0}}})(this);u=new google.maps.Circle(this.buildOpts(m.getCoords(t.center),t.radius));this.setMyOptions=(function(x){return function(y,z){if(t.settingFromDirective){return}if(!h.isEqual(y,z)){return u.setOptions(x.buildOpts(m.getCoords(t.center),t.radius))}}})(this);this.props=this.props.concat([{prop:"center",isColl:true},{prop:"fill",isColl:true},"radius","zIndex"]);this.watchProps();if(this.scope.control!=null){this.scope.control.getCircle=function(){return u}}q();this.listeners=this.setEvents(u,t,t,["radius_changed"])||[];this.listeners.push(google.maps.event.addListener(u,"radius_changed",function(){var y,x;y=u.getRadius();if(y===v){return}v=y;x=function(){return k(t,function(){var A,z;if(y!==t.radius){t.radius=y}if(((A=t.events)!=null?A.radius_changed:void 0)&&h.isFunction((z=t.events)!=null?z.radius_changed:void 0)){return t.events.radius_changed(u,"radius_changed",t,arguments)}})};if(!a.mock){return t.$evalAsync(function(){return x()})}else{return x()}}));this.listeners.push(google.maps.event.addListener(u,"center_changed",function(){return t.$evalAsync(function(){return k(t,function(){if(a.isDefined(t.center.type)){t.center.coordinates[1]=u.getCenter().lat();return t.center.coordinates[0]=u.getCenter().lng()}else{t.center.latitude=u.getCenter().lat();return t.center.longitude=u.getCenter().lng()}})})}));t.$on("$destroy",(function(x){return function(){q();return u.setMap(null)}})(this));j.info(this)}return n})(l)}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapDrawingManagerParentModel",["uiGmapLogger","$timeout","uiGmapBaseObject","uiGmapEventsHelper","lodash",function(k,j,f,h,i){var g;return g=(function(m){e(l,m);l.include(h);function l(q,o,n,s){var r,p;this.scope=q;this.attrs=n;this.map=s;r=new google.maps.drawing.DrawingManager(this.scope.options);r.setMap(this.map);p=void 0;if(this.scope.control!=null){this.scope.control.getDrawingManager=function(){return r}}if(!this.scope["static"]&&this.scope.options){this.scope.$watch("options",function(t){return r!=null?r.setOptions(t):void 0},true)}if(this.scope.events!=null){p=this.setEvents(r,this.scope,this.scope);this.scope.$watch("events",(function(t){return function(v,u){if(!i.isEqual(v,u)){if(p!=null){t.removeEvents(p)}return p=t.setEvents(r,t.scope,t.scope)}}})(this))}this.scope.$on("$destroy",(function(t){return function(){if(p!=null){t.removeEvents(p)}r.setMap(null);return r=null}})(this))}return l})(f)}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapIMarkerParentModel",["uiGmapModelKey","uiGmapLogger","lodash",function(j,h,i){var g;g=(function(l){e(k,l);k.prototype.DEFAULTS={};function k(o,n,m,p){this.scope=o;this.element=n;this.attrs=m;this.map=p;this.onWatch=f(this.onWatch,this);this.watch=f(this.watch,this);this.validateScope=f(this.validateScope,this);k.__super__.constructor.call(this,this.scope);this.$log=h;if(!this.validateScope(this.scope)){throw new String("Unable to construct IMarkerParentModel due to invalid scope")}this.doClick=a.isDefined(this.attrs.click);if(this.scope.options!=null){this.DEFAULTS=this.scope.options}this.watch("coords",this.scope);this.watch("icon",this.scope);this.watch("options",this.scope);this.scope.$on("$destroy",(function(q){return function(){return q.onDestroy(q.scope)}})(this))}k.prototype.validateScope=function(n){var m;if(n==null){this.$log.error(this.constructor.name+": invalid scope used");return false}m=n.coords!=null;if(!m){this.$log.error(this.constructor.name+": no valid coords attribute found");return false}return m};k.prototype.watch=function(o,n,m){if(m==null){m=true}return n.$watch(o,(function(p){return function(r,q){if(!i.isEqual(r,q)){return p.onWatch(o,n,r,q)}}})(this),m)};k.prototype.onWatch=function(p,n,o,m){};return k})(j);return g}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapIWindowParentModel",["uiGmapModelKey","uiGmapGmapUtil","uiGmapLogger",function(h,i,g){var f;return f=(function(k){e(j,k);j.include(i);function j(r,q,n,m,p,o,s,l){j.__super__.constructor.call(this,r);this.$log=g;this.$timeout=p;this.$compile=o;this.$http=s;this.$templateCache=l;this.DEFAULTS={};if(r.options!=null){this.DEFAULTS=r.options}}j.prototype.getItem=function(m,n,l){if(n==="models"){return m[n][l]}return m[n].get(l)};return j})(h)}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapLayerParentModel",["uiGmapBaseObject","uiGmapLogger","$timeout",function(g,h,i){var j;j=(function(k){e(l,k);function l(p,o,n,m,r,q){this.scope=p;this.element=o;this.attrs=n;this.gMap=m;this.onLayerCreated=r!=null?r:void 0;this.$log=q!=null?q:h;this.createGoogleLayer=f(this.createGoogleLayer,this);if(this.attrs.type==null){this.$log.info("type attribute for the layer directive is mandatory. Layer creation aborted!!");return}this.createGoogleLayer();this.doShow=true;if(a.isDefined(this.attrs.show)){this.doShow=this.scope.show}if(this.doShow&&(this.gMap!=null)){this.gObject.setMap(this.gMap)}this.scope.$watch("show",(function(s){return function(u,t){if(u!==t){s.doShow=u;if(u){return s.gObject.setMap(s.gMap)}else{return s.gObject.setMap(null)}}}})(this),true);this.scope.$watch("options",(function(s){return function(u,t){if(u!==t){s.gObject.setMap(null);s.gObject=null;return s.createGoogleLayer()}}})(this),true);this.scope.$on("$destroy",(function(s){return function(){return s.gObject.setMap(null)}})(this))}l.prototype.createGoogleLayer=function(){var m;if(this.attrs.options==null){this.gObject=this.attrs.namespace===void 0?new google.maps[this.attrs.type]():new google.maps[this.attrs.namespace][this.attrs.type]()}else{this.gObject=this.attrs.namespace===void 0?new google.maps[this.attrs.type](this.scope.options):new google.maps[this.attrs.namespace][this.attrs.type](this.scope.options)}if((this.gObject!=null)&&(this.onLayerCreated!=null)){return typeof(m=this.onLayerCreated(this.scope,this.gObject))==="function"?m(this.gObject):void 0}};return l})(g);return j}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapMapTypeParentModel",["uiGmapBaseObject","uiGmapLogger","lodash",function(g,h,i){var j;j=(function(l){e(k,l);function k(p,o,n,m,q){this.scope=p;this.element=o;this.attrs=n;this.gMap=m;this.$log=q!=null?q:h;this.hideOverlay=f(this.hideOverlay,this);this.showOverlay=f(this.showOverlay,this);this.refreshMapType=f(this.refreshMapType,this);this.createMapType=f(this.createMapType,this);if(this.attrs.options==null){this.$log.info("options attribute for the map-type directive is mandatory. Map type creation aborted!!");return}this.id=this.gMap.overlayMapTypesCount=this.gMap.overlayMapTypesCount+1||0;this.doShow=true;this.createMapType();if(a.isDefined(this.attrs.show)){this.doShow=this.scope.show}if(this.doShow&&(this.gMap!=null)){this.showOverlay()}this.scope.$watch("show",(function(r){return function(t,s){if(t!==s){r.doShow=t;if(t){return r.showOverlay()}else{return r.hideOverlay()}}}})(this),true);this.scope.$watch("options",(function(r){return function(t,s){if(!i.isEqual(t,s)){return r.refreshMapType()}}})(this),true);if(a.isDefined(this.attrs.refresh)){this.scope.$watch("refresh",(function(r){return function(t,s){if(!i.isEqual(t,s)){return r.refreshMapType()}}})(this),true)}this.scope.$on("$destroy",(function(r){return function(){r.hideOverlay();return r.mapType=null}})(this))}k.prototype.createMapType=function(){if(this.scope.options.getTile!=null){this.mapType=this.scope.options}else{if(this.scope.options.getTileUrl!=null){this.mapType=new google.maps.ImageMapType(this.scope.options)}else{this.$log.info("options should provide either getTile or getTileUrl methods. Map type creation aborted!!");return}}if(this.attrs.id&&this.scope.id){this.gMap.mapTypes.set(this.scope.id,this.mapType);if(!a.isDefined(this.attrs.show)){this.doShow=false}}return this.mapType.layerId=this.id};k.prototype.refreshMapType=function(){this.hideOverlay();this.mapType=null;this.createMapType();if(this.doShow&&(this.gMap!=null)){return this.showOverlay()}};k.prototype.showOverlay=function(){return this.gMap.overlayMapTypes.push(this.mapType)};k.prototype.hideOverlay=function(){var m;m=false;return this.gMap.overlayMapTypes.forEach((function(n){return function(p,o){if(!m&&p.layerId===n.id){m=true;n.gMap.overlayMapTypes.removeAt(o)}}})(this))};return k})(g);return j}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapMarkersParentModel",["uiGmapIMarkerParentModel","uiGmapModelsWatcher","uiGmapPropMap","uiGmapMarkerChildModel","uiGmap_async","uiGmapClustererMarkerManager","uiGmapMarkerManager","$timeout","uiGmapIMarker","uiGmapPromise","uiGmapGmapUtil","uiGmapLogger","uiGmapSpiderfierMarkerManager","lodash",function(t,h,s,j,q,r,i,k,l,p,n,v,o,u){var g,m;m=function(x,w){w.plurals=new s();w.scope.plurals=w.plurals;return w};g=(function(x){e(w,x);w.include(n);w.include(h);function w(B,A,z,C){this.maybeExecMappedEvent=f(this.maybeExecMappedEvent,this);this.onDestroy=f(this.onDestroy,this);this.newChildMarker=f(this.newChildMarker,this);this.pieceMeal=f(this.pieceMeal,this);this.rebuildAll=f(this.rebuildAll,this);this.createAllNew=f(this.createAllNew,this);this.bindToTypeEvents=f(this.bindToTypeEvents,this);this.createChildScopes=f(this.createChildScopes,this);this.validateScope=f(this.validateScope,this);this.onWatch=f(this.onWatch,this);var y;w.__super__.constructor.call(this,B,A,z,C);this["interface"]=l;y=this;m(new s(),this);this.scope.pluralsUpdate={updateCtr:0};this.$log.info(this);this.doRebuildAll=this.scope.doRebuildAll!=null?this.scope.doRebuildAll:false;this.setIdKey(this.scope);this.scope.$watch("doRebuildAll",(function(D){return function(F,E){if(F!==E){return D.doRebuildAll=F}}})(this));if(!this.modelsLength()){this.modelsRendered=false}this.scope.$watch("models",(function(D){return function(F,E){if(!u.isEqual(F,E)||!D.modelsRendered){if(F.length===0&&E.length===0){return}D.modelsRendered=true;return D.onWatch("models",D.scope,F,E)}}})(this),!this.isTrue(z.modelsbyref));this.watch("doCluster",this.scope);this.watch("type",this.scope);this.watch("clusterOptions",this.scope);this.watch("clusterEvents",this.scope);this.watch("typeOptions",this.scope);this.watch("typeEvents",this.scope);this.watch("fit",this.scope);this.watch("idKey",this.scope);this.gManager=void 0;this.createAllNew(this.scope)}w.prototype.onWatch=function(B,z,A,y){if(B==="idKey"&&A!==y){this.idKey=A}if(this.doRebuildAll||(B==="doCluster"||B==="type")){return this.rebuildAll(z)}else{return this.pieceMeal(z)}};w.prototype.validateScope=function(z){var y;y=a.isUndefined(z.models)||z.models===void 0;if(y){this.$log.error(this.constructor.name+": no valid models attribute found")}return w.__super__.validateScope.call(this,z)||y};w.prototype.createChildScopes=function(y){if((this.gMap==null)||(this.scope.models==null)){return}if(y){return this.createAllNew(this.scope,false)}else{return this.pieceMeal(this.scope,false)}};w.prototype.bindToTypeEvents=function(A,z){var B,y;if(z==null){z=["click","mouseout","mouseover"]}y=this;if(!this.origTypeEvents){this.origTypeEvents={};u.each(z,(function(C){return function(D){return C.origTypeEvents[D]=A!=null?A[D]:void 0}})(this))}else{a.extend(A,this.origTypeEvents)}B={};u.each(z,(function(C){return function(D){return B[D]=function(E){return y.maybeExecMappedEvent(E,D)}}})(this));return a.extend(A,B)};w.prototype.createAllNew=function(z){var C,B,y,A;if(this.gManager!=null){if(this.gManager instanceof o){C=this.gManager.isSpiderfied()}this.gManager.clear();delete this.gManager}y=z.typeEvents||z.clusterEvents;A=z.typeOptions||z.clusterOptions;if(z.doCluster||z.type==="cluster"){if(y!=null){this.bindToTypeEvents(y)}this.gManager=new r(this.map,void 0,A,y)}else{if(z.type==="spider"){if(y!=null){this.bindToTypeEvents(y,["spiderfy","unspiderfy"])}this.gManager=new o(this.map,void 0,A,y,this.scope);if(C){this.gManager.spiderfy()}}else{this.gManager=new i(this.map)}}if(this.didQueueInitPromise(this,z)){return}B=null;return q.promiseLock(this,p.promiseTypes.create,"createAllNew",(function(D){return B=D}),(function(D){return function(){return q.each(z.models,function(E){D.newChildMarker(E,z);return B},q.chunkSizeFrom(z.chunk)).then(function(){D.modelsRendered=true;if(z.fit){D.gManager.fit()}D.gManager.draw();return D.scope.pluralsUpdate.updateCtr+=1},q.chunkSizeFrom(z.chunk))}})(this))};w.prototype.rebuildAll=function(y){var z;if(!y.doRebuild&&y.doRebuild!==void 0){return}if((z=this.scope.plurals)!=null?z.length:void 0){return this.onDestroy(y).then((function(A){return function(){return A.createAllNew(y)}})(this))}else{return this.createAllNew(y)}};w.prototype.pieceMeal=function(y){var A,z;if(y.$$destroyed){return}A=null;z=null;if(this.modelsLength()&&this.scope.plurals.length){return q.promiseLock(this,p.promiseTypes.update,"pieceMeal",(function(B){return A=B}),(function(B){return function(){return p.promise((function(){return B.figureOutState(B.idKey,y,B.scope.plurals,B.modelKeyComparison)})).then(function(C){z=C;return q.each(z.removals,function(D){if(D!=null){if(D.destroy!=null){D.destroy()}B.scope.plurals.remove(D.id);return A}},q.chunkSizeFrom(y.chunk))}).then(function(){return q.each(z.adds,function(C){B.newChildMarker(C,y);return A},q.chunkSizeFrom(y.chunk))}).then(function(){return q.each(z.updates,function(C){B.updateChild(C.child,C.model);return A},q.chunkSizeFrom(y.chunk))}).then(function(){if(z.adds.length>0||z.removals.length>0||z.updates.length>0){y.plurals=B.scope.plurals;if(y.fit){B.gManager.fit()}B.gManager.draw()}return B.scope.pluralsUpdate.updateCtr+=1})}})(this))}else{this.inProgress=false;return this.rebuildAll(y)}};w.prototype.newChildMarker=function(z,A){var D,y,C,B;if(z[this.idKey]==null){this.$log.error("Marker model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");return}this.$log.info("child",D,"markers",this.scope.markerModels);y=A.$new(false);y.events=A.events;B={};l.scopeKeys.forEach(function(E){return B[E]=A[E]});D=new j(y,z,B,this.map,this.DEFAULTS,this.doClick,this.gManager,C=false);this.scope.plurals.put(z[this.idKey],D);return D};w.prototype.onDestroy=function(y){w.__super__.onDestroy.call(this,y);return q.promiseLock(this,p.promiseTypes["delete"],void 0,void 0,(function(z){return function(){return q.each(z.scope.plurals.values(),function(A){if(A!=null){return A.destroy(false)}},q.chunkSizeFrom(z.scope.cleanchunk,false)).then(function(){if(z.gManager!=null){z.gManager.destroy()}z.plurals.removeAll();if(z.plurals!==z.scope.plurals){console.error("plurals out of sync for MarkersParentModel")}return z.scope.pluralsUpdate.updateCtr+=1})}})(this))};w.prototype.maybeExecMappedEvent=function(z,B){var A,y;if(this.scope.$$destroyed){return}y=this.scope.typeEvents||this.scope.clusterEvents;if(u.isFunction(y!=null?y[B]:void 0)){A=this.mapTypeToPlurals(z);if(this.origTypeEvents[B]){return this.origTypeEvents[B](A.group,A.mapped)}}};w.prototype.mapTypeToPlurals=function(B){var z,y,A;if(u.isArray(B)){z=B}else{if(u.isFunction(B.getMarkers)){z=B.getMarkers()}}if(z==null){v.error("Unable to map event as we cannot find the array group to map");return}if((A=this.scope.plurals.values())!=null?A.length:void 0){y=z.map((function(C){return function(D){return C.scope.plurals.get(D.key).model}})(this))}else{y=[]}return{cluster:B,mapped:y,group:B}};w.prototype.getItem=function(z,A,y){if(A==="models"){return z[A][y]}return z[A].get(y)};return w})(t);return g}])}).call(this);(function(){["Polygon","Polyline"].forEach(function(d){return a.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmap"+d+"sParentModel",["uiGmapBasePolysParentModel","uiGmap"+d+"ChildModel","uiGmapI"+d,function(g,f,e){return g(e,f,d)}])})}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapRectangleParentModel",["uiGmapLogger","uiGmapGmapUtil","uiGmapEventsHelper","uiGmapRectangleOptionsBuilder","lodash",function(h,k,f,j,g){var i;return i=(function(l){e(m,l);m.include(k);m.include(f);function m(C,s,A,o,u){var n,v,r,z,w,q,B,x,p,y,t;this.scope=C;this.attrs=A;this.map=o;this.DEFAULTS=u;n=void 0;z=false;p=[];x=void 0;w=(function(D){return function(){if(D.isTrue(D.attrs.fit)){return D.fitMapBounds(D.map,n)}}})(this);r=(function(D){return function(){var G,F,E;if((D.scope.bounds!=null)&&(((G=D.scope.bounds)!=null?G.sw:void 0)!=null)&&(((F=D.scope.bounds)!=null?F.ne:void 0)!=null)&&D.validateBoundPoints(D.scope.bounds)){n=D.convertBoundPoints(D.scope.bounds);return h.info("new new bounds created: "+(JSON.stringify(n)))}else{if((D.scope.bounds.getNorthEast!=null)&&(D.scope.bounds.getSouthWest!=null)){return n=D.scope.bounds}else{if(D.scope.bounds!=null){return h.error("Invalid bounds for newValue: "+(JSON.stringify((E=D.scope)!=null?E.bounds:void 0)))}}}}})(this);r();q=new google.maps.Rectangle(this.buildOpts(n));h.info("gObject (rectangle) created: "+q);y=false;t=(function(D){return function(){var F,G,E;F=q.getBounds();G=F.getNorthEast();E=F.getSouthWest();if(y){return}return D.scope.$evalAsync(function(H){if((H.bounds!=null)&&(H.bounds.sw!=null)&&(H.bounds.ne!=null)){H.bounds.ne={latitude:G.lat(),longitude:G.lng()};H.bounds.sw={latitude:E.lat(),longitude:E.lng()}}if((H.bounds.getNorthEast!=null)&&(H.bounds.getSouthWest!=null)){return H.bounds=F}})}})(this);B=(function(D){return function(){w();D.removeEvents(p);p.push(google.maps.event.addListener(q,"dragstart",function(){return z=true}));p.push(google.maps.event.addListener(q,"dragend",function(){z=false;return t()}));return p.push(google.maps.event.addListener(q,"bounds_changed",function(){if(z){return}return t()}))}})(this);v=(function(D){return function(){D.removeEvents(p);if(x!=null){D.removeEvents(x)}return q.setMap(null)}})(this);if(n!=null){B()}this.scope.$watch("bounds",(function(F,E){var D;if(g.isEqual(F,E)&&(n!=null)||z){return}y=true;if(F==null){v();return}if(n==null){D=true}else{w()}r();q.setBounds(n);y=false;if(D&&(n!=null)){return B()}}),true);this.setMyOptions=(function(D){return function(E,F){if(!g.isEqual(E,F)){if((n!=null)&&(E!=null)){return q.setOptions(D.buildOpts(n))}}}})(this);this.props.push("bounds");this.watchProps(this.props);if(this.attrs.events!=null){x=this.setEvents(q,this.scope,this.scope);this.scope.$watch("events",(function(D){return function(F,E){if(!g.isEqual(F,E)){if(x!=null){D.removeEvents(x)}return x=D.setEvents(q,D.scope,D.scope)}}})(this))}this.scope.$on("$destroy",(function(D){return function(){return v()}})(this));h.info(this)}return m})(j)}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapSearchBoxParentModel",["uiGmapBaseObject","uiGmapLogger","uiGmapEventsHelper","$timeout","$http","$templateCache",function(h,j,i,k,m,g){var l;l=(function(n){e(o,n);o.include(i);function o(u,s,r,q,w,t,v){var p;this.scope=u;this.element=s;this.attrs=r;this.gMap=q;this.ctrlPosition=w;this.template=t;this.$log=v!=null?v:j;this.setVisibility=f(this.setVisibility,this);this.getBounds=f(this.getBounds,this);this.setBounds=f(this.setBounds,this);this.createSearchBox=f(this.createSearchBox,this);this.addToParentDiv=f(this.addToParentDiv,this);this.addAsMapControl=f(this.addAsMapControl,this);this.init=f(this.init,this);if(this.attrs.template==null){this.$log.error("template attribute for the search-box directive is mandatory. Places Search Box creation aborted!!");return}if(a.isUndefined(this.scope.options)){this.scope.options={};this.scope.options.visible=true}if(a.isUndefined(this.scope.options.visible)){this.scope.options.visible=true}if(a.isUndefined(this.scope.options.autocomplete)){this.scope.options.autocomplete=false}this.visible=this.scope.options.visible;this.autocomplete=this.scope.options.autocomplete;p=a.element("<div></div>");p.append(this.template);this.input=p.find("input")[0];this.init()}o.prototype.init=function(){this.createSearchBox();this.scope.$watch("options",(function(p){return function(r,q){if(a.isObject(r)){if(r.bounds!=null){p.setBounds(r.bounds)}if(r.visible!=null){if(p.visible!==r.visible){return p.setVisibility(r.visible)}}}}})(this),true);if(this.attrs.parentdiv!=null){this.addToParentDiv()}else{this.addAsMapControl()}if(this.autocomplete){this.listener=google.maps.event.addListener(this.gObject,"place_changed",(function(p){return function(){return p.places=p.gObject.getPlace()}})(this))}else{this.listener=google.maps.event.addListener(this.gObject,"places_changed",(function(p){return function(){return p.places=p.gObject.getPlaces()}})(this))}this.listeners=this.setEvents(this.gObject,this.scope,this.scope);this.$log.info(this);return this.scope.$on("$destroy",(function(p){return function(){return p.gObject=null}})(this))};o.prototype.addAsMapControl=function(){return this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].push(this.input)};o.prototype.addToParentDiv=function(){this.parentDiv=a.element(document.getElementById(this.scope.parentdiv));return this.parentDiv.append(this.input)};o.prototype.createSearchBox=function(){if(this.autocomplete){return this.gObject=new google.maps.places.Autocomplete(this.input,this.scope.options)}else{return this.gObject=new google.maps.places.SearchBox(this.input,this.scope.options)}};o.prototype.setBounds=function(p){if(a.isUndefined(p.isEmpty)){this.$log.error("Error: SearchBoxParentModel setBounds. Bounds not an instance of LatLngBounds.")}else{if(p.isEmpty()===false){if(this.gObject!=null){return this.gObject.setBounds(p)}}}};o.prototype.getBounds=function(){return this.gObject.getBounds()};o.prototype.setVisibility=function(p){if(this.attrs.parentdiv!=null){if(p===false){this.parentDiv.addClass("ng-hide")}else{this.parentDiv.removeClass("ng-hide")}}else{if(p===false){this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].clear()}else{this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].push(this.input)}}return this.visible=p};return o})(h);return l}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapWindowsParentModel",["uiGmapIWindowParentModel","uiGmapModelsWatcher","uiGmapPropMap","uiGmapWindowChildModel","uiGmapLinked","uiGmap_async","uiGmapLogger","$timeout","$compile","$http","$templateCache","$interpolate","uiGmapPromise","uiGmapIWindow","uiGmapGmapUtil","lodash",function(u,h,s,q,l,r,w,i,p,t,j,o,n,m,k,v){var g;g=(function(y){e(x,y);x.include(h);function x(C,B,A,z,E,D){this.gMap=E;this.markersScope=D;this.modelKeyComparison=f(this.modelKeyComparison,this);this.interpolateContent=f(this.interpolateContent,this);this.setChildScope=f(this.setChildScope,this);this.createWindow=f(this.createWindow,this);this.setContentKeys=f(this.setContentKeys,this);this.pieceMeal=f(this.pieceMeal,this);this.createAllNew=f(this.createAllNew,this);this.watchIdKey=f(this.watchIdKey,this);this.createChildScopes=f(this.createChildScopes,this);this.watchOurScope=f(this.watchOurScope,this);this.watchDestroy=f(this.watchDestroy,this);this.onDestroy=f(this.onDestroy,this);this.rebuildAll=f(this.rebuildAll,this);this.doINeedToWipe=f(this.doINeedToWipe,this);this.watchModels=f(this.watchModels,this);this.go=f(this.go,this);x.__super__.constructor.call(this,C,B,A,z,i,p,t,j);this["interface"]=m;this.plurals=new s();v.each(m.scopeKeys,(function(F){return function(G){return F[G+"Key"]=void 0}})(this));this.linked=new l(C,B,A,z);this.contentKeys=void 0;this.isIconVisibleOnClick=void 0;this.firstTime=true;this.firstWatchModels=true;this.$log.info(self);this.parentScope=void 0;this.go(C)}x.prototype.go=function(z){this.watchOurScope(z);this.doRebuildAll=this.scope.doRebuildAll!=null?this.scope.doRebuildAll:false;z.$watch("doRebuildAll",(function(A){return function(C,B){if(C!==B){return A.doRebuildAll=C}}})(this));return this.createChildScopes()};x.prototype.watchModels=function(A){var z;z=this.markersScope!=null?"pluralsUpdate":"models";return A.$watch(z,(function(B){return function(E,C){var D;if(!v.isEqual(E,C)||B.firstWatchModels){B.firstWatchModels=false;if(B.doRebuildAll||B.doINeedToWipe(A.models)){return B.rebuildAll(A,true,true)}else{D=B.plurals.length===0;if(B.existingPieces!=null){return v.last(B.existingPieces._content).then(function(){return B.createChildScopes(D)})}else{return B.createChildScopes(D)}}}}})(this),true)};x.prototype.doINeedToWipe=function(A){var z;z=A!=null?A.length===0:true;return this.plurals.length>0&&z};x.prototype.rebuildAll=function(A,z,B){return this.onDestroy(B).then((function(C){return function(){if(z){return C.createChildScopes()}}})(this))};x.prototype.onDestroy=function(z){x.__super__.onDestroy.call(this,this.scope);return r.promiseLock(this,n.promiseTypes["delete"],void 0,void 0,(function(A){return function(){return r.each(A.plurals.values(),function(B){return B.destroy()},r.chunkSizeFrom(A.scope.cleanchunk,false)).then(function(){var B;return(B=A.plurals)!=null?B.removeAll():void 0})}})(this))};x.prototype.watchDestroy=function(z){return z.$on("$destroy",(function(A){return function(){A.firstWatchModels=true;A.firstTime=true;return A.rebuildAll(z,false,true)}})(this))};x.prototype.watchOurScope=function(z){return v.each(m.scopeKeys,(function(A){return function(B){var C;C=B+"Key";return A[C]=typeof z[B]==="function"?z[B]():z[B]}})(this))};x.prototype.createChildScopes=function(A){var B,C,z;if(A==null){A=true}this.isIconVisibleOnClick=true;if(a.isDefined(this.linked.attrs.isiconvisibleonclick)){this.isIconVisibleOnClick=this.linked.scope.isIconVisibleOnClick}B=a.isUndefined(this.linked.scope.models);if(B&&(this.markersScope===void 0||(((C=this.markersScope)!=null?C.plurals:void 0)===void 0||((z=this.markersScope)!=null?z.models:void 0)===void 0))){this.$log.error("No models to create windows from! Need direct models or models derived from markers!");return}if(this.gMap!=null){if(this.linked.scope.models!=null){this.watchIdKey(this.linked.scope);if(A){return this.createAllNew(this.linked.scope,false)}else{return this.pieceMeal(this.linked.scope,false)}}else{this.parentScope=this.markersScope;this.watchIdKey(this.parentScope);if(A){return this.createAllNew(this.markersScope,true,"plurals",false)}else{return this.pieceMeal(this.markersScope,true,"plurals",false)}}}};x.prototype.watchIdKey=function(z){this.setIdKey(z);return z.$watch("idKey",(function(A){return function(C,B){if(C!==B&&(C==null)){A.idKey=C;return A.rebuildAll(z,true,true)}}})(this))};x.prototype.createAllNew=function(A,D,C,z){var B;if(C==null){C="models"}if(z==null){z=false}if(this.firstTime){this.watchModels(A);this.watchDestroy(A)}this.setContentKeys(A.models);if(this.didQueueInitPromise(this,A)){return}B=null;return r.promiseLock(this,n.promiseTypes.create,"createAllNew",(function(E){return B=E}),(function(E){return function(){return r.each(A.models,function(F){var G,H;G=D?(H=E.getItem(A,C,F[E.idKey]))!=null?H.gObject:void 0:void 0;if(!B){if(!G&&E.markersScope){w.error("Unable to get gMarker from markersScope!")}E.createWindow(F,G,E.gMap)}return B},r.chunkSizeFrom(A.chunk)).then(function(){return E.firstTime=false})}})(this))};x.prototype.pieceMeal=function(A,E,D,z){var C,B;if(D==null){D="models"}if(z==null){z=true}if(A.$$destroyed){return}C=null;B=null;if((A!=null)&&this.modelsLength()&&this.plurals.length){return r.promiseLock(this,n.promiseTypes.update,"pieceMeal",(function(F){return C=F}),(function(F){return function(){return n.promise((function(){return F.figureOutState(F.idKey,A,F.plurals,F.modelKeyComparison)})).then(function(G){B=G;return r.each(B.removals,function(H){if(H!=null){F.plurals.remove(H.id);if(H.destroy!=null){H.destroy(true)}return C}},r.chunkSizeFrom(A.chunk))}).then(function(){return r.each(B.adds,function(I){var G,H;G=(H=F.getItem(A,D,I[F.idKey]))!=null?H.gObject:void 0;if(!G){throw"Gmarker undefined"}F.createWindow(I,G,F.gMap);return C})}).then(function(){return r.each(B.updates,function(G){F.updateChild(G.child,G.model);return C},r.chunkSizeFrom(A.chunk))})}})(this))}else{w.debug("pieceMeal: rebuildAll");return this.rebuildAll(this.scope,true,true)}};x.prototype.setContentKeys=function(z){if(this.modelsLength(z)){return this.contentKeys=Object.keys(z[0])}};x.prototype.createWindow=function(F,E,C){var A,H,D,z,B,G;H=this.linked.scope.$new(false);this.setChildScope(H,F);H.$watch("model",(function(I){return function(K,J){if(K!==J){return I.setChildScope(H,K)}}})(this),true);D={html:(function(I){return function(){return I.interpolateContent(I.linked.element.html(),F)}})(this)};this.DEFAULTS=this.scopeOrModelVal(this.optionsKey,this.scope,F)||{};z=this.createWindowOptions(E,H,D.html(),this.DEFAULTS);A=new q(F,H,z,this.isIconVisibleOnClick,C,(B=this.markersScope)!=null?(G=B.plurals.get(F[this.idKey]))!=null?G.scope:void 0:void 0,D,false,true);if(F[this.idKey]==null){this.$log.error("Window model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");return}this.plurals.put(F[this.idKey],A);return A};x.prototype.setChildScope=function(z,A){v.each(m.scopeKeys,(function(B){return function(C){var D,E;D=C+"Key";E=B[D]==="self"?A:A[B[D]];if(E!==z[C]){return z[C]=E}}})(this));return z.model=A};x.prototype.interpolateContent=function(F,A){var G,C,D,B,z,E;if(this.contentKeys===void 0||this.contentKeys.length===0){return}G=o(F);D={};E=this.contentKeys;for(C=0,z=E.length;C<z;C++){B=E[C];D[B]=A[B]}return G(D)};x.prototype.modelKeyComparison=function(C,B){var A,z;z=this.scope.coords!=null?this.scope:this.parentScope;if(z==null){throw"No scope or parentScope set!"}A=k.equalCoords(this.evalModelHandle(C,z.coords),this.evalModelHandle(B,z.coords));if(!A){return A}A=v.every(v.without(this["interface"].scopeKeys,"coords"),(function(D){return function(E){return D.evalModelHandle(C,z[E])===D.evalModelHandle(B,z[E])}})(this));return A};return x})(u);return g}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapCircle",["uiGmapICircle","uiGmapCircleParentModel","lodash",function(f,e,d){return d.extend(f,{link:function(i,h,g,j){return j.getScope().deferred.promise.then((function(k){return function(l){return new e(i,h,g,l)}})(this))}})}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapControl",["uiGmapIControl","$http","$templateCache","$compile","$controller","uiGmapGoogleMapApi",function(i,m,h,j,g,l){var k;return k=(function(n){e(o,n);function o(){this.link=f(this.link,this);o.__super__.constructor.call(this)}o.prototype.link=function(r,q,p,s){return l.then((function(t){return function(w){var v,u;if(a.isUndefined(r.template)){t.$log.error("mapControl: could not find a valid template property");return}v=a.isDefined(r.index&&!isNaN(parseInt(r.index)))?parseInt(r.index):void 0;u=a.isDefined(r.position)?r.position.toUpperCase().replace(/-/g,"_"):"TOP_CENTER";if(!w.ControlPosition[u]){t.$log.error("mapControl: invalid position property");return}return i.mapPromise(r,s).then(function(z){var y,x;y=void 0;x=a.element("<div></div>");return m.get(r.template,{cache:h}).success(function(B){var A,C;C=r.$new();x.append(B);if(a.isDefined(r.controller)){A=g(r.controller,{$scope:C});x.children().data("$ngControllerController",A)}y=j(x.children())(C);if(v){return y[0].index=v}}).error(function(A){return t.$log.error("mapControl: template could not be found")}).then(function(){return z.controls[google.maps.ControlPosition[u]].push(y[0])})})}})(this))};return o})(i)}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api").service("uiGmapDragZoom",["uiGmapCtrlHandle","uiGmapPropertyAction","lodash",function(d,f,e){return{restrict:"EMA",transclude:true,template:'<div class="angular-google-map-dragzoom" ng-transclude style="display: none"></div>',require:"^uiGmapGoogleMap",scope:{keyboardkey:"=",options:"=",spec:"="},controller:["$scope","$element",function(h,g){h.ctrlType="uiGmapDragZoom";return e.extend(this,d.handle(h,g))}],link:function(i,h,g,j){return d.mapPromise(i,j).then(function(n){var m,l,k;m=function(o){n.enableKeyDragZoom(o);if(i.spec){return i.spec.enableKeyDragZoom(o)}};l=new f(function(p,o){if(o){return m({key:o})}else{return m()}});k=new f(function(p,o){if(o){return m(o)}});i.$watch("keyboardkey",l.sic);l.sic(i.keyboardkey);i.$watch("options",k.sic);return k.sic(i.options)})}}}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapDrawingManager",["uiGmapIDrawingManager","uiGmapDrawingManagerParentModel",function(e,d){return _.extend(e,{link:function(h,g,f,i){return i.getScope().deferred.promise.then(function(j){return new d(h,g,f,j)})}})}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapApiFreeDrawPolygons",["uiGmapLogger","uiGmapBaseObject","uiGmapCtrlHandle","uiGmapDrawFreeHandChildModel","uiGmapLodash",function(k,g,h,l,i){var j;return j=(function(m){e(n,m);function n(){this.link=f(this.link,this);return n.__super__.constructor.apply(this,arguments)}n.include(h);n.prototype.restrict="EMA";n.prototype.replace=true;n.prototype.require="^uiGmapGoogleMap";n.prototype.scope={polygons:"=",draw:"="};n.prototype.link=function(q,p,o,r){return this.mapPromise(q,r).then((function(s){return function(u){var v,t;if(!q.polygons){return k.error("No polygons to bind to!")}if(!_.isArray(q.polygons)){return k.error("Free Draw Polygons must be of type Array!")}v=new l(u,r.getScope());t=void 0;return q.draw=function(){if(typeof t==="function"){t()}return v.engage(q.polygons).then(function(){var w;w=true;return t=q.$watchCollection("polygons",function(z,x){var y;if(w||z===x){w=false;return}y=i.differenceObjects(x,z);return y.forEach(function(A){return A.setMap(null)})})})}}})(this))};return n})(g)}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api").service("uiGmapICircle",[function(){var d;d={};return{restrict:"EA",replace:true,require:"^uiGmapGoogleMap",scope:{center:"=center",radius:"=radius",stroke:"=stroke",fill:"=fill",clickable:"=",draggable:"=",editable:"=",geodesic:"=",icons:"=icons",visible:"=",events:"=",control:"=",zIndex:"=zindex"}}}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIControl",["uiGmapBaseObject","uiGmapLogger","uiGmapCtrlHandle",function(g,i,h){var f;return f=(function(k){e(j,k);j.extend(h);function j(){this.restrict="EA";this.replace=true;this.require="^uiGmapGoogleMap";this.scope={template:"@template",position:"@position",controller:"@controller",index:"@index"};this.$log=i}j.prototype.link=function(n,m,l,o){throw new Exception("Not implemented!!")};return j})(g)}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api").service("uiGmapIDrawingManager",[function(){return{restrict:"EA",replace:true,require:"^uiGmapGoogleMap",scope:{"static":"@",control:"=",options:"=",events:"="}}}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIMarker",["uiGmapBaseObject","uiGmapCtrlHandle","lodash",function(f,g,h){var i;return i=(function(j){e(k,j);k.scope={coords:"=coords",icon:"=icon",click:"&click",options:"=options",events:"=events",fit:"=fit",idKey:"=idkey",control:"=control"};k.scopeKeys=h.keys(k.scope);k.keys=k.scopeKeys;k.extend(g);function k(){this.restrict="EMA";this.require="^uiGmapGoogleMap";this.priority=-1;this.transclude=true;this.replace=true;this.scope=h.extend(this.scope||{},k.scope)}return k})(f)}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIPolygon",["uiGmapGmapUtil","uiGmapBaseObject","uiGmapLogger","uiGmapCtrlHandle","lodash",function(k,f,h,g,i){var j;return j=(function(l){e(m,l);m.scope={path:"=path",stroke:"=stroke",clickable:"=",draggable:"=",editable:"=",geodesic:"=",fill:"=",icons:"=icons",visible:"=","static":"=",events:"=",zIndex:"=zindex",fit:"=",control:"=control"};m.scopeKeys=i.keys(m.scope);m.include(k);m.extend(g);function m(){}m.prototype.restrict="EMA";m.prototype.replace=true;m.prototype.require="^uiGmapGoogleMap";m.prototype.scope=m.scope;m.prototype.DEFAULTS={};m.prototype.$log=h;return m})(f)}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIPolyline",["uiGmapGmapUtil","uiGmapBaseObject","uiGmapLogger","uiGmapCtrlHandle","lodash",function(k,f,h,g,i){var j;return j=(function(l){e(m,l);m.scope={path:"=",stroke:"=",clickable:"=",draggable:"=",editable:"=",geodesic:"=",icons:"=",visible:"=","static":"=",fit:"=",events:"=",zIndex:"=zindex"};m.scopeKeys=i.keys(m.scope);m.include(k);m.extend(g);function m(){}m.prototype.restrict="EMA";m.prototype.replace=true;m.prototype.require="^uiGmapGoogleMap";m.prototype.scope=m.scope;m.prototype.DEFAULTS={};m.prototype.$log=h;return m})(f)}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api").service("uiGmapIRectangle",[function(){var d;d={};return{restrict:"EMA",require:"^uiGmapGoogleMap",replace:true,scope:{bounds:"=",stroke:"=",clickable:"=",draggable:"=",editable:"=",fill:"=",visible:"=",events:"="}}}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIWindow",["uiGmapBaseObject","uiGmapChildEvents","uiGmapCtrlHandle","lodash",function(f,j,g,i){var h;return h=(function(l){e(k,l);k.scope={coords:"=coords",template:"=template",templateUrl:"=templateurl",templateParameter:"=templateparameter",isIconVisibleOnClick:"=isiconvisibleonclick",closeClick:"&closeclick",options:"=options",control:"=control",show:"=show"};k.scopeKeys=i.keys(k.scope);k.include(j);k.extend(g);function k(){this.restrict="EMA";this.template=void 0;this.transclude=true;this.priority=-100;this.require="^uiGmapGoogleMap";this.replace=true;this.scope=i.extend(this.scope||{},k.scope)}return k})(f)}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapMap",["$timeout","$q","uiGmapLogger","uiGmapGmapUtil","uiGmapBaseObject","uiGmapCtrlHandle","uiGmapIsReady","uiGmapuuid","uiGmapExtendGWin","uiGmapExtendMarkerClusterer","uiGmapGoogleMapsUtilV3","uiGmapGoogleMapApi","uiGmapEventsHelper","lodash",function(k,q,w,m,t,r,n,h,p,j,g,u,l,v){var o,i,s;o=void 0;s=[g,p,j];return i=(function(y){e(x,y);x.include(m);function x(){this.link=f(this.link,this);var A,z;A=function(C){var B,D;D=void 0;C.$on("$destroy",function(){return n.decrement()});B=r.handle(C);C.ctrlType="Map";C.deferred.promise.then(function(){return s.forEach(function(E){return E.init()})});B.getMap=function(){return C.map};D=v.extend(this,B);return D};this.controller=["$scope",A];z=this}x.prototype.restrict="EMA";x.prototype.transclude=true;x.prototype.replace=false;x.prototype.template='<div class="angular-google-map"><div class="angular-google-map-container"></div><div ng-transclude style="display: none"></div></div>';x.prototype.scope={center:"=",zoom:"=",dragging:"=",control:"=",options:"=",events:"=",eventOpts:"=",styles:"=",bounds:"=",update:"="};x.prototype.link=function(D,B,A){var C,z;C=[];D.$on("$destroy",function(){return l.removeEvents(C)});D.idleAndZoomChanged=false;if(D.center==null){z=D.$watch("center",(function(E){return function(){if(!D.center){return}z();return E.link(D,B,A)}})(this));return}return u.then((function(E){return function(P){var H,U,L,R,F,J,S,V,Q,N,K,O,T,W,I,M,G;o={mapTypeId:P.MapTypeId.ROADMAP};W=n.spawn();O=function(){return W.deferred.resolve({instance:W.instance,map:H})};if(!E.validateCoords(D.center)){w.error("angular-google-maps: could not find a valid center property");return}if(!a.isDefined(D.zoom)){w.error("angular-google-maps: map zoom property not set");return}F=a.element(B);F.addClass("angular-google-map");N={options:{}};if(A.options){N.options=D.options}if(A.styles){N.styles=D.styles}if(A.type){I=A.type.toUpperCase();if(google.maps.MapTypeId.hasOwnProperty(I)){N.mapTypeId=google.maps.MapTypeId[A.type.toUpperCase()]}else{w.error("angular-google-maps: invalid map type '"+A.type+"'")}}V=a.extend({},o,N,{center:E.getCoords(D.center),zoom:D.zoom,bounds:D.bounds});H=new google.maps.Map(F.find("div")[1],V);H.uiGmap_id=h.generate();R=false;C.push(google.maps.event.addListenerOnce(H,"idle",function(){D.deferred.resolve(H);return O()}));L=A.events&&(((K=D.events)!=null?K.blacklist:void 0)!=null)?D.events.blacklist:[];if(v.isString(L)){L=[L]}Q=function(X,Y,Z){if(!v.contains(L,X)){if(Z){Z()}return C.push(google.maps.event.addListener(H,X,function(){var aa;if(!((aa=D.update)!=null?aa.lazy:void 0)){return Y()}}))}};if(!v.contains(L,"all")){Q("dragstart",function(){R=true;return D.$evalAsync(function(X){if(X.dragging!=null){return X.dragging=R}})});Q("dragend",function(){R=false;return D.$evalAsync(function(X){if(X.dragging!=null){return X.dragging=R}})});M=function(Y,X){if(Y==null){Y=H.center}if(X==null){X=D}if(v.contains(L,"center")){return}if(a.isDefined(X.center.type)){if(X.center.coordinates[1]!==Y.lat()){X.center.coordinates[1]=Y.lat()}if(X.center.coordinates[0]!==Y.lng()){return X.center.coordinates[0]=Y.lng()}}else{if(X.center.latitude!==Y.lat()){X.center.latitude=Y.lat()}if(X.center.longitude!==Y.lng()){return X.center.longitude=Y.lng()}}};T=false;Q("idle",function(){var Y,Z,X;Y=H.getBounds();Z=Y.getNorthEast();X=Y.getSouthWest();T=true;return D.$evalAsync(function(aa){M();if(aa.bounds!==null&&aa.bounds!==c&&aa.bounds!==void 0&&!v.contains(L,"bounds")){aa.bounds.northeast={latitude:Z.lat(),longitude:Z.lng()};aa.bounds.southwest={latitude:X.lat(),longitude:X.lng()}}if(!v.contains(L,"zoom")){aa.zoom=H.zoom;D.idleAndZoomChanged=!D.idleAndZoomChanged}return T=false})})}if(a.isDefined(D.events)&&D.events!==null&&a.isObject(D.events)){S=function(X){return function(){return D.events[X].apply(D,[H,X,arguments])}};U=[];for(J in D.events){if(D.events.hasOwnProperty(J)&&a.isFunction(D.events[J])){U.push(google.maps.event.addListener(H,J,S(J)))}}C.concat(U)}H.getOptions=function(){return V};D.map=H;if((A.control!=null)&&(D.control!=null)){D.control.refresh=function(aa){var Z,Y,X;if(H==null){return}if(((typeof google!=="undefined"&&google!==null?(Y=google.maps)!=null?(X=Y.event)!=null?X.trigger:void 0:void 0:void 0)!=null)&&(H!=null)){google.maps.event.trigger(H,"resize")}if(((aa!=null?aa.latitude:void 0)!=null)&&((aa!=null?aa.longitude:void 0)!=null)){Z=E.getCoords(aa);if(E.isTrue(A.pan)){return H.panTo(Z)}else{return H.setCenter(Z)}}};D.control.getGMap=function(){return H};D.control.getMapOptions=function(){return V};D.control.getCustomEventListeners=function(){return U};D.control.removeEvents=function(X){return l.removeEvents(X)}}D.$watch("center",function(aa,X){var Z,Y;if(aa===X||T){return}Z=E.getCoords(D.center);if(Z.lat()===H.center.lat()&&Z.lng()===H.center.lng()){return}Y=true;if(!R){if(!E.validateCoords(aa)){w.error("Invalid center for newValue: "+(JSON.stringify(aa)))}if(E.isTrue(A.pan)&&D.zoom===H.zoom){H.panTo(Z)}else{H.setCenter(Z)}}return Y=false},true);G=null;D.$watch("zoom",function(ab,Z){var Y,X,aa;if(ab==null){return}if(v.isEqual(ab,Z)||(H!=null?H.getZoom():void 0)===(D!=null?D.zoom:void 0)||T){return}aa=true;if(G!=null){k.cancel(G)}return G=k(function(){H.setZoom(ab);return aa=false},((Y=D.eventOpts)!=null?(X=Y.debounce)!=null?X.zoomMs:void 0:void 0)+20,false)});D.$watch("bounds",function(Z,Y){var X,aa,ae,ad,ac,ab,af;if(Z===Y){return}if(((Z!=null?(ae=Z.northeast)!=null?ae.latitude:void 0:void 0)==null)||((Z!=null?(ad=Z.northeast)!=null?ad.longitude:void 0:void 0)==null)||((Z!=null?(ac=Z.southwest)!=null?ac.latitude:void 0:void 0)==null)||((Z!=null?(ab=Z.southwest)!=null?ab.longitude:void 0:void 0)==null)){w.error("Invalid map bounds for new value: "+(JSON.stringify(Z)));return}aa=new google.maps.LatLng(Z.northeast.latitude,Z.northeast.longitude);af=new google.maps.LatLng(Z.southwest.latitude,Z.southwest.longitude);X=new google.maps.LatLngBounds(af,aa);return H.fitBounds(X)});return["options","styles"].forEach(function(X){return D.$watch(X,function(aa,Z){var Y;Y=this.exp;if(v.isEqual(aa,Z)){return}if(Y==="options"){N.options=aa}else{N.options[Y]=aa}if(H!=null){return H.setOptions(N)}},true)})}})(this))};return x})(t)}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapMarker",["uiGmapIMarker","uiGmapMarkerChildModel","uiGmapMarkerManager","uiGmapLogger","lodash",function(l,i,k,j,h){var g;return g=(function(n){e(m,n);function m(){this.link=f(this.link,this);m.__super__.constructor.call(this);this.template='<span class="angular-google-map-marker" ng-transclude></span>';j.info(this)}m.prototype.controller=["$scope","$element",function(p,o){p.ctrlType="Marker";return h.extend(this,l.handle(p,o))}];m.prototype.link=function(q,p,o,r){var s;s=l.mapPromise(q,r);s.then((function(t){return function(y){var z,x,w,v,u,A;w=new k(y);v=h.object(l.keys,l.keys);u=new i(q,q,v,y,{},z=true,w,x=false,A=false);u.deferred.promise.then(function(B){return q.deferred.resolve(B)});if(q.control!=null){return q.control.getGMarkers=w.getGMarkers}}})(this));return q.$on("$destroy",(function(t){return function(){var u;if(typeof u!=="undefined"&&u!==null){u.clear()}return u=null}})(this))};return m})(l)}])}).call(this);(function(){var e=function(i,g){for(var f in g){if(d.call(g,f)){i[f]=g[f]}}function h(){this.constructor=i}h.prototype=g.prototype;i.prototype=new h();i.__super__=g.prototype;return i},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapMarkers",["uiGmapIMarker","uiGmapPlural","uiGmapMarkersParentModel","uiGmap_sync","uiGmapLogger","lodash",function(l,g,f,i,k,h){var j;return j=(function(m){e(n,m);function n(){n.__super__.constructor.call(this);this.template='<span class="angular-google-map-markers" ng-transclude></span>';g.extend(this,{doCluster:"=?docluster",clusterOptions:"=clusteroptions",clusterEvents:"=clusterevents",modelsByRef:"=modelsbyref",type:"=?type",typeOptions:"=?typeoptions",typeEvents:"=?typeevents"});k.info(this)}n.prototype.controller=["$scope","$element",function(p,o){p.ctrlType="Markers";return h.extend(this,l.handle(p,o))}];n.prototype.link=function(s,q,p,t){var o,r;o=void 0;r=function(){return s.deferred.resolve()};return l.mapPromise(s,t).then(function(v){var u;u=t.getScope();u.$watch("idleAndZoomChanged",function(){return h.defer(o.gManager.draw)});o=new f(s,q,p,v);g.link(s,o);if(s.control!=null){s.control.getGMarkers=function(){var w;return(w=o.gManager)!=null?w.getGMarkers():void 0};s.control.getChildMarkers=function(){return o.plurals}}return h.last(o.existingPieces._content).then(function(){return r()})})};return n})(l)}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api").service("uiGmapPlural",["lodash",function(d){var e;e=function(g,f){if(g.control==null){return}g.control.updateModels=function(h){g.models=h;return f.createChildScopes(false)};g.control.newModels=function(h){g.models=h;return f.rebuildAll(g,true,true)};g.control.clean=function(){return f.rebuildAll(g,false,true)};g.control.getPlurals=function(){return f.plurals};g.control.getManager=function(){return f.gManager};g.control.hasManager=function(){return(f.gManager!=null)===true};return g.control.managerDraw=function(){var h;if(g.control.hasManager()){return(h=g.control.getManager())!=null?h.draw():void 0}}};return{extend:function(g,f){return d.extend(g.scope||{},f||{},{idKey:"=idkey",doRebuildAll:"=dorebuildall",models:"=models",chunk:"=chunk",cleanchunk:"=cleanchunk",control:"=control"})},link:function(g,f){return e(g,f)}}}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolygon",["uiGmapIPolygon","$timeout","uiGmapPolygonChildModel",function(i,h,j){var g;return g=(function(l){e(k,l);function k(){this.link=f(this.link,this);return k.__super__.constructor.apply(this,arguments)}k.prototype.link=function(p,o,m,r){var n,q;n=[];q=i.mapPromise(p,r);if(p.control!=null){p.control.getInstance=this;p.control.polygons=n;p.control.promise=q}return q.then((function(s){return function(t){return n.push(new j(p,m,t,s.DEFAULTS))}})(this))};return k})(i)}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolygons",["uiGmapIPolygon","$timeout","uiGmapPolygonsParentModel","uiGmapPlural",function(j,i,k,h){var g;return g=(function(m){e(l,m);function l(){this.link=f(this.link,this);l.__super__.constructor.call(this);h.extend(this);this.$log.info(this)}l.prototype.link=function(p,o,n,q){return q.getScope().deferred.promise.then((function(r){return function(s){if(a.isUndefined(p.path)||p.path===null){r.$log.warn("polygons: no valid path attribute found")}if(!p.models){r.$log.warn("polygons: no models found to create from")}return h.link(p,new k(p,o,n,s,r.DEFAULTS))}})(this))};return l})(j)}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolyline",["uiGmapIPolyline","$timeout","uiGmapPolylineChildModel",function(j,i,g){var h;return h=(function(l){e(k,l);function k(){this.link=f(this.link,this);return k.__super__.constructor.apply(this,arguments)}k.prototype.link=function(o,n,m,p){return j.mapPromise(o,p).then((function(q){return function(r){if(a.isUndefined(o.path)||o.path===null||!q.validatePath(o.path)){q.$log.warn("polyline: no valid path attribute found")}return new g(o,m,r,q.DEFAULTS)}})(this))};return k})(j)}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolylines",["uiGmapIPolyline","$timeout","uiGmapPolylinesParentModel","uiGmapPlural",function(k,i,j,g){var h;return h=(function(m){e(l,m);function l(){this.link=f(this.link,this);l.__super__.constructor.call(this);g.extend(this);this.$log.info(this)}l.prototype.link=function(p,o,n,q){return q.getScope().deferred.promise.then((function(r){return function(s){if(a.isUndefined(p.path)||p.path===null){r.$log.warn("polylines: no valid path attribute found")}if(!p.models){r.$log.warn("polylines: no models found to create from")}return g.link(p,new j(p,o,n,s,r.DEFAULTS))}})(this))};return l})(k)}])}).call(this);(function(){a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapRectangle",["uiGmapLogger","uiGmapGmapUtil","uiGmapIRectangle","uiGmapRectangleParentModel",function(d,g,f,e){return _.extend(f,{link:function(j,i,h,k){return k.getScope().deferred.promise.then((function(l){return function(m){return new e(j,i,h,m)}})(this))}})}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapWindow",["uiGmapIWindow","uiGmapGmapUtil","uiGmapWindowChildModel","uiGmapLodash","uiGmapLogger",function(h,l,k,g,j){var i;return i=(function(n){e(m,n);m.include(l);function m(){this.link=f(this.link,this);m.__super__.constructor.call(this);this.require=["^uiGmapGoogleMap","^?uiGmapMarker"];this.template='<span class="angular-google-maps-window" ng-transclude></span>';j.debug(this);this.childWindows=[]}m.prototype.link=function(t,s,r,o){var p,q;p=o.length>1&&(o[1]!=null)?o[1]:void 0;q=p!=null?p.getScope():void 0;this.mapPromise=h.mapPromise(t,o[0]);return this.mapPromise.then((function(u){return function(w){var v;v=true;if(a.isDefined(r.isiconvisibleonclick)){v=t.isIconVisibleOnClick}if(!p){u.init(t,s,v,w);return}return q.deferred.promise.then(function(x){return u.init(t,s,v,w,q)})}})(this))};m.prototype.init=function(x,t,s,v,p){var w,r,u,q,o;r=x.options!=null?x.options:{};q=(x!=null)&&this.validateCoords(x.coords);if((p!=null?p.getGMarker:void 0)!=null){u=p.getGMarker()}o=q?this.createWindowOptions(u,x,t.html(),r):r;if(v!=null){w=new k({},x,o,s,v,p,t);this.childWindows.push(w);x.$on("$destroy",(function(y){return function(){y.childWindows=g.withoutObjects(y.childWindows,[w],function(A,z){return A.scope.$id===z.scope.$id});return y.childWindows.length=0}})(this))}if(x.control!=null){x.control.getGWindows=(function(y){return function(){return y.childWindows.map(function(z){return z.gObject})}})(this);x.control.getChildWindows=(function(y){return function(){return y.childWindows}})(this);x.control.getPlurals=x.control.getChildWindows;x.control.showWindow=(function(y){return function(){return y.childWindows.map(function(z){return z.showWindow()})}})(this);x.control.hideWindow=(function(y){return function(){return y.childWindows.map(function(z){return z.hideWindow()})}})(this)}if((this.onChildCreation!=null)&&(w!=null)){return this.onChildCreation(w)}};return m})(h)}])}).call(this);(function(){var f=function(g,h){return function(){return g.apply(h,arguments)}},e=function(j,h){for(var g in h){if(d.call(h,g)){j[g]=h[g]}}function i(){this.constructor=j}i.prototype=h.prototype;j.prototype=new i();j.__super__=h.prototype;return j},d={}.hasOwnProperty;a.module("uiGmapgoogle-maps.directives.api").factory("uiGmapWindows",["uiGmapIWindow","uiGmapPlural","uiGmapWindowsParentModel","uiGmapPromise","uiGmapLogger",function(j,i,g,h,l){var k;return k=(function(n){e(m,n);function m(){this.init=f(this.init,this);this.link=f(this.link,this);m.__super__.constructor.call(this);this.require=["^uiGmapGoogleMap","^?uiGmapMarkers"];this.template='<span class="angular-google-maps-windows" ng-transclude></span>';i.extend(this);l.debug(this)}m.prototype.link=function(u,t,s,o){var r,p,q;r=o[0].getScope();p=o.length>1&&(o[1]!=null)?o[1]:void 0;q=p!=null?p.getScope():void 0;return r.deferred.promise.then((function(v){return function(x){var y,w;y=(q!=null?(w=q.deferred)!=null?w.promise:void 0:void 0)||h.resolve();return y.then(function(){var A,z;A=(z=v.parentModel)!=null?z.existingPieces:void 0;if(A){return A.then(function(){return v.init(u,t,s,o,x,q)})}else{return v.init(u,t,s,o,x,q)}})}})(this))};m.prototype.init=function(s,r,q,o,t,u){var p;p=new g(s,r,q,o,t,u);i.link(s,p);if(s.control!=null){s.control.getGWindows=(function(v){return function(){return p.plurals.map(function(w){return w.gObject})}})(this);return s.control.getChildWindows=(function(v){return function(){return p.plurals}})(this)}};return m})(j)}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapGoogleMap",["uiGmapMap",function(d){return new d()}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapMarker",["$timeout","uiGmapMarker",function(e,d){return new d(e)}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapMarkers",["$timeout","uiGmapMarkers",function(d,e){return new e(d)}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapPolygon",["uiGmapPolygon",function(d){return new d()}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapCircle",["uiGmapCircle",function(d){return d}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapPolyline",["uiGmapPolyline",function(d){return new d()}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapPolylines",["uiGmapPolylines",function(d){return new d()}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapRectangle",["uiGmapLogger","uiGmapRectangle",function(e,d){return d}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapWindow",["$timeout","$compile","$http","$templateCache","uiGmapWindow",function(f,e,h,d,g){return new g(f,e,h,d)}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapWindows",["$timeout","$compile","$http","$templateCache","$interpolate","uiGmapWindows",function(f,e,i,d,h,g){return new g(f,e,i,d,h)}])}).call(this);(function(){var d=function(e,f){return function(){return e.apply(f,arguments)}};a.module("uiGmapgoogle-maps").directive("uiGmapLayer",["$timeout","uiGmapLogger","uiGmapLayerParentModel",function(f,e,h){var g;g=(function(){function i(){this.link=d(this.link,this);this.$log=e;this.restrict="EMA";this.require="^uiGmapGoogleMap";this.priority=-1;this.transclude=true;this.template="<span class='angular-google-map-layer' ng-transclude></span>";this.replace=true;this.scope={show:"=show",type:"=type",namespace:"=namespace",options:"=options",onCreated:"&oncreated"}}i.prototype.link=function(l,k,j,m){return m.getScope().deferred.promise.then((function(n){return function(o){if(l.onCreated!=null){return new h(l,k,j,o,l.onCreated)}else{return new h(l,k,j,o)}}})(this))};return i})();return new g()}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapMapControl",["uiGmapControl",function(d){return new d()}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapDragZoom",["uiGmapDragZoom",function(d){return d}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapDrawingManager",["uiGmapDrawingManager",function(d){return d}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapFreeDrawPolygons",["uiGmapApiFreeDrawPolygons",function(d){return new d()}])}).call(this);(function(){var d=function(e,f){return function(){return e.apply(f,arguments)}};a.module("uiGmapgoogle-maps").directive("uiGmapMapType",["$timeout","uiGmapLogger","uiGmapMapTypeParentModel",function(f,e,h){var g;g=(function(){function i(){this.link=d(this.link,this);this.$log=e;this.restrict="EMA";this.require="^uiGmapGoogleMap";this.priority=-1;this.transclude=true;this.template='<span class="angular-google-map-layer" ng-transclude></span>';this.replace=true;this.scope={show:"=show",options:"=options",refresh:"=refresh",id:"@"}}i.prototype.link=function(l,k,j,m){return m.getScope().deferred.promise.then((function(n){return function(o){return new h(l,k,j,o)}})(this))};return i})();return new g()}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapPolygons",["uiGmapPolygons",function(d){return new d()}])}).call(this);(function(){var d=function(e,f){return function(){return e.apply(f,arguments)}};a.module("uiGmapgoogle-maps").directive("uiGmapSearchBox",["uiGmapGoogleMapApi","uiGmapLogger","uiGmapSearchBoxParentModel","$http","$templateCache","$compile",function(i,f,h,k,e,g){var j;j=(function(){l.prototype.require="ngModel";function l(){this.link=d(this.link,this);this.$log=f;this.restrict="EMA";this.require="^uiGmapGoogleMap";this.priority=-1;this.transclude=true;this.template="<span class='angular-google-map-search' ng-transclude></span>";this.replace=true;this.scope={template:"=template",events:"=events",position:"=?position",options:"=?options",parentdiv:"=?parentdiv",ngModel:"=?"}}l.prototype.link=function(o,n,m,p){return i.then((function(q){return function(r){if(o.template==null){e.put("uigmap-searchbox-default.tpl.html",'<input type="text">');o.template="uigmap-searchbox-default.tpl.html"}return k.get(o.template,{cache:e}).success(function(s){if(a.isUndefined(o.events)){q.$log.error("searchBox: the events property is required");return}return p.getScope().deferred.promise.then(function(t){var u;u=a.isDefined(o.position)?o.position.toUpperCase().replace(/-/g,"_"):"TOP_LEFT";if(!r.ControlPosition[u]){q.$log.error("searchBox: invalid position property");return}return new h(o,n,m,t,u,g(s)(o))})})}})(this))};return l})();return new j()}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapShow",["$animate","uiGmapLogger",function(e,d){return{scope:{uiGmapShow:"=",uiGmapAfterShow:"&",uiGmapAfterHide:"&"},link:function(g,f){var i,j,h;i=function(l,k){return e[l](f,"ng-hide").then(function(){return k()})};j=function(l,k){return e[l](f,"ng-hide",k)};h=function(l,k){if(a.version.major>1){return d.error("uiGmapShow is not supported for Angular Major greater than 1.\nYour Major is "+a.version.major+'"')}if(a.version.major===1&&a.version.minor<3){return j(l,k)}return i(l,k)};return g.$watch("uiGmapShow",function(k){if(k){h("removeClass",g.uiGmapAfterShow)}if(!k){return h("addClass",g.uiGmapAfterHide)}})}}}])}).call(this);(function(){a.module("uiGmapgoogle-maps").directive("uiGmapStreetViewPanorama",["uiGmapGoogleMapApi","uiGmapLogger","uiGmapGmapUtil","uiGmapEventsHelper",function(g,f,h,d){var e;e="uiGmapStreetViewPanorama";return{restrict:"EMA",template:'<div class="angular-google-map-street-view-panorama"></div>',replace:true,scope:{focalcoord:"=",radius:"=?",events:"=?",options:"=?",control:"=?",povoptions:"=?",imagestatus:"="},link:function(k,j,i){return g.then((function(l){return function(s){var q,p,r,m,o,t,n,u,w,v;u=void 0;v=void 0;r=false;t=void 0;n=null;w=null;q=function(){d.removeEvents(t);if(u!=null){u.unbind("position");u.setVisible(false)}if(v!=null){if((v!=null?v.setVisible:void 0)!=null){v.setVisible(false)}return v=void 0}};o=function(y,x){var z;z=google.maps.geometry.spherical.computeHeading(y,x);r=true;k.radius=k.radius||50;w=a.extend({heading:z,zoom:1,pitch:0},k.povoptions||{});n=n=a.extend({navigationControl:false,addressControl:false,linksControl:false,position:y,pov:w,visible:true},k.options||{});return r=false};p=function(){var x;if(!k.focalcoord){f.error(e+": focalCoord needs to be defined");return}if(!k.radius){f.error(e+": needs a radius to set the camera view from its focal target.");return}q();if(v==null){v=new google.maps.StreetViewService()}if(k.events){t=d.setEvents(v,k,k)}x=h.getCoords(k.focalcoord);return v.getPanoramaByLocation(x,k.radius,function(z,y){var C,A,B;if(k.imagestatus!=null){k.imagestatus=y}if(((B=k.events)!=null?B.image_status_changed:void 0)!=null){k.events.image_status_changed(v,"image_status_changed",k,y)}if(y==="OK"){A=z.location.latLng;o(A,x);C=j[0];return u=new google.maps.StreetViewPanorama(C,n)}})};if(k.control!=null){k.control.getOptions=function(){return n};k.control.getPovOptions=function(){return w};k.control.getGObject=function(){return v};k.control.getGPano=function(){return u}}k.$watch("options",function(y,x){if(y===x||y===n||r){return}return p()});m=true;k.$watch("focalcoord",function(y,x){if(y===x&&!m){return}if(y==null){return}m=false;return p()});return k.$on("$destroy",function(){return q()})}})(this))}}}])}).call(this);a.module("uiGmapgoogle-maps.wrapped").service("uiGmapuuid",function(){function d(){}d.generate=function(){var f=d._gri,e=d._ha;return e(f(32),8)+"-"+e(f(16),4)+"-"+e(16384|f(12),4)+"-"+e(32768|f(14),4)+"-"+e(f(48),12)};d._gri=function(e){return 0>e?NaN:30>=e?0|Math.random()*(1<<e):53>=e?(0|1073741824*Math.random())+1073741824*(0|Math.random()*(1<<e-30)):NaN};d._ha=function(g,f){for(var j=g.toString(16),i=f-j.length,h="0";0<i;i>>>=1,h+=h){i&1&&(j=h+j)}return j};return d});a.module("uiGmapgoogle-maps.wrapped").service("uiGmapGoogleMapsUtilV3",["lodash",function(d){return{init:d.once(function(){
/*
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function m(n){n=n||{};google.maps.OverlayView.apply(this,arguments);this.content_=n.content||"";this.disableAutoPan_=n.disableAutoPan||false;this.maxWidth_=n.maxWidth||0;this.pixelOffset_=n.pixelOffset||new google.maps.Size(0,0);this.position_=n.position||new google.maps.LatLng(0,0);this.zIndex_=n.zIndex||null;this.boxClass_=n.boxClass||"infoBox";this.boxStyle_=n.boxStyle||{};this.closeBoxMargin_=n.closeBoxMargin||"2px";this.closeBoxURL_=n.closeBoxURL||"http://www.google.com/intl/en_us/mapfiles/close.gif";if(n.closeBoxURL===""){this.closeBoxURL_=""}this.infoBoxClearance_=n.infoBoxClearance||new google.maps.Size(1,1);if(typeof n.visible==="undefined"){if(typeof n.isHidden==="undefined"){n.visible=true}else{n.visible=!n.isHidden}}this.isHidden_=!n.visible;this.alignBottom_=n.alignBottom||false;this.pane_=n.pane||"floatPane";this.enableEventPropagation_=n.enableEventPropagation||false;this.div_=null;this.closeListener_=null;this.moveListener_=null;this.contextListener_=null;this.eventListeners_=null;this.fixedWidthSet_=null}m.prototype=new google.maps.OverlayView();m.prototype.createInfoBoxDiv_=function(){var o;var n;var s;var p=this;var q=function(t){t.cancelBubble=true;if(t.stopPropagation){t.stopPropagation()}};var r=function(t){t.returnValue=false;if(t.preventDefault){t.preventDefault()}if(!p.enableEventPropagation_){q(t)}};if(!this.div_){this.div_=document.createElement("div");this.setBoxStyle_();if(typeof this.content_.nodeType==="undefined"){this.div_.innerHTML=this.getCloseBoxImg_()+this.content_}else{this.div_.innerHTML=this.getCloseBoxImg_();this.div_.appendChild(this.content_)}this.getPanes()[this.pane_].appendChild(this.div_);this.addClickHandler_();if(this.div_.style.width){this.fixedWidthSet_=true}else{if(this.maxWidth_!==0&&this.div_.offsetWidth>this.maxWidth_){this.div_.style.width=this.maxWidth_;this.div_.style.overflow="auto";this.fixedWidthSet_=true}else{s=this.getBoxWidths_();this.div_.style.width=(this.div_.offsetWidth-s.left-s.right)+"px";this.fixedWidthSet_=false}}this.panBox_(this.disableAutoPan_);if(!this.enableEventPropagation_){this.eventListeners_=[];n=["mousedown","mouseover","mouseout","mouseup","click","dblclick","touchstart","touchend","touchmove"];for(o=0;o<n.length;o++){this.eventListeners_.push(google.maps.event.addDomListener(this.div_,n[o],q))}this.eventListeners_.push(google.maps.event.addDomListener(this.div_,"mouseover",function(t){this.style.cursor="default"}))}this.contextListener_=google.maps.event.addDomListener(this.div_,"contextmenu",r);google.maps.event.trigger(this,"domready")}};m.prototype.getCloseBoxImg_=function(){var n="";if(this.closeBoxURL_!==""){n="<img";n+=" src='"+this.closeBoxURL_+"'";n+=" align=right";n+=" style='";n+=" position: relative;";n+=" cursor: pointer;";n+=" margin: "+this.closeBoxMargin_+";";n+="'>"}return n};m.prototype.addClickHandler_=function(){var n;if(this.closeBoxURL_!==""){n=this.div_.firstChild;this.closeListener_=google.maps.event.addDomListener(n,"click",this.getCloseClickHandler_())}else{this.closeListener_=null}};m.prototype.getCloseClickHandler_=function(){var n=this;return function(o){o.cancelBubble=true;if(o.stopPropagation){o.stopPropagation()}google.maps.event.trigger(n,"closeclick");n.close()}};m.prototype.panBox_=function(A){var p;var o;var y=0,u=0;if(!A){p=this.getMap();if(p instanceof google.maps.Map){if(!p.getBounds().contains(this.position_)){p.setCenter(this.position_)}o=p.getBounds();var C=p.getDiv();var v=C.offsetWidth;var x=C.offsetHeight;var r=this.pixelOffset_.width;var q=this.pixelOffset_.height;var w=this.div_.offsetWidth;var B=this.div_.offsetHeight;var t=this.infoBoxClearance_.width;var s=this.infoBoxClearance_.height;var n=this.getProjection().fromLatLngToContainerPixel(this.position_);if(n.x<(-r+t)){y=n.x+r-t}else{if((n.x+w+r+t)>v){y=n.x+w+r+t-v}}if(this.alignBottom_){if(n.y<(-q+s+B)){u=n.y+q-s-B}else{if((n.y+q+s)>x){u=n.y+q+s-x}}}else{if(n.y<(-q+s)){u=n.y+q-s}else{if((n.y+B+q+s)>x){u=n.y+B+q+s-x}}}if(!(y===0&&u===0)){var z=p.getCenter();p.panBy(y,u)}}}};m.prototype.setBoxStyle_=function(){var n,o;if(this.div_){this.div_.className=this.boxClass_;this.div_.style.cssText="";o=this.boxStyle_;for(n in o){if(o.hasOwnProperty(n)){this.div_.style[n]=o[n]}}this.div_.style.WebkitTransform="translateZ(0)";if(typeof this.div_.style.opacity!=="undefined"&&this.div_.style.opacity!==""){this.div_.style.MsFilter='"progid:DXImageTransform.Microsoft.Alpha(Opacity='+(this.div_.style.opacity*100)+')"';this.div_.style.filter="alpha(opacity="+(this.div_.style.opacity*100)+")"}this.div_.style.position="absolute";this.div_.style.visibility="hidden";if(this.zIndex_!==null){this.div_.style.zIndex=this.zIndex_}}};m.prototype.getBoxWidths_=function(){var n;var p={top:0,bottom:0,left:0,right:0};var o=this.div_;if(document.defaultView&&document.defaultView.getComputedStyle){n=o.ownerDocument.defaultView.getComputedStyle(o,"");if(n){p.top=parseInt(n.borderTopWidth,10)||0;p.bottom=parseInt(n.borderBottomWidth,10)||0;p.left=parseInt(n.borderLeftWidth,10)||0;p.right=parseInt(n.borderRightWidth,10)||0}}else{if(document.documentElement.currentStyle){if(o.currentStyle){p.top=parseInt(o.currentStyle.borderTopWidth,10)||0;p.bottom=parseInt(o.currentStyle.borderBottomWidth,10)||0;p.left=parseInt(o.currentStyle.borderLeftWidth,10)||0;p.right=parseInt(o.currentStyle.borderRightWidth,10)||0}}}return p};m.prototype.onRemove=function(){if(this.div_){this.div_.parentNode.removeChild(this.div_);this.div_=null}};m.prototype.draw=function(){this.createInfoBoxDiv_();var n=this.getProjection().fromLatLngToDivPixel(this.position_);this.div_.style.left=(n.x+this.pixelOffset_.width)+"px";if(this.alignBottom_){this.div_.style.bottom=-(n.y+this.pixelOffset_.height)+"px"}else{this.div_.style.top=(n.y+this.pixelOffset_.height)+"px"}if(this.isHidden_){this.div_.style.visibility="hidden"}else{this.div_.style.visibility="visible"}};m.prototype.setOptions=function(n){if(typeof n.boxClass!=="undefined"){this.boxClass_=n.boxClass;this.setBoxStyle_()}if(typeof n.boxStyle!=="undefined"){this.boxStyle_=n.boxStyle;this.setBoxStyle_()}if(typeof n.content!=="undefined"){this.setContent(n.content)}if(typeof n.disableAutoPan!=="undefined"){this.disableAutoPan_=n.disableAutoPan}if(typeof n.maxWidth!=="undefined"){this.maxWidth_=n.maxWidth}if(typeof n.pixelOffset!=="undefined"){this.pixelOffset_=n.pixelOffset}if(typeof n.alignBottom!=="undefined"){this.alignBottom_=n.alignBottom}if(typeof n.position!=="undefined"){this.setPosition(n.position)}if(typeof n.zIndex!=="undefined"){this.setZIndex(n.zIndex)}if(typeof n.closeBoxMargin!=="undefined"){this.closeBoxMargin_=n.closeBoxMargin}if(typeof n.closeBoxURL!=="undefined"){this.closeBoxURL_=n.closeBoxURL}if(typeof n.infoBoxClearance!=="undefined"){this.infoBoxClearance_=n.infoBoxClearance}if(typeof n.isHidden!=="undefined"){this.isHidden_=n.isHidden}if(typeof n.visible!=="undefined"){this.isHidden_=!n.visible}if(typeof n.enableEventPropagation!=="undefined"){this.enableEventPropagation_=n.enableEventPropagation}if(this.div_){this.draw()}};m.prototype.setContent=function(n){this.content_=n;if(this.div_){if(this.closeListener_){google.maps.event.removeListener(this.closeListener_);this.closeListener_=null}if(!this.fixedWidthSet_){this.div_.style.width=""}if(typeof n.nodeType==="undefined"){this.div_.innerHTML=this.getCloseBoxImg_()+n}else{this.div_.innerHTML=this.getCloseBoxImg_();this.div_.appendChild(n)}if(!this.fixedWidthSet_){this.div_.style.width=this.div_.offsetWidth+"px";if(typeof n.nodeType==="undefined"){this.div_.innerHTML=this.getCloseBoxImg_()+n}else{this.div_.innerHTML=this.getCloseBoxImg_();this.div_.appendChild(n)}}this.addClickHandler_()}google.maps.event.trigger(this,"content_changed")};m.prototype.setPosition=function(n){this.position_=n;if(this.div_){this.draw()}google.maps.event.trigger(this,"position_changed")};m.prototype.setZIndex=function(n){this.zIndex_=n;if(this.div_){this.div_.style.zIndex=n}google.maps.event.trigger(this,"zindex_changed")};m.prototype.setVisible=function(n){this.isHidden_=!n;if(this.div_){this.div_.style.visibility=(this.isHidden_?"hidden":"visible")}};m.prototype.getContent=function(){return this.content_};m.prototype.getPosition=function(){return this.position_};m.prototype.getZIndex=function(){return this.zIndex_};m.prototype.getVisible=function(){var n;if((typeof this.getMap()==="undefined")||(this.getMap()===null)){n=false}else{n=!this.isHidden_}return n};m.prototype.show=function(){this.isHidden_=false;if(this.div_){this.div_.style.visibility="visible"}};m.prototype.hide=function(){this.isHidden_=true;if(this.div_){this.div_.style.visibility="hidden"}};m.prototype.open=function(p,n){var o=this;if(n){this.position_=n.getPosition();this.moveListener_=google.maps.event.addListener(n,"position_changed",function(){o.setPosition(this.getPosition())})}this.setMap(p);if(this.div_){this.panBox_()}};m.prototype.close=function(){var n;if(this.closeListener_){google.maps.event.removeListener(this.closeListener_);this.closeListener_=null}if(this.eventListeners_){for(n=0;n<this.eventListeners_.length;n++){google.maps.event.removeListener(this.eventListeners_[n])}this.eventListeners_=null}if(this.moveListener_){google.maps.event.removeListener(this.moveListener_);this.moveListener_=null}if(this.contextListener_){google.maps.event.removeListener(this.contextListener_);this.contextListener_=null}this.setMap(null)};
/*
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
(function(){var v=function(x){var w;switch(x){case"thin":w="2px";break;case"medium":w="4px";break;case"thick":w="6px";break;default:w=x}return w};var r=function(x){var w;var y={};if(document.defaultView&&document.defaultView.getComputedStyle){w=x.ownerDocument.defaultView.getComputedStyle(x,"");if(w){y.top=parseInt(w.borderTopWidth,10)||0;y.bottom=parseInt(w.borderBottomWidth,10)||0;y.left=parseInt(w.borderLeftWidth,10)||0;y.right=parseInt(w.borderRightWidth,10)||0;return y}}else{if(document.documentElement.currentStyle){if(x.currentStyle){y.top=parseInt(v(x.currentStyle.borderTopWidth),10)||0;y.bottom=parseInt(v(x.currentStyle.borderBottomWidth),10)||0;y.left=parseInt(v(x.currentStyle.borderLeftWidth),10)||0;y.right=parseInt(v(x.currentStyle.borderRightWidth),10)||0;return y}}}y.top=parseInt(x.style["border-top-width"],10)||0;y.bottom=parseInt(x.style["border-bottom-width"],10)||0;y.left=parseInt(x.style["border-left-width"],10)||0;y.right=parseInt(x.style["border-right-width"],10)||0;return y};var u={x:0,y:0};var q=function(w){u.x=(typeof document.documentElement.scrollLeft!=="undefined"?document.documentElement.scrollLeft:document.body.scrollLeft);u.y=(typeof document.documentElement.scrollTop!=="undefined"?document.documentElement.scrollTop:document.body.scrollTop)};q();var t=function(w){var y=0,x=0;w=w||b.event;if(typeof w.pageX!=="undefined"){y=w.pageX;x=w.pageY}else{if(typeof w.clientX!=="undefined"){y=w.clientX+u.x;x=w.clientY+u.y}}return{left:y,top:x}};var n=function(A){var y=A.offsetLeft;var w=A.offsetTop;var D=A.offsetParent;while(D!==null){if(D!==document.body&&D!==document.documentElement){y-=D.scrollLeft;w-=D.scrollTop}var z=D;var x=z.offsetLeft;var E=z.offsetTop;if(!x&&!E&&b.getComputedStyle){var B=document.defaultView.getComputedStyle(z,null).MozTransform||document.defaultView.getComputedStyle(z,null).WebkitTransform;if(B){if(typeof B==="string"){var C=B.split(",");x+=parseInt(C[4],10)||0;E+=parseInt(C[5],10)||0}}}y+=x;w+=E;D=D.offsetParent}return{left:y,top:w}};var p=function(z,y){if(z&&y){for(var w in y){if(y.hasOwnProperty(w)){z[w]=y[w]}}}return z};var o=function(w,x){if(typeof x!=="undefined"){w.style.opacity=x}if(typeof w.style.opacity!=="undefined"&&w.style.opacity!==""){w.style.filter="alpha(opacity="+(w.style.opacity*100)+")"}};function s(z,w){var y=this;var x=new google.maps.OverlayView();x.onAdd=function(){y.init_(z,w)};x.draw=function(){};x.onRemove=function(){};x.setMap(z);this.prjov_=x}s.prototype.init_=function(z,w){var x;var y=this;this.map_=z;w=w||{};this.key_=w.key||"shift";this.key_=this.key_.toLowerCase();this.borderWidths_=r(this.map_.getDiv());this.veilDiv_=[];for(x=0;x<4;x++){this.veilDiv_[x]=document.createElement("div");this.veilDiv_[x].onselectstart=function(){return false};p(this.veilDiv_[x].style,{backgroundColor:"gray",opacity:0.25,cursor:"crosshair"});p(this.veilDiv_[x].style,w.paneStyle);p(this.veilDiv_[x].style,w.veilStyle);p(this.veilDiv_[x].style,{position:"absolute",overflow:"hidden",display:"none"});if(this.key_==="shift"){this.veilDiv_[x].style.MozUserSelect="none"}o(this.veilDiv_[x]);if(this.veilDiv_[x].style.backgroundColor==="transparent"){this.veilDiv_[x].style.backgroundColor="white";o(this.veilDiv_[x],0)}this.map_.getDiv().appendChild(this.veilDiv_[x])}this.noZoom_=w.noZoom||false;this.visualEnabled_=w.visualEnabled||false;this.visualClass_=w.visualClass||"";this.visualPosition_=w.visualPosition||google.maps.ControlPosition.LEFT_TOP;this.visualPositionOffset_=w.visualPositionOffset||new google.maps.Size(35,0);this.visualPositionIndex_=w.visualPositionIndex||null;this.visualSprite_=w.visualSprite||"http"+(document.location.protocol==="https:"?"s":"")+"://maps.gstatic.com/mapfiles/ftr/controls/dragzoom_btn.png";this.visualSize_=w.visualSize||new google.maps.Size(20,20);this.visualTips_=w.visualTips||{};this.visualTips_.off=this.visualTips_.off||"Turn on drag zoom mode";this.visualTips_.on=this.visualTips_.on||"Turn off drag zoom mode";this.boxDiv_=document.createElement("div");p(this.boxDiv_.style,{border:"4px solid #736AFF"});p(this.boxDiv_.style,w.boxStyle);p(this.boxDiv_.style,{position:"absolute",display:"none"});o(this.boxDiv_);this.map_.getDiv().appendChild(this.boxDiv_);this.boxBorderWidths_=r(this.boxDiv_);this.listeners_=[google.maps.event.addDomListener(document,"keydown",function(A){y.onKeyDown_(A)}),google.maps.event.addDomListener(document,"keyup",function(A){y.onKeyUp_(A)}),google.maps.event.addDomListener(this.veilDiv_[0],"mousedown",function(A){y.onMouseDown_(A)}),google.maps.event.addDomListener(this.veilDiv_[1],"mousedown",function(A){y.onMouseDown_(A)}),google.maps.event.addDomListener(this.veilDiv_[2],"mousedown",function(A){y.onMouseDown_(A)}),google.maps.event.addDomListener(this.veilDiv_[3],"mousedown",function(A){y.onMouseDown_(A)}),google.maps.event.addDomListener(document,"mousedown",function(A){y.onMouseDownDocument_(A)}),google.maps.event.addDomListener(document,"mousemove",function(A){y.onMouseMove_(A)}),google.maps.event.addDomListener(document,"mouseup",function(A){y.onMouseUp_(A)}),google.maps.event.addDomListener(b,"scroll",q)];this.hotKeyDown_=false;this.mouseDown_=false;this.dragging_=false;this.startPt_=null;this.endPt_=null;this.mapWidth_=null;this.mapHeight_=null;this.mousePosn_=null;this.mapPosn_=null;if(this.visualEnabled_){this.buttonDiv_=this.initControl_(this.visualPositionOffset_);if(this.visualPositionIndex_!==null){this.buttonDiv_.index=this.visualPositionIndex_}this.map_.controls[this.visualPosition_].push(this.buttonDiv_);this.controlIndex_=this.map_.controls[this.visualPosition_].length-1}};s.prototype.initControl_=function(z){var y;var x;var w=this;y=document.createElement("div");y.className=this.visualClass_;y.style.position="relative";y.style.overflow="hidden";y.style.height=this.visualSize_.height+"px";y.style.width=this.visualSize_.width+"px";y.title=this.visualTips_.off;x=document.createElement("img");x.src=this.visualSprite_;x.style.position="absolute";x.style.left=-(this.visualSize_.width*2)+"px";x.style.top=0+"px";y.appendChild(x);y.onclick=function(A){w.hotKeyDown_=!w.hotKeyDown_;if(w.hotKeyDown_){w.buttonDiv_.firstChild.style.left=-(w.visualSize_.width*0)+"px";w.buttonDiv_.title=w.visualTips_.on;w.activatedByControl_=true;google.maps.event.trigger(w,"activate")}else{w.buttonDiv_.firstChild.style.left=-(w.visualSize_.width*2)+"px";w.buttonDiv_.title=w.visualTips_.off;google.maps.event.trigger(w,"deactivate")}w.onMouseMove_(A)};y.onmouseover=function(){w.buttonDiv_.firstChild.style.left=-(w.visualSize_.width*1)+"px"};y.onmouseout=function(){if(w.hotKeyDown_){w.buttonDiv_.firstChild.style.left=-(w.visualSize_.width*0)+"px";w.buttonDiv_.title=w.visualTips_.on}else{w.buttonDiv_.firstChild.style.left=-(w.visualSize_.width*2)+"px";w.buttonDiv_.title=w.visualTips_.off}};y.ondragstart=function(){return false};p(y.style,{cursor:"pointer",marginTop:z.height+"px",marginLeft:z.width+"px"});return y};s.prototype.isHotKeyDown_=function(x){var w;x=x||b.event;w=(x.shiftKey&&this.key_==="shift")||(x.altKey&&this.key_==="alt")||(x.ctrlKey&&this.key_==="ctrl");if(!w){switch(x.keyCode){case 16:if(this.key_==="shift"){w=true}break;case 17:if(this.key_==="ctrl"){w=true}break;case 18:if(this.key_==="alt"){w=true}break}}return w};s.prototype.isMouseOnMap_=function(){var w=this.mousePosn_;if(w){var x=this.mapPosn_;var y=this.map_.getDiv();return w.left>x.left&&w.left<(x.left+y.offsetWidth)&&w.top>x.top&&w.top<(x.top+y.offsetHeight)}else{return false}};s.prototype.setVeilVisibility_=function(){var y;if(this.map_&&this.hotKeyDown_&&this.isMouseOnMap_()){var x=this.map_.getDiv();this.mapWidth_=x.offsetWidth-(this.borderWidths_.left+this.borderWidths_.right);this.mapHeight_=x.offsetHeight-(this.borderWidths_.top+this.borderWidths_.bottom);if(this.activatedByControl_){var B=parseInt(this.buttonDiv_.style.left,10)+this.visualPositionOffset_.width;var A=parseInt(this.buttonDiv_.style.top,10)+this.visualPositionOffset_.height;var z=this.visualSize_.width;var w=this.visualSize_.height;this.veilDiv_[0].style.top="0px";this.veilDiv_[0].style.left="0px";this.veilDiv_[0].style.width=B+"px";this.veilDiv_[0].style.height=this.mapHeight_+"px";this.veilDiv_[1].style.top="0px";this.veilDiv_[1].style.left=(B+z)+"px";this.veilDiv_[1].style.width=(this.mapWidth_-(B+z))+"px";this.veilDiv_[1].style.height=this.mapHeight_+"px";this.veilDiv_[2].style.top="0px";this.veilDiv_[2].style.left=B+"px";this.veilDiv_[2].style.width=z+"px";this.veilDiv_[2].style.height=A+"px";this.veilDiv_[3].style.top=(A+w)+"px";this.veilDiv_[3].style.left=B+"px";this.veilDiv_[3].style.width=z+"px";this.veilDiv_[3].style.height=(this.mapHeight_-(A+w))+"px";for(y=0;y<this.veilDiv_.length;y++){this.veilDiv_[y].style.display="block"}}else{this.veilDiv_[0].style.left="0px";this.veilDiv_[0].style.top="0px";this.veilDiv_[0].style.width=this.mapWidth_+"px";this.veilDiv_[0].style.height=this.mapHeight_+"px";for(y=1;y<this.veilDiv_.length;y++){this.veilDiv_[y].style.width="0px";this.veilDiv_[y].style.height="0px"}for(y=0;y<this.veilDiv_.length;y++){this.veilDiv_[y].style.display="block"}}}else{for(y=0;y<this.veilDiv_.length;y++){this.veilDiv_[y].style.display="none"}}};s.prototype.onKeyDown_=function(w){if(this.map_&&!this.hotKeyDown_&&this.isHotKeyDown_(w)){this.mapPosn_=n(this.map_.getDiv());this.hotKeyDown_=true;this.activatedByControl_=false;this.setVeilVisibility_();google.maps.event.trigger(this,"activate")}};s.prototype.getMousePoint_=function(y){var w=t(y);var x=new google.maps.Point();x.x=w.left-this.mapPosn_.left-this.borderWidths_.left;x.y=w.top-this.mapPosn_.top-this.borderWidths_.top;x.x=Math.min(x.x,this.mapWidth_);x.y=Math.min(x.y,this.mapHeight_);x.x=Math.max(x.x,0);x.y=Math.max(x.y,0);return x};s.prototype.onMouseDown_=function(x){if(this.map_&&this.hotKeyDown_){this.mapPosn_=n(this.map_.getDiv());this.dragging_=true;this.startPt_=this.endPt_=this.getMousePoint_(x);this.boxDiv_.style.width=this.boxDiv_.style.height="0px";var w=this.prjov_.getProjection();var y=w.fromContainerPixelToLatLng(this.startPt_);google.maps.event.trigger(this,"dragstart",y)}};s.prototype.onMouseDownDocument_=function(w){this.mouseDown_=true};s.prototype.onMouseMove_=function(B){this.mousePosn_=t(B);if(this.dragging_){this.endPt_=this.getMousePoint_(B);var A=Math.min(this.startPt_.x,this.endPt_.x);var z=Math.min(this.startPt_.y,this.endPt_.y);var x=Math.abs(this.startPt_.x-this.endPt_.x);var w=Math.abs(this.startPt_.y-this.endPt_.y);var y=Math.max(0,x-(this.boxBorderWidths_.left+this.boxBorderWidths_.right));var C=Math.max(0,w-(this.boxBorderWidths_.top+this.boxBorderWidths_.bottom));this.veilDiv_[0].style.top="0px";this.veilDiv_[0].style.left="0px";this.veilDiv_[0].style.width=A+"px";this.veilDiv_[0].style.height=this.mapHeight_+"px";this.veilDiv_[1].style.top="0px";this.veilDiv_[1].style.left=(A+x)+"px";this.veilDiv_[1].style.width=(this.mapWidth_-(A+x))+"px";this.veilDiv_[1].style.height=this.mapHeight_+"px";this.veilDiv_[2].style.top="0px";this.veilDiv_[2].style.left=A+"px";this.veilDiv_[2].style.width=x+"px";this.veilDiv_[2].style.height=z+"px";this.veilDiv_[3].style.top=(z+w)+"px";this.veilDiv_[3].style.left=A+"px";this.veilDiv_[3].style.width=x+"px";this.veilDiv_[3].style.height=(this.mapHeight_-(z+w))+"px";this.boxDiv_.style.top=z+"px";this.boxDiv_.style.left=A+"px";this.boxDiv_.style.width=y+"px";this.boxDiv_.style.height=C+"px";this.boxDiv_.style.display="block";google.maps.event.trigger(this,"drag",new google.maps.Point(A,z+w),new google.maps.Point(A+x,z),this.prjov_.getProjection())}else{if(!this.mouseDown_){this.mapPosn_=n(this.map_.getDiv());this.setVeilVisibility_()}}};s.prototype.onMouseUp_=function(D){var E;var F=this;this.mouseDown_=false;if(this.dragging_){if((this.getMousePoint_(D).x===this.startPt_.x)&&(this.getMousePoint_(D).y===this.startPt_.y)){this.onKeyUp_(D);return}var y=Math.min(this.startPt_.x,this.endPt_.x);var G=Math.min(this.startPt_.y,this.endPt_.y);var x=Math.abs(this.startPt_.x-this.endPt_.x);var J=Math.abs(this.startPt_.y-this.endPt_.y);var I=true;if(I){y+=this.borderWidths_.left;G+=this.borderWidths_.top}var w=this.prjov_.getProjection();var H=w.fromContainerPixelToLatLng(new google.maps.Point(y,G+J));var A=w.fromContainerPixelToLatLng(new google.maps.Point(y+x,G));var C=new google.maps.LatLngBounds(H,A);if(this.noZoom_){this.boxDiv_.style.display="none"}else{E=this.map_.getZoom();this.map_.fitBounds(C);if(this.map_.getZoom()<E){this.map_.setZoom(E)}var K=w.fromLatLngToContainerPixel(H);var B=w.fromLatLngToContainerPixel(A);if(I){K.x-=this.borderWidths_.left;K.y-=this.borderWidths_.top;B.x-=this.borderWidths_.left;B.y-=this.borderWidths_.top}this.boxDiv_.style.left=K.x+"px";this.boxDiv_.style.top=B.y+"px";this.boxDiv_.style.width=(Math.abs(B.x-K.x)-(this.boxBorderWidths_.left+this.boxBorderWidths_.right))+"px";this.boxDiv_.style.height=(Math.abs(B.y-K.y)-(this.boxBorderWidths_.top+this.boxBorderWidths_.bottom))+"px";setTimeout(function(){F.boxDiv_.style.display="none"},1000)}this.dragging_=false;this.onMouseMove_(D);google.maps.event.trigger(this,"dragend",C);if(!this.isHotKeyDown_(D)){this.onKeyUp_(D)}}};s.prototype.onKeyUp_=function(C){var A;var y,D,x,F,w,E,z;var B=null;if(this.map_&&this.hotKeyDown_){this.hotKeyDown_=false;if(this.dragging_){this.boxDiv_.style.display="none";this.dragging_=false;y=Math.min(this.startPt_.x,this.endPt_.x);D=Math.min(this.startPt_.y,this.endPt_.y);x=Math.abs(this.startPt_.x-this.endPt_.x);F=Math.abs(this.startPt_.y-this.endPt_.y);w=this.prjov_.getProjection();E=w.fromContainerPixelToLatLng(new google.maps.Point(y,D+F));z=w.fromContainerPixelToLatLng(new google.maps.Point(y+x,D));B=new google.maps.LatLngBounds(E,z)}for(A=0;A<this.veilDiv_.length;A++){this.veilDiv_[A].style.display="none"}if(this.visualEnabled_){this.buttonDiv_.firstChild.style.left=-(this.visualSize_.width*2)+"px";this.buttonDiv_.title=this.visualTips_.off;this.buttonDiv_.style.display=""}google.maps.event.trigger(this,"deactivate",B)}};google.maps.Map.prototype.enableKeyDragZoom=function(w){this.dragZoom_=new s(this,w)};google.maps.Map.prototype.disableKeyDragZoom=function(){var w;var x=this.dragZoom_;if(x){for(w=0;w<x.listeners_.length;++w){google.maps.event.removeListener(x.listeners_[w])}this.getDiv().removeChild(x.boxDiv_);for(w=0;w<x.veilDiv_.length;w++){this.getDiv().removeChild(x.veilDiv_[w])}if(x.visualEnabled_){this.controls[x.visualPosition_].removeAt(x.controlIndex_)}x.prjov_.setMap(null);this.dragZoom_=null}};google.maps.Map.prototype.keyDragZoomEnabled=function(){return this.dragZoom_!==null};google.maps.Map.prototype.getDragZoomObject=function(){return this.dragZoom_}})();function l(n,o){n.getMarkerClusterer().extend(l,google.maps.OverlayView);this.cluster_=n;this.className_=n.getMarkerClusterer().getClusterClass();this.styles_=o;this.center_=null;this.div_=null;this.sums_=null;this.visible_=false;this.setMap(n.getMap())}l.prototype.onAdd=function(){var p=this;var n;var o;this.div_=document.createElement("div");this.div_.className=this.className_;if(this.visible_){this.show()}this.getPanes().overlayMouseTarget.appendChild(this.div_);this.boundsChangedListener_=google.maps.event.addListener(this.getMap(),"bounds_changed",function(){o=n});google.maps.event.addDomListener(this.div_,"mousedown",function(){n=true;o=false});google.maps.event.addDomListener(this.div_,"click",function(t){n=false;if(!o){var q;var r;var s=p.cluster_.getMarkerClusterer();google.maps.event.trigger(s,"click",p.cluster_);google.maps.event.trigger(s,"clusterclick",p.cluster_);if(s.getZoomOnClick()){r=s.getMaxZoom();q=p.cluster_.getBounds();s.getMap().fitBounds(q);setTimeout(function(){s.getMap().fitBounds(q);if(r!==null&&(s.getMap().getZoom()>r)){s.getMap().setZoom(r+1)}},100)}t.cancelBubble=true;if(t.stopPropagation){t.stopPropagation()}}});google.maps.event.addDomListener(this.div_,"mouseover",function(){var q=p.cluster_.getMarkerClusterer();google.maps.event.trigger(q,"mouseover",p.cluster_)});google.maps.event.addDomListener(this.div_,"mouseout",function(){var q=p.cluster_.getMarkerClusterer();google.maps.event.trigger(q,"mouseout",p.cluster_)})};l.prototype.onRemove=function(){if(this.div_&&this.div_.parentNode){this.hide();google.maps.event.removeListener(this.boundsChangedListener_);google.maps.event.clearInstanceListeners(this.div_);this.div_.parentNode.removeChild(this.div_);this.div_=null}};l.prototype.draw=function(){if(this.visible_){var n=this.getPosFromLatLng_(this.center_);this.div_.style.top=n.y+"px";this.div_.style.left=n.x+"px"}};l.prototype.hide=function(){if(this.div_){this.div_.style.display="none"}this.visible_=false};l.prototype.show=function(){if(this.div_){var n="";var p=this.backgroundPosition_.split(" ");var q=parseInt(p[0].trim(),10);var o=parseInt(p[1].trim(),10);var r=this.getPosFromLatLng_(this.center_);this.div_.style.cssText=this.createCss(r);n="<img src='"+this.url_+"' style='position: absolute; top: "+o+"px; left: "+q+"px; ";if(!this.cluster_.getMarkerClusterer().enableRetinaIcons_){n+="clip: rect("+(-1*o)+"px, "+((-1*q)+this.width_)+"px, "+((-1*o)+this.height_)+"px, "+(-1*q)+"px);"}n+="'>";this.div_.innerHTML=n+"<div style='position: absolute;top: "+this.anchorText_[0]+"px;left: "+this.anchorText_[1]+"px;color: "+this.textColor_+";font-size: "+this.textSize_+"px;font-family: "+this.fontFamily_+";font-weight: "+this.fontWeight_+";font-style: "+this.fontStyle_+";text-decoration: "+this.textDecoration_+";text-align: center;width: "+this.width_+"px;line-height:"+this.height_+"px;'>"+this.sums_.text+"</div>";if(typeof this.sums_.title==="undefined"||this.sums_.title===""){this.div_.title=this.cluster_.getMarkerClusterer().getTitle()}else{this.div_.title=this.sums_.title}this.div_.style.display=""}this.visible_=true};l.prototype.useStyle=function(o){this.sums_=o;var n=Math.max(0,o.index-1);n=Math.min(this.styles_.length-1,n);var p=this.styles_[n];this.url_=p.url;this.height_=p.height;this.width_=p.width;this.anchorText_=p.anchorText||[0,0];this.anchorIcon_=p.anchorIcon||[parseInt(this.height_/2,10),parseInt(this.width_/2,10)];this.textColor_=p.textColor||"black";this.textSize_=p.textSize||11;this.textDecoration_=p.textDecoration||"none";this.fontWeight_=p.fontWeight||"bold";this.fontStyle_=p.fontStyle||"normal";this.fontFamily_=p.fontFamily||"Arial,sans-serif";this.backgroundPosition_=p.backgroundPosition||"0 0"};l.prototype.setCenter=function(n){this.center_=n};l.prototype.createCss=function(o){var n=[];n.push("cursor: pointer;");n.push("position: absolute; top: "+o.y+"px; left: "+o.x+"px;");n.push("width: "+this.width_+"px; height: "+this.height_+"px;");return n.join("")};l.prototype.getPosFromLatLng_=function(o){var n=this.getProjection().fromLatLngToDivPixel(o);n.x-=this.anchorIcon_[1];n.y-=this.anchorIcon_[0];n.x=parseInt(n.x,10);n.y=parseInt(n.y,10);return n};function i(n){this.markerClusterer_=n;this.map_=n.getMap();this.gridSize_=n.getGridSize();this.minClusterSize_=n.getMinimumClusterSize();this.averageCenter_=n.getAverageCenter();this.markers_=[];this.center_=null;this.bounds_=null;this.clusterIcon_=new l(this,n.getStyles())}i.prototype.getSize=function(){return this.markers_.length};i.prototype.getMarkers=function(){return this.markers_};i.prototype.getCenter=function(){return this.center_};i.prototype.getMap=function(){return this.map_};i.prototype.getMarkerClusterer=function(){return this.markerClusterer_};i.prototype.getBounds=function(){var n;var o=new google.maps.LatLngBounds(this.center_,this.center_);var p=this.getMarkers();for(n=0;n<p.length;n++){o.extend(p[n].getPosition())}return o};i.prototype.remove=function(){this.clusterIcon_.setMap(null);this.markers_=[];delete this.markers_};i.prototype.addMarker=function(o){var r;var q;var s;if(this.isMarkerAlreadyAdded_(o)){return false}if(!this.center_){this.center_=o.getPosition();this.calculateBounds_()}else{if(this.averageCenter_){var n=this.markers_.length+1;var t=(this.center_.lat()*(n-1)+o.getPosition().lat())/n;var p=(this.center_.lng()*(n-1)+o.getPosition().lng())/n;this.center_=new google.maps.LatLng(t,p);this.calculateBounds_()}}o.isAdded=true;this.markers_.push(o);q=this.markers_.length;s=this.markerClusterer_.getMaxZoom();if(s!==null&&this.map_.getZoom()>s){if(o.getMap()!==this.map_){o.setMap(this.map_)}}else{if(q<this.minClusterSize_){if(o.getMap()!==this.map_){o.setMap(this.map_)}}else{if(q===this.minClusterSize_){for(r=0;r<q;r++){this.markers_[r].setMap(null)}}else{o.setMap(null)}}}this.updateIcon_();return true};i.prototype.isMarkerInClusterBounds=function(n){return this.bounds_.contains(n.getPosition())};i.prototype.calculateBounds_=function(){var n=new google.maps.LatLngBounds(this.center_,this.center_);this.bounds_=this.markerClusterer_.getExtendedBounds(n)};i.prototype.updateIcon_=function(){var o=this.markers_.length;var q=this.markerClusterer_.getMaxZoom();if(q!==null&&this.map_.getZoom()>q){this.clusterIcon_.hide();return}if(o<this.minClusterSize_){this.clusterIcon_.hide();return}var p=this.markerClusterer_.getStyles().length;var n=this.markerClusterer_.getCalculator()(this.markers_,p);this.clusterIcon_.setCenter(this.center_);this.clusterIcon_.useStyle(n);this.clusterIcon_.show()};i.prototype.isMarkerAlreadyAdded_=function(n){var o;if(this.markers_.indexOf){return this.markers_.indexOf(n)!==-1}else{for(o=0;o<this.markers_.length;o++){if(n===this.markers_[o]){return true}}}return false};function j(p,n,o){this.extend(j,google.maps.OverlayView);n=n||[];o=o||{};this.markers_=[];this.clusters_=[];this.listeners_=[];this.activeMap_=null;this.ready_=false;this.gridSize_=o.gridSize||60;this.minClusterSize_=o.minimumClusterSize||2;this.maxZoom_=o.maxZoom||null;this.styles_=o.styles||[];this.title_=o.title||"";this.zoomOnClick_=true;if(o.zoomOnClick!==c){this.zoomOnClick_=o.zoomOnClick}this.averageCenter_=false;if(o.averageCenter!==c){this.averageCenter_=o.averageCenter}this.ignoreHidden_=false;if(o.ignoreHidden!==c){this.ignoreHidden_=o.ignoreHidden}this.enableRetinaIcons_=false;if(o.enableRetinaIcons!==c){this.enableRetinaIcons_=o.enableRetinaIcons}this.imagePath_=o.imagePath||j.IMAGE_PATH;this.imageExtension_=o.imageExtension||j.IMAGE_EXTENSION;this.imageSizes_=o.imageSizes||j.IMAGE_SIZES;this.calculator_=o.calculator||j.CALCULATOR;this.batchSize_=o.batchSize||j.BATCH_SIZE;this.batchSizeIE_=o.batchSizeIE||j.BATCH_SIZE_IE;this.clusterClass_=o.clusterClass||"cluster";if(navigator.userAgent.toLowerCase().indexOf("msie")!==-1){this.batchSize_=this.batchSizeIE_}this.setupStyles_();this.addMarkers(n,true);this.setMap(p)}j.prototype.onAdd=function(){var n=this;this.activeMap_=this.getMap();this.ready_=true;this.repaint();this.listeners_=[google.maps.event.addListener(this.getMap(),"zoom_changed",function(){n.resetViewport_(false);if(this.getZoom()===(this.get("minZoom")||0)||this.getZoom()===this.get("maxZoom")){google.maps.event.trigger(this,"idle")}}),google.maps.event.addListener(this.getMap(),"idle",function(){n.redraw_()})]};j.prototype.onRemove=function(){var n;for(n=0;n<this.markers_.length;n++){if(this.markers_[n].getMap()!==this.activeMap_){this.markers_[n].setMap(this.activeMap_)}}for(n=0;n<this.clusters_.length;n++){this.clusters_[n].remove()}this.clusters_=[];for(n=0;n<this.listeners_.length;n++){google.maps.event.removeListener(this.listeners_[n])}this.listeners_=[];this.activeMap_=null;this.ready_=false};j.prototype.draw=function(){};j.prototype.setupStyles_=function(){var o,n;if(this.styles_.length>0){return}for(o=0;o<this.imageSizes_.length;o++){n=this.imageSizes_[o];this.styles_.push({url:this.imagePath_+(o+1)+"."+this.imageExtension_,height:n,width:n})}};j.prototype.fitMapToMarkers=function(){var n;var p=this.getMarkers();var o=new google.maps.LatLngBounds();for(n=0;n<p.length;n++){o.extend(p[n].getPosition())}this.getMap().fitBounds(o)};j.prototype.getGridSize=function(){return this.gridSize_};j.prototype.setGridSize=function(n){this.gridSize_=n};j.prototype.getMinimumClusterSize=function(){return this.minClusterSize_};j.prototype.setMinimumClusterSize=function(n){this.minClusterSize_=n};j.prototype.getMaxZoom=function(){return this.maxZoom_};j.prototype.setMaxZoom=function(n){this.maxZoom_=n};j.prototype.getStyles=function(){return this.styles_};j.prototype.setStyles=function(n){this.styles_=n};j.prototype.getTitle=function(){return this.title_};j.prototype.setTitle=function(n){this.title_=n};j.prototype.getZoomOnClick=function(){return this.zoomOnClick_};j.prototype.setZoomOnClick=function(n){this.zoomOnClick_=n};j.prototype.getAverageCenter=function(){return this.averageCenter_};j.prototype.setAverageCenter=function(n){this.averageCenter_=n};j.prototype.getIgnoreHidden=function(){return this.ignoreHidden_};j.prototype.setIgnoreHidden=function(n){this.ignoreHidden_=n};j.prototype.getEnableRetinaIcons=function(){return this.enableRetinaIcons_};j.prototype.setEnableRetinaIcons=function(n){this.enableRetinaIcons_=n};j.prototype.getImageExtension=function(){return this.imageExtension_};j.prototype.setImageExtension=function(n){this.imageExtension_=n};j.prototype.getImagePath=function(){return this.imagePath_};j.prototype.setImagePath=function(n){this.imagePath_=n};j.prototype.getImageSizes=function(){return this.imageSizes_};j.prototype.setImageSizes=function(n){this.imageSizes_=n};j.prototype.getCalculator=function(){return this.calculator_};j.prototype.setCalculator=function(n){this.calculator_=n};j.prototype.getBatchSizeIE=function(){return this.batchSizeIE_};j.prototype.setBatchSizeIE=function(n){this.batchSizeIE_=n};j.prototype.getClusterClass=function(){return this.clusterClass_};j.prototype.setClusterClass=function(n){this.clusterClass_=n};j.prototype.getMarkers=function(){return this.markers_};j.prototype.getTotalMarkers=function(){return this.markers_.length};j.prototype.getClusters=function(){return this.clusters_};j.prototype.getTotalClusters=function(){return this.clusters_.length};j.prototype.addMarker=function(n,o){this.pushMarkerTo_(n);if(!o){this.redraw_()}};j.prototype.addMarkers=function(p,o){var n;for(n in p){if(p.hasOwnProperty(n)){this.pushMarkerTo_(p[n])}}if(!o){this.redraw_()}};j.prototype.pushMarkerTo_=function(n){if(n.getDraggable()){var o=this;google.maps.event.addListener(n,"dragend",function(){if(o.ready_){this.isAdded=false;o.repaint()}})}n.isAdded=false;this.markers_.push(n)};j.prototype.removeMarker=function(n,o){var p=this.removeMarker_(n);if(!o&&p){this.repaint()}return p};j.prototype.removeMarkers=function(s,o){var n,p;var q=false;for(n=0;n<s.length;n++){p=this.removeMarker_(s[n]);q=q||p}if(!o&&q){this.repaint()}return q};j.prototype.removeMarker_=function(n){var p;var o=-1;if(this.markers_.indexOf){o=this.markers_.indexOf(n)}else{for(p=0;p<this.markers_.length;p++){if(n===this.markers_[p]){o=p;break}}}if(o===-1){return false}n.setMap(null);this.markers_.splice(o,1);return true};j.prototype.clearMarkers=function(){this.resetViewport_(true);this.markers_=[]};j.prototype.repaint=function(){var n=this.clusters_.slice();this.clusters_=[];this.resetViewport_(false);this.redraw_();setTimeout(function(){var o;for(o=0;o<n.length;o++){n[o].remove()}},0)};j.prototype.getExtendedBounds=function(r){var p=this.getProjection();var s=new google.maps.LatLng(r.getNorthEast().lat(),r.getNorthEast().lng());var u=new google.maps.LatLng(r.getSouthWest().lat(),r.getSouthWest().lng());var q=p.fromLatLngToDivPixel(s);q.x+=this.gridSize_;q.y-=this.gridSize_;var o=p.fromLatLngToDivPixel(u);o.x-=this.gridSize_;o.y+=this.gridSize_;var t=p.fromDivPixelToLatLng(q);var n=p.fromDivPixelToLatLng(o);r.extend(t);r.extend(n);return r};j.prototype.redraw_=function(){this.createClusters_(0)};j.prototype.resetViewport_=function(p){var o,n;for(o=0;o<this.clusters_.length;o++){this.clusters_[o].remove()}this.clusters_=[];for(o=0;o<this.markers_.length;o++){n=this.markers_[o];n.isAdded=false;if(p){n.setMap(null)}}};j.prototype.distanceBetweenPoints_=function(t,r){var q=6371;var o=(r.lat()-t.lat())*Math.PI/180;var p=(r.lng()-t.lng())*Math.PI/180;var n=Math.sin(o/2)*Math.sin(o/2)+Math.cos(t.lat()*Math.PI/180)*Math.cos(r.lat()*Math.PI/180)*Math.sin(p/2)*Math.sin(p/2);var u=2*Math.atan2(Math.sqrt(n),Math.sqrt(1-n));var s=q*u;return s};j.prototype.isMarkerInBounds_=function(n,o){return o.contains(n.getPosition())};j.prototype.addToClosestCluster_=function(p){var r,s,o,n;var t=40000;var q=null;for(r=0;r<this.clusters_.length;r++){o=this.clusters_[r];n=o.getCenter();if(n){s=this.distanceBetweenPoints_(n,p.getPosition());if(s<t){t=s;q=o}}}if(q&&q.isMarkerInClusterBounds(p)){q.addMarker(p)}else{o=new i(this);o.addMarker(p);this.clusters_.push(o)}};j.prototype.createClusters_=function(n){var r,p;var o;var q=this;if(!this.ready_){return}if(n===0){google.maps.event.trigger(this,"clusteringbegin",this);if(typeof this.timerRefStatic!=="undefined"){clearTimeout(this.timerRefStatic);delete this.timerRefStatic}}if(this.getMap().getZoom()>3){o=new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),this.getMap().getBounds().getNorthEast())}else{o=new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472,-178.48388434375),new google.maps.LatLng(-85.08136444384544,178.00048865625))}var t=this.getExtendedBounds(o);var s=Math.min(n+this.batchSize_,this.markers_.length);for(r=n;r<s;r++){p=this.markers_[r];if(!p.isAdded&&this.isMarkerInBounds_(p,t)){if(!this.ignoreHidden_||(this.ignoreHidden_&&p.getVisible())){this.addToClosestCluster_(p)}}}if(s<this.markers_.length){this.timerRefStatic=setTimeout(function(){q.createClusters_(s)},0)}else{delete this.timerRefStatic;google.maps.event.trigger(this,"clusteringend",this)}};j.prototype.extend=function(o,n){return(function(p){var q;for(q in p.prototype){this.prototype[q]=p.prototype[q]}return this}).apply(o,[n])};j.CALCULATOR=function(s,q){var n=0;var r="";var p=s.length.toString();var o=p;while(o!==0){o=parseInt(o/10,10);n++}n=Math.min(n,q);return{text:p,index:n,title:r}};j.BATCH_SIZE=2000;j.BATCH_SIZE_IE=500;j.IMAGE_PATH="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclustererplus/images/m";j.IMAGE_EXTENSION="png";j.IMAGE_SIZES=[53,56,66,78,90];
/*
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function k(o,n){function p(){}p.prototype=n.prototype;o.superClass_=n.prototype;o.prototype=new p();o.prototype.constructor=o}function f(n,o,p){this.marker_=n;this.handCursorURL_=n.handCursorURL;this.labelDiv_=document.createElement("div");this.labelDiv_.style.cssText="position: absolute; overflow: hidden;";this.eventDiv_=document.createElement("div");this.eventDiv_.style.cssText=this.labelDiv_.style.cssText;this.eventDiv_.setAttribute("onselectstart","return false;");this.eventDiv_.setAttribute("ondragstart","return false;");this.crossDiv_=f.getSharedCross(o)}k(f,google.maps.OverlayView);f.getSharedCross=function(n){var o;if(typeof f.getSharedCross.crossDiv==="undefined"){o=document.createElement("img");o.style.cssText="position: absolute; z-index: 1000002; display: none;";o.style.marginLeft="-8px";o.style.marginTop="-9px";o.src=n;f.getSharedCross.crossDiv=o}return f.getSharedCross.crossDiv};f.prototype.onAdd=function(){var x=this;var r=false;var A=false;var y;var u,p;var n;var z;var w;var o;var q=20;var v="url("+this.handCursorURL_+")";var t=function(B){if(B.preventDefault){B.preventDefault()}B.cancelBubble=true;if(B.stopPropagation){B.stopPropagation()}};var s=function(){x.marker_.setAnimation(null)};this.getPanes().overlayImage.appendChild(this.labelDiv_);this.getPanes().overlayMouseTarget.appendChild(this.eventDiv_);if(typeof f.getSharedCross.processed==="undefined"){this.getPanes().overlayImage.appendChild(this.crossDiv_);f.getSharedCross.processed=true}this.listeners_=[google.maps.event.addDomListener(this.eventDiv_,"mouseover",function(B){if(x.marker_.getDraggable()||x.marker_.getClickable()){this.style.cursor="pointer";google.maps.event.trigger(x.marker_,"mouseover",B)}}),google.maps.event.addDomListener(this.eventDiv_,"mouseout",function(B){if((x.marker_.getDraggable()||x.marker_.getClickable())&&!A){this.style.cursor=x.marker_.getCursor();google.maps.event.trigger(x.marker_,"mouseout",B)}}),google.maps.event.addDomListener(this.eventDiv_,"mousedown",function(B){A=false;if(x.marker_.getDraggable()){r=true;this.style.cursor=v}if(x.marker_.getDraggable()||x.marker_.getClickable()){google.maps.event.trigger(x.marker_,"mousedown",B);t(B)}}),google.maps.event.addDomListener(document,"mouseup",function(C){var B;if(r){r=false;x.eventDiv_.style.cursor="pointer";google.maps.event.trigger(x.marker_,"mouseup",C)}if(A){if(z){B=x.getProjection().fromLatLngToDivPixel(x.marker_.getPosition());B.y+=q;x.marker_.setPosition(x.getProjection().fromDivPixelToLatLng(B));try{x.marker_.setAnimation(google.maps.Animation.BOUNCE);setTimeout(s,1406)}catch(D){}}x.crossDiv_.style.display="none";x.marker_.setZIndex(y);n=true;A=false;C.latLng=x.marker_.getPosition();google.maps.event.trigger(x.marker_,"dragend",C)}}),google.maps.event.addListener(x.marker_.getMap(),"mousemove",function(C){var B;if(r){if(A){C.latLng=new google.maps.LatLng(C.latLng.lat()-u,C.latLng.lng()-p);B=x.getProjection().fromLatLngToDivPixel(C.latLng);if(z){x.crossDiv_.style.left=B.x+"px";x.crossDiv_.style.top=B.y+"px";x.crossDiv_.style.display="";B.y-=q}x.marker_.setPosition(x.getProjection().fromDivPixelToLatLng(B));if(z){x.eventDiv_.style.top=(B.y+q)+"px"}google.maps.event.trigger(x.marker_,"drag",C)}else{u=C.latLng.lat()-x.marker_.getPosition().lat();p=C.latLng.lng()-x.marker_.getPosition().lng();y=x.marker_.getZIndex();w=x.marker_.getPosition();o=x.marker_.getMap().getCenter();z=x.marker_.get("raiseOnDrag");A=true;x.marker_.setZIndex(1000000);C.latLng=x.marker_.getPosition();google.maps.event.trigger(x.marker_,"dragstart",C)}}}),google.maps.event.addDomListener(document,"keydown",function(B){if(A){if(B.keyCode===27){z=false;x.marker_.setPosition(w);x.marker_.getMap().setCenter(o);google.maps.event.trigger(document,"mouseup",B)}}}),google.maps.event.addDomListener(this.eventDiv_,"click",function(B){if(x.marker_.getDraggable()||x.marker_.getClickable()){if(n){n=false}else{google.maps.event.trigger(x.marker_,"click",B);t(B)}}}),google.maps.event.addDomListener(this.eventDiv_,"dblclick",function(B){if(x.marker_.getDraggable()||x.marker_.getClickable()){google.maps.event.trigger(x.marker_,"dblclick",B);t(B)}}),google.maps.event.addListener(this.marker_,"dragstart",function(B){if(!A){z=this.get("raiseOnDrag")}}),google.maps.event.addListener(this.marker_,"drag",function(B){if(!A){if(z){x.setPosition(q);x.labelDiv_.style.zIndex=1000000+(this.get("labelInBackground")?-1:+1)}}}),google.maps.event.addListener(this.marker_,"dragend",function(B){if(!A){if(z){x.setPosition(0)}}}),google.maps.event.addListener(this.marker_,"position_changed",function(){x.setPosition()}),google.maps.event.addListener(this.marker_,"zindex_changed",function(){x.setZIndex()}),google.maps.event.addListener(this.marker_,"visible_changed",function(){x.setVisible()}),google.maps.event.addListener(this.marker_,"labelvisible_changed",function(){x.setVisible()}),google.maps.event.addListener(this.marker_,"title_changed",function(){x.setTitle()}),google.maps.event.addListener(this.marker_,"labelcontent_changed",function(){x.setContent()}),google.maps.event.addListener(this.marker_,"labelanchor_changed",function(){x.setAnchor()}),google.maps.event.addListener(this.marker_,"labelclass_changed",function(){x.setStyles()}),google.maps.event.addListener(this.marker_,"labelstyle_changed",function(){x.setStyles()})]};f.prototype.onRemove=function(){var n;this.labelDiv_.parentNode.removeChild(this.labelDiv_);this.eventDiv_.parentNode.removeChild(this.eventDiv_);for(n=0;n<this.listeners_.length;n++){google.maps.event.removeListener(this.listeners_[n])}};f.prototype.draw=function(){this.setContent();this.setTitle();this.setStyles()};f.prototype.setContent=function(){var n=this.marker_.get("labelContent");if(typeof n.nodeType==="undefined"){this.labelDiv_.innerHTML=n;this.eventDiv_.innerHTML=this.labelDiv_.innerHTML}else{this.labelDiv_.innerHTML="";this.labelDiv_.appendChild(n);n=n.cloneNode(true);this.eventDiv_.innerHTML="";this.eventDiv_.appendChild(n)}};f.prototype.setTitle=function(){this.eventDiv_.title=this.marker_.getTitle()||""};f.prototype.setStyles=function(){var o,n;this.labelDiv_.className=this.marker_.get("labelClass");this.eventDiv_.className=this.labelDiv_.className;this.labelDiv_.style.cssText="";this.eventDiv_.style.cssText="";n=this.marker_.get("labelStyle");for(o in n){if(n.hasOwnProperty(o)){this.labelDiv_.style[o]=n[o];this.eventDiv_.style[o]=n[o]}}this.setMandatoryStyles()};f.prototype.setMandatoryStyles=function(){this.labelDiv_.style.position="absolute";this.labelDiv_.style.overflow="hidden";if(typeof this.labelDiv_.style.opacity!=="undefined"&&this.labelDiv_.style.opacity!==""){this.labelDiv_.style.MsFilter='"progid:DXImageTransform.Microsoft.Alpha(opacity='+(this.labelDiv_.style.opacity*100)+')"';this.labelDiv_.style.filter="alpha(opacity="+(this.labelDiv_.style.opacity*100)+")"}this.eventDiv_.style.position=this.labelDiv_.style.position;this.eventDiv_.style.overflow=this.labelDiv_.style.overflow;this.eventDiv_.style.opacity=0.01;this.eventDiv_.style.MsFilter='"progid:DXImageTransform.Microsoft.Alpha(opacity=1)"';this.eventDiv_.style.filter="alpha(opacity=1)";this.setAnchor();this.setPosition();this.setVisible()};f.prototype.setAnchor=function(){var n=this.marker_.get("labelAnchor");this.labelDiv_.style.marginLeft=-n.x+"px";this.labelDiv_.style.marginTop=-n.y+"px";this.eventDiv_.style.marginLeft=-n.x+"px";this.eventDiv_.style.marginTop=-n.y+"px"};f.prototype.setPosition=function(o){var n=this.getProjection().fromLatLngToDivPixel(this.marker_.getPosition());if(typeof o==="undefined"){o=0}this.labelDiv_.style.left=Math.round(n.x)+"px";this.labelDiv_.style.top=Math.round(n.y-o)+"px";this.eventDiv_.style.left=this.labelDiv_.style.left;this.eventDiv_.style.top=this.labelDiv_.style.top;this.setZIndex()};f.prototype.setZIndex=function(){var n=(this.marker_.get("labelInBackground")?-1:+1);if(typeof this.marker_.getZIndex()==="undefined"){this.labelDiv_.style.zIndex=parseInt(this.labelDiv_.style.top,10)+n;this.eventDiv_.style.zIndex=this.labelDiv_.style.zIndex}else{this.labelDiv_.style.zIndex=this.marker_.getZIndex()+n;this.eventDiv_.style.zIndex=this.labelDiv_.style.zIndex}};f.prototype.setVisible=function(){if(this.marker_.get("labelVisible")){this.labelDiv_.style.display=this.marker_.getVisible()?"block":"none"}else{this.labelDiv_.style.display="none"}this.eventDiv_.style.display=this.labelDiv_.style.display};function e(n){n=n||{};n.labelContent=n.labelContent||"";n.labelAnchor=n.labelAnchor||new google.maps.Point(0,0);n.labelClass=n.labelClass||"markerLabels";n.labelStyle=n.labelStyle||{};n.labelInBackground=n.labelInBackground||false;if(typeof n.labelVisible==="undefined"){n.labelVisible=true}if(typeof n.raiseOnDrag==="undefined"){n.raiseOnDrag=true}if(typeof n.clickable==="undefined"){n.clickable=true}if(typeof n.draggable==="undefined"){n.draggable=false}if(typeof n.optimized==="undefined"){n.optimized=false}n.crossImage=n.crossImage||"http"+(document.location.protocol==="https:"?"s":"")+"://maps.gstatic.com/intl/en_us/mapfiles/drag_cross_67_16.png";n.handCursor=n.handCursor||"http"+(document.location.protocol==="https:"?"s":"")+"://maps.gstatic.com/intl/en_us/mapfiles/closedhand_8_8.cur";n.optimized=false;this.label=new f(this,n.crossImage,n.handCursor);google.maps.Marker.apply(this,arguments)}k(e,google.maps.Marker);e.prototype.setMap=function(n){google.maps.Marker.prototype.setMap.apply(this,arguments);this.label.setMap(n)};function h(o){var n=o||{};this.ready_=false;this.dragging_=false;if(o.visible==c){o.visible=true}if(o.shadow==c){o.shadow="7px -3px 5px rgba(88,88,88,0.7)"}if(o.anchor==c){o.anchor=g.BOTTOM}this.setValues(n)}h.prototype=new google.maps.OverlayView();b.RichMarker=h;h.prototype.getVisible=function(){return(this.get("visible"))};h.prototype.getVisible=h.prototype.getVisible;h.prototype.setVisible=function(n){this.set("visible",n)};h.prototype.setVisible=h.prototype.setVisible;h.prototype.visible_changed=function(){if(this.ready_){this.markerWrapper_.style.display=this.getVisible()?"":"none";this.draw()}};h.prototype.visible_changed=h.prototype.visible_changed;h.prototype.setFlat=function(n){this.set("flat",!!n)};h.prototype.setFlat=h.prototype.setFlat;h.prototype.getFlat=function(){return(this.get("flat"))};h.prototype.getFlat=h.prototype.getFlat;h.prototype.getWidth=function(){return(this.get("width"))};h.prototype.getWidth=h.prototype.getWidth;h.prototype.getHeight=function(){return(this.get("height"))};h.prototype.getHeight=h.prototype.getHeight;h.prototype.setShadow=function(n){this.set("shadow",n);this.flat_changed()};h.prototype.setShadow=h.prototype.setShadow;h.prototype.getShadow=function(){return(this.get("shadow"))};h.prototype.getShadow=h.prototype.getShadow;h.prototype.flat_changed=function(){if(!this.ready_){return}this.markerWrapper_.style.boxShadow=this.markerWrapper_.style.webkitBoxShadow=this.markerWrapper_.style.MozBoxShadow=this.getFlat()?"":this.getShadow()};h.prototype.flat_changed=h.prototype.flat_changed;h.prototype.setZIndex=function(n){this.set("zIndex",n)};h.prototype.setZIndex=h.prototype.setZIndex;h.prototype.getZIndex=function(){return(this.get("zIndex"))};h.prototype.getZIndex=h.prototype.getZIndex;h.prototype.zIndex_changed=function(){if(this.getZIndex()&&this.ready_){this.markerWrapper_.style.zIndex=this.getZIndex()}};h.prototype.zIndex_changed=h.prototype.zIndex_changed;h.prototype.getDraggable=function(){return(this.get("draggable"))};h.prototype.getDraggable=h.prototype.getDraggable;h.prototype.setDraggable=function(n){this.set("draggable",!!n)};h.prototype.setDraggable=h.prototype.setDraggable;h.prototype.draggable_changed=function(){if(this.ready_){if(this.getDraggable()){this.addDragging_(this.markerWrapper_)}else{this.removeDragListeners_()}}};h.prototype.draggable_changed=h.prototype.draggable_changed;h.prototype.getPosition=function(){return(this.get("position"))};h.prototype.getPosition=h.prototype.getPosition;h.prototype.setPosition=function(n){this.set("position",n)};h.prototype.setPosition=h.prototype.setPosition;h.prototype.position_changed=function(){this.draw()};h.prototype.position_changed=h.prototype.position_changed;h.prototype.getAnchor=function(){return(this.get("anchor"))};h.prototype.getAnchor=h.prototype.getAnchor;h.prototype.setAnchor=function(n){this.set("anchor",n)};h.prototype.setAnchor=h.prototype.setAnchor;h.prototype.anchor_changed=function(){this.draw()};h.prototype.anchor_changed=h.prototype.anchor_changed;h.prototype.htmlToDocumentFragment_=function(p){var o=document.createElement("DIV");o.innerHTML=p;if(o.childNodes.length==1){return(o.removeChild(o.firstChild))}else{var n=document.createDocumentFragment();while(o.firstChild){n.appendChild(o.firstChild)}return n}};h.prototype.removeChildren_=function(n){if(!n){return}var o;while(o=n.firstChild){n.removeChild(o)}};h.prototype.setContent=function(n){this.set("content",n)};h.prototype.setContent=h.prototype.setContent;h.prototype.getContent=function(){return(this.get("content"))};h.prototype.getContent=h.prototype.getContent;h.prototype.content_changed=function(){if(!this.markerContent_){return}this.removeChildren_(this.markerContent_);var q=this.getContent();if(q){if(typeof q=="string"){q=q.replace(/^\s*([\S\s]*)\b\s*$/,"$1");q=this.htmlToDocumentFragment_(q)}this.markerContent_.appendChild(q);var p=this;var n=this.markerContent_.getElementsByTagName("IMG");for(var o=0,r;r=n[o];o++){google.maps.event.addDomListener(r,"mousedown",function(s){if(p.getDraggable()){if(s.preventDefault){s.preventDefault()}s.returnValue=false}});google.maps.event.addDomListener(r,"load",function(){p.draw()})}google.maps.event.trigger(this,"domready")}if(this.ready_){this.draw()}};h.prototype.content_changed=h.prototype.content_changed;h.prototype.setCursor_=function(n){if(!this.ready_){return}var o="";if(navigator.userAgent.indexOf("Gecko/")!==-1){if(n=="dragging"){o="-moz-grabbing"}if(n=="dragready"){o="-moz-grab"}if(n=="draggable"){o="pointer"}}else{if(n=="dragging"||n=="dragready"){o="move"}if(n=="draggable"){o="pointer"}}if(this.markerWrapper_.style.cursor!=o){this.markerWrapper_.style.cursor=o}};h.prototype.startDrag=function(o){if(!this.getDraggable()){return}if(!this.dragging_){this.dragging_=true;var n=this.getMap();this.mapDraggable_=n.get("draggable");n.set("draggable",false);this.mouseX_=o.clientX;this.mouseY_=o.clientY;this.setCursor_("dragready");this.markerWrapper_.style.MozUserSelect="none";this.markerWrapper_.style.KhtmlUserSelect="none";this.markerWrapper_.style.WebkitUserSelect="none";this.markerWrapper_.unselectable="on";this.markerWrapper_.onselectstart=function(){return false};this.addDraggingListeners_();google.maps.event.trigger(this,"dragstart")}};h.prototype.stopDrag=function(){if(!this.getDraggable()){return}if(this.dragging_){this.dragging_=false;this.getMap().set("draggable",this.mapDraggable_);this.mouseX_=this.mouseY_=this.mapDraggable_=null;this.markerWrapper_.style.MozUserSelect="";this.markerWrapper_.style.KhtmlUserSelect="";this.markerWrapper_.style.WebkitUserSelect="";this.markerWrapper_.unselectable="off";this.markerWrapper_.onselectstart=function(){};this.removeDraggingListeners_();this.setCursor_("draggable");google.maps.event.trigger(this,"dragend");this.draw()}};h.prototype.drag=function(t){if(!this.getDraggable()||!this.dragging_){this.stopDrag();return}var q=this.mouseX_-t.clientX;var p=this.mouseY_-t.clientY;this.mouseX_=t.clientX;this.mouseY_=t.clientY;var s=parseInt(this.markerWrapper_.style.left,10)-q;var r=parseInt(this.markerWrapper_.style.top,10)-p;this.markerWrapper_.style.left=s+"px";this.markerWrapper_.style.top=r+"px";var u=this.getOffset_();var o=new google.maps.Point(s-u.width,r-u.height);var n=this.getProjection();this.setPosition(n.fromDivPixelToLatLng(o));this.setCursor_("dragging");google.maps.event.trigger(this,"drag")};h.prototype.removeDragListeners_=function(){if(this.draggableListener_){google.maps.event.removeListener(this.draggableListener_);delete this.draggableListener_}this.setCursor_("")};h.prototype.addDragging_=function(o){if(!o){return}var n=this;this.draggableListener_=google.maps.event.addDomListener(o,"mousedown",function(p){n.startDrag(p)});this.setCursor_("draggable")};h.prototype.addDraggingListeners_=function(){var n=this;if(this.markerWrapper_.setCapture){this.markerWrapper_.setCapture(true);this.draggingListeners_=[google.maps.event.addDomListener(this.markerWrapper_,"mousemove",function(o){n.drag(o)},true),google.maps.event.addDomListener(this.markerWrapper_,"mouseup",function(){n.stopDrag();n.markerWrapper_.releaseCapture()},true)]}else{this.draggingListeners_=[google.maps.event.addDomListener(b,"mousemove",function(o){n.drag(o)},true),google.maps.event.addDomListener(b,"mouseup",function(){n.stopDrag()},true)]}};h.prototype.removeDraggingListeners_=function(){if(this.draggingListeners_){for(var n=0,o;o=this.draggingListeners_[n];n++){google.maps.event.removeListener(o)}this.draggingListeners_.length=0}};h.prototype.getOffset_=function(){var o=this.getAnchor();if(typeof o=="object"){return(o)}var q=new google.maps.Size(0,0);if(!this.markerContent_){return q}var p=this.markerContent_.offsetWidth;var n=this.markerContent_.offsetHeight;switch(o){case g.TOP_LEFT:break;case g.TOP:q.width=-p/2;break;case g.TOP_RIGHT:q.width=-p;break;case g.LEFT:q.height=-n/2;break;case g.MIDDLE:q.width=-p/2;q.height=-n/2;break;case g.RIGHT:q.width=-p;q.height=-n/2;break;case g.BOTTOM_LEFT:q.height=-n;break;case g.BOTTOM:q.width=-p/2;q.height=-n;break;case g.BOTTOM_RIGHT:q.width=-p;q.height=-n;break}return q};h.prototype.onAdd=function(){if(!this.markerWrapper_){this.markerWrapper_=document.createElement("DIV");this.markerWrapper_.style.position="absolute"}if(this.getZIndex()){this.markerWrapper_.style.zIndex=this.getZIndex()}this.markerWrapper_.style.display=this.getVisible()?"":"none";if(!this.markerContent_){this.markerContent_=document.createElement("DIV");this.markerWrapper_.appendChild(this.markerContent_);var o=this;google.maps.event.addDomListener(this.markerContent_,"click",function(p){google.maps.event.trigger(o,"click")});google.maps.event.addDomListener(this.markerContent_,"mouseover",function(p){google.maps.event.trigger(o,"mouseover")});google.maps.event.addDomListener(this.markerContent_,"mouseout",function(p){google.maps.event.trigger(o,"mouseout")})}this.ready_=true;this.content_changed();this.flat_changed();this.draggable_changed();var n=this.getPanes();if(n){n.overlayMouseTarget.appendChild(this.markerWrapper_)}google.maps.event.trigger(this,"ready")};h.prototype.onAdd=h.prototype.onAdd;h.prototype.draw=function(){if(!this.ready_||this.dragging_){return}var o=this.getProjection();if(!o){return}var q=(this.get("position"));var s=o.fromLatLngToDivPixel(q);var r=this.getOffset_();this.markerWrapper_.style.top=(s.y+r.height)+"px";this.markerWrapper_.style.left=(s.x+r.width)+"px";var n=this.markerContent_.offsetHeight;var p=this.markerContent_.offsetWidth;if(p!=this.get("width")){this.set("width",p)}if(n!=this.get("height")){this.set("height",n)}};h.prototype.draw=h.prototype.draw;h.prototype.onRemove=function(){if(this.markerWrapper_&&this.markerWrapper_.parentNode){this.markerWrapper_.parentNode.removeChild(this.markerWrapper_)}this.removeDragListeners_()};h.prototype.onRemove=h.prototype.onRemove;var g={TOP_LEFT:1,TOP:2,TOP_RIGHT:3,LEFT:4,MIDDLE:5,RIGHT:6,BOTTOM_LEFT:7,BOTTOM:8,BOTTOM_RIGHT:9};b.RichMarkerPosition=g;b.InfoBox=m;b.Cluster=i;b.ClusterIcon=l;b.MarkerClusterer=j;b.MarkerLabel_=f;b.MarkerWithLabel=e;b.RichMarker=h})}}]);(function(d){var e={};function f(h){if(e[h]){return e[h].exports}var g=e[h]={exports:{},id:h,loaded:false};d[h].call(g.exports,g,g.exports,f);g.loaded=true;return g.exports}f.m=d;f.c=e;f.p="";return f(0)})([function(e,d,f){a.module("uiGmapgoogle-maps.wrapped").service("uiGmapDataStructures",function(){return{Graph:f(1).Graph,Queue:f(1).Queue}})},function(e,d,f){(function(){e.exports={Graph:f(2),Heap:f(3),LinkedList:f(4),Map:f(5),Queue:f(6),RedBlackTree:f(7),Trie:f(8)}}).call(this)},function(e,d){(function(){var f,g={}.hasOwnProperty;f=(function(){function h(){this._nodes={};this.nodeSize=0;this.edgeSize=0}h.prototype.addNode=function(i){if(!this._nodes[i]){this.nodeSize++;return this._nodes[i]={_outEdges:{},_inEdges:{}}}};h.prototype.getNode=function(i){return this._nodes[i]};h.prototype.removeNode=function(n){var j,k,l,m,i;k=this._nodes[n];if(!k){return}else{m=k._outEdges;for(l in m){if(!g.call(m,l)){continue}this.removeEdge(n,l)}i=k._inEdges;for(j in i){if(!g.call(i,j)){continue}this.removeEdge(j,n)}this.nodeSize--;delete this._nodes[n]}return k};h.prototype.addEdge=function(j,i,m){var n,l,k;if(m==null){m=1}if(this.getEdge(j,i)){return}l=this._nodes[j];k=this._nodes[i];if(!l||!k){return}n={weight:m};l._outEdges[i]=n;k._inEdges[j]=n;this.edgeSize++;return n};h.prototype.getEdge=function(j,i){var l,k;l=this._nodes[j];k=this._nodes[i];if(!l||!k){}else{return l._outEdges[i]}};h.prototype.removeEdge=function(j,i){var m,l,k;l=this._nodes[j];k=this._nodes[i];m=this.getEdge(j,i);if(!m){return}delete l._outEdges[i];delete k._inEdges[j];this.edgeSize--;return m};h.prototype.getInEdgesOf=function(m){var i,l,j,k;j=this._nodes[m];l=[];k=j!=null?j._inEdges:void 0;for(i in k){if(!g.call(k,i)){continue}l.push(this.getEdge(i,m))}return l};h.prototype.getOutEdgesOf=function(m){var k,l,i,j;k=this._nodes[m];l=[];j=k!=null?k._outEdges:void 0;for(i in j){if(!g.call(j,i)){continue}l.push(this.getEdge(m,i))}return l};h.prototype.getAllEdgesOf=function(q){var l,p,o,k,n,m,j;p=this.getInEdgesOf(q);o=this.getOutEdgesOf(q);if(p.length===0){return o}k=this.getEdge(q,q);for(l=n=0,m=p.length;0<=m?n<m:n>m;l=0<=m?++n:--n){if(p[l]===k){j=[p[p.length-1],p[l]],p[l]=j[0],p[p.length-1]=j[1];p.pop();break}}return p.concat(o)};h.prototype.forEachNode=function(i){var k,l,j;j=this._nodes;for(k in j){if(!g.call(j,k)){continue}l=j[k];i(l,k)}};h.prototype.forEachEdge=function(k){var o,m,n,j,l,i;l=this._nodes;for(m in l){if(!g.call(l,m)){continue}n=l[m];i=n._outEdges;for(j in i){if(!g.call(i,j)){continue}o=i[j];k(o)}}};return h})();e.exports=f}).call(this)},function(e,d){(function(){var f,g,h,i;f=(function(){function j(q){var l,n,p,m,k,o;if(q==null){q=[]}this._data=[void 0];for(p=0,k=q.length;p<k;p++){n=q[p];if(n!=null){this._data.push(n)}}if(this._data.length>1){for(l=m=2,o=this._data.length;2<=o?m<o:m>o;l=2<=o?++m:--m){this._upHeap(l)}}this.size=this._data.length-1}j.prototype.add=function(k){if(k==null){return}this._data.push(k);this._upHeap(this._data.length-1);this.size++;return k};j.prototype.removeMin=function(){var k;if(this._data.length===1){return}this.size--;if(this._data.length===2){return this._data.pop()}k=this._data[1];this._data[1]=this._data.pop();this._downHeap();return k};j.prototype.peekMin=function(){return this._data[1]};j.prototype._upHeap=function(k){var l,m;l=this._data[k];while(this._data[k]<this._data[h(k)]&&k>1){m=[this._data[h(k)],this._data[k]],this._data[k]=m[0],this._data[h(k)]=m[1];k=h(k)}};j.prototype._downHeap=function(){var k,m,l;k=1;while(g(k<this._data.length)){m=g(k);if(m<this._data.length-1){if(this._data[i(k)]<this._data[m]){m=i(k)}}if(this._data[m]<this._data[k]){l=[this._data[k],this._data[m]],this._data[m]=l[0],this._data[k]=l[1];k=m}else{break}}};return j})();h=function(j){return j>>1};g=function(j){return j<<1};i=function(j){return(j<<1)+1};e.exports=f}).call(this)},function(e,d){(function(){var f;f=(function(){function g(k){var j,i,h;if(k==null){k=[]}this.head={prev:void 0,value:void 0,next:void 0};this.tail={prev:void 0,value:void 0,next:void 0};this.size=0;for(i=0,h=k.length;i<h;i++){j=k[i];this.add(j)}}g.prototype.at=function(h){var k,j,n,l,m;if(!((-this.size<=h&&h<this.size))){return}h=this._adjust(h);if(h*2<this.size){k=this.head;for(j=n=1;n<=h;j=n+=1){k=k.next}}else{k=this.tail;for(j=l=1,m=this.size-h-1;l<=m;j=l+=1){k=k.prev}}return k};g.prototype.add=function(m,j){var k,i,l,h,n;if(j==null){j=this.size}if(!((-this.size<=j&&j<=this.size))){return}i={value:m};j=this._adjust(j);if(this.size===0){this.head=i}else{if(j===0){l=[i,this.head,i],this.head.prev=l[0],i.next=l[1],this.head=l[2]}else{k=this.at(j-1);h=[k.next,i,i,k],i.next=h[0],(n=k.next)!=null?n.prev=h[1]:void 0,k.next=h[2],i.prev=h[3]}}if(j===this.size){this.tail=i}this.size++;return m};g.prototype.removeAt=function(h){var j,i,k;if(h==null){h=this.size-1}if(!((-this.size<=h&&h<this.size))){return}if(this.size===0){return}h=this._adjust(h);if(this.size===1){i=this.head.value;this.head.value=this.tail.value=void 0}else{if(h===0){i=this.head.value;this.head=this.head.next;this.head.prev=void 0}else{j=this.at(h);i=j.value;j.prev.next=j.next;if((k=j.next)!=null){k.prev=j.prev}if(h===this.size-1){this.tail=j.prev}}}this.size--;return i};g.prototype.remove=function(i){var h;if(i==null){return}h=this.head;while(h&&h.value!==i){h=h.next}if(!h){return}if(this.size===1){this.head.value=this.tail.value=void 0}else{if(h===this.head){this.head=this.head.next;this.head.prev=void 0}else{if(h===this.tail){this.tail=this.tail.prev;this.tail.next=void 0}else{h.prev.next=h.next;h.next.prev=h.prev}}}this.size--;return i};g.prototype.indexOf=function(k,i){var j,h;if(i==null){i=0}if(((this.head.value==null)&&!this.head.next)||i>=this.size){return -1}i=Math.max(0,this._adjust(i));j=this.at(i);h=i;while(j){if(j.value===k){break}j=j.next;h++}if(h===this.size){return -1}else{return h}};g.prototype._adjust=function(h){if(h<0){return this.size+h}else{return h}};return g})();e.exports=f}).call(this)},function(e,d){(function(){var i,f,j,h,g={}.hasOwnProperty;f="_mapId_";i=(function(){k._mapIdTracker=0;k._newMapId=function(){return this._mapIdTracker++};function k(n){var l,m;this._content={};this._itemId=0;this._id=k._newMapId();this.size=0;for(l in n){if(!g.call(n,l)){continue}m=n[l];this.set(l,m)}}k.prototype.hash=function(n,l){var m,o;if(l==null){l=false}o=j(n);if(h(n)){m=f+this._id;if(l&&!n[m]){n[m]=this._itemId++}return m+"_"+n[m]}else{return o+"_"+n}};k.prototype.set=function(l,m){if(!this.has(l)){this.size++}this._content[this.hash(l,true)]=[m,l];return m};k.prototype.get=function(l){var m;return(m=this._content[this.hash(l)])!=null?m[0]:void 0};k.prototype.has=function(l){return this.hash(l) in this._content};k.prototype["delete"]=function(m){var l;l=this.hash(m);if(l in this._content){delete this._content[l];if(h(m)){delete m[f+this._id]}this.size--;return true}return false};k.prototype.forEach=function(l){var m,o,n;n=this._content;for(m in n){if(!g.call(n,m)){continue}o=n[m];l(o[1],o[0])}};return k})();h=function(l){var p,o,m,n,k;p=["Boolean","Number","String","Undefined","Null","RegExp","Function"];m=j(l);for(n=0,k=p.length;n<k;n++){o=p[n];if(m===o){return false}}return true};j=function(k){return Object.prototype.toString.apply(k).match(/\[object (.+)\]/)[1]};e.exports=i}).call(this)},function(e,d){(function(){var f;f=(function(){function g(h){if(h==null){h=[]}this._content=h;this._dequeueIndex=0;this.size=this._content.length}g.prototype.enqueue=function(h){this.size++;this._content.push(h);return h};g.prototype.dequeue=function(){var h;if(this.size===0){return}this.size--;h=this._content[this._dequeueIndex];this._dequeueIndex++;if(this._dequeueIndex*2>this._content.length){this._content=this._content.slice(this._dequeueIndex);this._dequeueIndex=0}return h};g.prototype.peek=function(){return this._content[this._dequeueIndex]};return g})();e.exports=f}).call(this)},function(e,d){(function(){var t,l,i,p,s,n,g,m,h,k,f,o,q,r,j;l=0;i=1;p=2;g=3;s=1;t=2;n=(function(){function u(y){var x,w,v;if(y==null){y=[]}this._root;this.size=0;for(w=0,v=y.length;w<v;w++){x=y[w];if(x!=null){this.add(x)}}}u.prototype.add=function(z){var x,w,v,y;if(z==null){return}this.size++;v={value:z,_color:s};if(!this._root){this._root=v}else{w=m(this._root,function(A){if(z===A.value){return l}else{if(z<A.value){if(A._left){return i}else{v._parent=A;A._left=v;return g}}else{if(A._right){return p}else{v._parent=A;A._right=v;return g}}}});if(w!=null){return}}x=v;while(true){if(x===this._root){x._color=t;break}if(x._parent._color===t){break}if(((y=j(x))!=null?y._color:void 0)===s){x._parent._color=t;j(x)._color=t;h(x)._color=s;x=h(x);continue}if(!k(x)&&k(x._parent)){this._rotateLeft(x._parent);x=x._left}else{if(k(x)&&!k(x._parent)){this._rotateRight(x._parent);x=x._right}}x._parent._color=t;h(x)._color=s;if(k(x)){this._rotateRight(h(x))}else{this._rotateLeft(h(x))}break}return z};u.prototype.has=function(w){var v;v=m(this._root,function(x){if(w===x.value){return l}else{if(w<x.value){return i}else{return p}}});if(v){return true}else{return false}};u.prototype.peekMin=function(){var v;return(v=q(this._root))!=null?v.value:void 0};u.prototype.peekMax=function(){var v;return(v=o(this._root))!=null?v.value:void 0};u.prototype.remove=function(w){var v;v=m(this._root,function(x){if(w===x.value){return l}else{if(w<x.value){return i}else{return p}}});if(!v){return}this._removeNode(this._root,v);this.size--;return w};u.prototype.removeMin=function(){var w,v;w=q(this._root);if(!w){return}v=w.value;this._removeNode(this._root,w);return v};u.prototype.removeMax=function(){var w,v;w=o(this._root);if(!w){return}v=w.value;this._removeNode(this._root,w);return v};u.prototype._removeNode=function(F,A){var G,E,D,C,B,z,y,x,w,v;if(A._left&&A._right){E=q(A._right);A.value=E.value;A=E}E=A._left||A._right;if(!E){E={color:t,_right:void 0,_left:void 0,isLeaf:true}}E._parent=A._parent;if((D=A._parent)!=null){D[f(A)]=E}if(A._color===t){if(E._color===s){E._color=t;if(!E._parent){this._root=E}}else{while(true){if(!E._parent){if(!E.isLeaf){this._root=E}else{this._root=void 0}break}G=r(E);if((G!=null?G._color:void 0)===s){E._parent._color=s;G._color=t;if(k(E)){this._rotateLeft(E._parent)}else{this._rotateRight(E._parent)}}G=r(E);if(E._parent._color===t&&(!G||(G._color===t&&(!G._left||G._left._color===t)&&(!G._right||G._right._color===t)))){if(G!=null){G._color=s}if(E.isLeaf){E._parent[f(E)]=void 0}E=E._parent;continue}if(E._parent._color===s&&(!G||(G._color===t&&(!G._left||((C=G._left)!=null?C._color:void 0)===t)&&(!G._right||((B=G._right)!=null?B._color:void 0)===t)))){if(G!=null){G._color=s}E._parent._color=t;break}if((G!=null?G._color:void 0)===t){if(k(E)&&(!G._right||G._right._color===t)&&((z=G._left)!=null?z._color:void 0)===s){G._color=s;if((y=G._left)!=null){y._color=t}this._rotateRight(G)}else{if(!k(E)&&(!G._left||G._left._color===t)&&((x=G._right)!=null?x._color:void 0)===s){G._color=s;if((w=G._right)!=null){w._color=t}this._rotateLeft(G)}}break}G=r(E);G._color=E._parent._color;if(k(E)){G._right._color=t;this._rotateRight(E._parent)}else{G._left._color=t;this._rotateLeft(E._parent)}}}}if(E.isLeaf){return(v=E._parent)!=null?v[f(E)]=void 0:void 0}};u.prototype._rotateLeft=function(w){var x,v;if((x=w._parent)!=null){x[f(w)]=w._right}w._right._parent=w._parent;w._parent=w._right;w._right=w._right._left;w._parent._left=w;if((v=w._right)!=null){v._parent=w}if(w._parent._parent==null){return this._root=w._parent}};u.prototype._rotateRight=function(w){var x,v;if((x=w._parent)!=null){x[f(w)]=w._left}w._left._parent=w._parent;w._parent=w._left;w._left=w._left._right;w._parent._right=w;if((v=w._left)!=null){v._parent=w}if(w._parent._parent==null){return this._root=w._parent}};return u})();k=function(u){return u===u._parent._left};f=function(u){if(k(u)){return"_left"}else{return"_right"}};m=function(v,x){var w,y,u;y=v;u=void 0;while(y){w=x(y);if(w===l){u=y;break}if(w===i){y=y._left}else{if(w===p){y=y._right}else{if(w===g){break}}}}return u};q=function(u){return m(u,function(v){if(v._left){return i}else{return l}})};o=function(u){return m(u,function(v){if(v._right){return p}else{return l}})};h=function(u){var v;return(v=u._parent)!=null?v._parent:void 0};j=function(u){if(!h(u)){return}if(k(u._parent)){return h(u)._right}else{return h(u)._left}};r=function(u){if(k(u)){return u._parent._right}else{return u._parent._left}};e.exports=n}).call(this)},function(e,d,f){(function(){var j,i,g,k,h={}.hasOwnProperty;j=f(6);g="end";i=(function(){function l(p){var o,n,m;if(p==null){p=[]}this._root={};this.size=0;for(n=0,m=p.length;n<m;n++){o=p[n];this.add(o)}}l.prototype.add=function(q){var n,o,p,m;if(q==null){return}this.size++;n=this._root;for(p=0,m=q.length;p<m;p++){o=q[p];if(n[o]==null){n[o]={}}n=n[o]}n[g]=true;return q};l.prototype.has=function(q){var n,o,p,m;if(q==null){return false}n=this._root;for(p=0,m=q.length;p<m;p++){o=q[p];if(n[o]==null){return false}n=n[o]}if(n[g]){return true}else{return false}};l.prototype.longestPrefixOf=function(r){var n,o,q,p,m;if(r==null){return""}n=this._root;q="";for(p=0,m=r.length;p<m;p++){o=r[p];if(n[o]==null){break}q+=o;n=n[o]}return q};l.prototype.wordsWithPrefix=function(t){var n,m,o,p,u,s,v,q,w,r;if(t==null){return[]}(t!=null)||(t="");v=[];m=this._root;for(q=0,w=t.length;q<w;q++){o=t[q];m=m[o];if(m==null){return[]}}u=new j();u.enqueue([m,""]);while(u.size!==0){r=u.dequeue(),p=r[0],n=r[1];if(p[g]){v.push(t+n)}for(o in p){if(!h.call(p,o)){continue}s=p[o];u.enqueue([s,n+o])}}return v};l.prototype.remove=function(m){var n,s,o,t,q,p,u,r;if(m==null){return}n=this._root;t=[];for(q=0,u=m.length;q<u;q++){o=m[q];if(n[o]==null){return}n=n[o];t.push([o,n])}if(!n[g]){return}this.size--;delete n[g];if(k(n,1)){return m}for(s=p=r=t.length-1;r<=1?p<=1:p>=1;s=r<=1?++p:--p){if(!k(t[s][1],1)){delete t[s-1][1][t[s][0]]}else{break}}if(!k(this._root[t[0][0]],1)){delete this._root[t[0][0]]}return m};return l})();k=function(m,p){var o,l;if(p===0){return true}l=0;for(o in m){if(!h.call(m,o)){continue}l++;if(l>=p){return true}}return false};e.exports=i}).call(this)}]);a.module("uiGmapgoogle-maps.wrapped").service("uiGmapMarkerSpiderfier",["uiGmapGoogleMapApi",function(f){var d=this;var e={}.hasOwnProperty,g=[].slice;this["OverlappingMarkerSpiderfier"]=(function(){var t,o,n,u,m,q,h,i,k,r,s;i=l.prototype;k=[l,i];for(n=0,q=k.length;n<q;n++){s=k[n];s.VERSION="0.3.3"}o=void 0;t=void 0;h=void 0;r=Math.PI*2;i.keepSpiderfied=false;i.markersWontHide=false;i.markersWontMove=false;i.nearbyDistance=20;i.circleSpiralSwitchover=9;i.circleFootSeparation=23;i.circleStartAngle=r/12;i.spiralFootSeparation=26;i.spiralLengthStart=11;i.spiralLengthFactor=4;i.spiderfiedZIndex=1000;i.usualLegZIndex=10;i.highlightedLegZIndex=20;i.event="click";i.minZoomLevel=false;i.legWeight=1.5;i.legColors={usual:{},highlighted:{}};m=i.legColors["usual"];u=i.legColors["highlighted"];l.initializeGoogleMaps=function(j){o=j.maps;t=o.event;h=o.MapTypeId;m[h.HYBRID]=m[h.SATELLITE]="#fff";u[h.HYBRID]=u[h.SATELLITE]="#f00";m[h.TERRAIN]=m[h.ROADMAP]="#444";u[h.TERRAIN]=u[h.ROADMAP]="#f00";this.ProjHelper=function(p){return this.setMap(p)};this.ProjHelper.prototype=new o.OverlayView();return this.ProjHelper.prototype.draw=function(){}};function l(B,z){var A,x,j,y,w,p;this.map=B;if(z==null){z={}}for(x in z){if(!e.call(z,x)){continue}p=z[x];this[x]=p}this.projHelper=new this.constructor.ProjHelper(this.map);this.initMarkerArrays();this.listeners={};w=["click","zoom_changed","maptypeid_changed"];for(j=0,y=w.length;j<y;j++){A=w[j];t.addListener(this.map,A,(function(v){return function(){return v.unspiderfy()}})(this))}}i.initMarkerArrays=function(){this.markers=[];return this.markerListenerRefs=[]};i.addMarker=function(j){var p;if(j._oms!=null){return this}j._oms=true;p=[t.addListener(j,this["event"],(function(v){return function(w){return v.spiderListener(j,w)}})(this))];if(!this["markersWontHide"]){p.push(t.addListener(j,"visible_changed",(function(v){return function(){return v.markerChangeListener(j,false)}})(this)))}if(!this["markersWontMove"]){p.push(t.addListener(j,"position_changed",(function(v){return function(){return v.markerChangeListener(j,true)}})(this)))}this.markerListenerRefs.push(p);this.markers.push(j);return this};i.markerChangeListener=function(p,j){if((p._omsData!=null)&&(j||!p.getVisible())&&!((this.spiderfying!=null)||(this.unspiderfying!=null))){return this["unspiderfy"](j?p:null)}};i.getMarkers=function(){return this.markers.slice(0)};i.removeMarker=function(p){var w,j,v,y,x;if(p._omsData!=null){this["unspiderfy"]()}w=this.arrIndexOf(this.markers,p);if(w<0){return this}x=this.markerListenerRefs.splice(w,1)[0];for(j=0,v=x.length;j<v;j++){y=x[j];t.removeListener(y)}delete p._oms;this.markers.splice(w,1);return this};i.clearMarkers=function(){var z,w,y,x,j,v,A,p,B;this["unspiderfy"]();B=this.markers;for(z=w=0,y=B.length;w<y;z=++w){A=B[z];v=this.markerListenerRefs[z];for(p=0,x=v.length;p<x;p++){j=v[p];t.removeListener(j)}delete A._oms}this.initMarkerArrays();return this};i.addListener=function(p,j){var v;((v=this.listeners)[p]!=null?v[p]:v[p]=[]).push(j);return this};i.removeListener=function(v,p){var j;j=this.arrIndexOf(this.listeners[v],p);if(!(j<0)){this.listeners[v].splice(j,1)}return this};i.clearListeners=function(j){this.listeners[j]=[];return this};i.trigger=function(){var x,A,z,p,w,v,j,y;A=arguments[0],x=2<=arguments.length?g.call(arguments,1):[];j=(v=this.listeners[A])!=null?v:[];y=[];for(p=0,w=j.length;p<w;p++){z=j[p];y.push(z.apply(null,x))}return y};i.generatePtsCircle=function(y,j){var p,C,A,x,v,B,z,w;A=this["circleFootSeparation"]*(2+y);B=A/r;C=r/y;w=[];for(x=v=0,z=y;0<=z?v<z:v>z;x=0<=z?++v:--v){p=this["circleStartAngle"]+x*C;w.push(new o.Point(j.x+B*Math.cos(p),j.y+B*Math.sin(p)))}return w};i.generatePtsSpiral=function(y,j){var p,x,v,A,B,z,w;A=this["spiralLengthStart"];p=0;w=[];for(x=v=0,z=y;0<=z?v<z:v>z;x=0<=z?++v:--v){p+=this["spiralFootSeparation"]/A+x*0.0005;B=new o.Point(j.x+A*Math.cos(p),j.y+A*Math.sin(p));A+=r*this["spiralLengthFactor"]/p;w.push(B)}return w};i.spiderListener=function(A,p){var F,C,x,z,w,G,y,H,B,v,D,j,E;H=A._omsData!=null;if(!(H&&this["keepSpiderfied"])){if(this["event"]==="mouseover"){F=this;C=function(){return F.unspiderfy()};b.clearTimeout(i.timeout);i.timeout=setTimeout(C,3000)}else{this["unspiderfy"]()}}if(H||this.map.getStreetView().getVisible()||this.map.getMapTypeId()==="GoogleEarthAPI"){return this.trigger("click",A,p)}else{v=[];D=[];B=this["nearbyDistance"];j=B*B;y=this.llToPt(A.position);E=this.markers;for(x=0,z=E.length;x<z;x++){w=E[x];if(!((w.map!=null)&&w.getVisible())){continue}G=this.llToPt(w.position);if(this.ptDistanceSq(G,y)<j){v.push({marker:w,markerPt:G})}else{D.push(w)}}if(v.length===1){return this.trigger("click",A,p)}else{return this.spiderfy(v,D)}}};i.markersNearMarker=function(z,F){var v,y,p,E,x,w,A,j,D,C,B;if(F==null){F=false}if(this.projHelper.getProjection()==null){throw"Must wait for 'idle' event on map before calling markersNearMarker"}A=this["nearbyDistance"];j=A*A;x=this.llToPt(z.position);w=[];D=this.markers;for(v=0,y=D.length;v<y;v++){p=D[v];if(p===z||(p.map==null)||!p.getVisible()){continue}E=this.llToPt((C=(B=p._omsData)!=null?B.usualPosition:void 0)!=null?C:p.position);if(this.ptDistanceSq(E,x)<j){w.push(p);if(F){break}}}return w};i.markersNearAnyOtherMarker=function(){var L,I,G,J,x,w,v,H,p,M,j,y,z,F,K,N,D,C,B,A,E;if(this.projHelper.getProjection()==null){throw"Must wait for 'idle' event on map before calling markersNearAnyOtherMarker"}K=this["nearbyDistance"];N=K*K;z=(function(){var Q,S,R,P,O,T;R=this.markers;T=[];for(Q=0,S=R.length;Q<S;Q++){H=R[Q];T.push({pt:this.llToPt((P=(O=H._omsData)!=null?O.usualPosition:void 0)!=null?P:H.position),willSpiderfy:false})}return T}).call(this);C=this.markers;for(I=J=0,x=C.length;J<x;I=++J){p=C[I];if(!((p.map!=null)&&p.getVisible())){continue}M=z[I];if(M.willSpiderfy){continue}B=this.markers;for(G=F=0,w=B.length;F<w;G=++F){j=B[G];if(G===I){continue}if(!((j.map!=null)&&j.getVisible())){continue}y=z[G];if(G<I&&!y.willSpiderfy){continue}if(this.ptDistanceSq(M.pt,y.pt)<N){M.willSpiderfy=y.willSpiderfy=true;break}}}A=this.markers;E=[];for(L=D=0,v=A.length;D<v;L=++D){H=A[L];if(z[L].willSpiderfy){E.push(H)}}return E};i.makeHighlightListenerFuncs=function(j){return{highlight:(function(p){return function(){return j._omsData.leg.setOptions({strokeColor:p.legColors["highlighted"][p.map.mapTypeId],zIndex:p.highlightedLegZIndex})}})(this),unhighlight:(function(p){return function(){return j._omsData.leg.setOptions({strokeColor:p.legColors["usual"][p.map.mapTypeId],zIndex:p.usualLegZIndex})}})(this)}};i.spiderfy=function(p,y){var D,C,j,x,z,E,w,B,v,A,F;if(this["minZoomLevel"]&&this.map.getZoom()<this["minZoomLevel"]){return false}this.spiderfying=true;A=p.length;D=this.ptAverage((function(){var G,H,I;I=[];for(G=0,H=p.length;G<H;G++){B=p[G];I.push(B.markerPt)}return I})());x=A>=this["circleSpiralSwitchover"]?this.generatePtsSpiral(A,D).reverse():this.generatePtsCircle(A,D);F=(function(){var G,H,I;I=[];for(G=0,H=x.length;G<H;G++){j=x[G];C=this.ptToLl(j);v=this.minExtract(p,(function(J){return function(K){return J.ptDistanceSq(K.markerPt,j)}})(this));w=v.marker;E=new o.Polyline({map:this.map,path:[w.position,C],strokeColor:this["legColors"]["usual"][this.map.mapTypeId],strokeWeight:this["legWeight"],zIndex:this["usualLegZIndex"]});w._omsData={usualPosition:w.position,leg:E};if(this["legColors"]["highlighted"][this.map.mapTypeId]!==this["legColors"]["usual"][this.map.mapTypeId]){z=this.makeHighlightListenerFuncs(w);w._omsData.hightlightListeners={highlight:t.addListener(w,"mouseover",z.highlight),unhighlight:t.addListener(w,"mouseout",z.unhighlight)}}w.setPosition(C);w.setZIndex(Math.round(this["spiderfiedZIndex"]+j.y));I.push(w)}return I}).call(this);delete this.spiderfying;this.spiderfied=true;return this.trigger("spiderfy",F,y)};i.unspiderfy=function(v){var p,y,z,j,A,x,w;if(v==null){v=null}if(this.spiderfied==null){return this}this.unspiderfying=true;w=[];A=[];x=this.markers;for(p=0,y=x.length;p<y;p++){j=x[p];if(j._omsData!=null){j._omsData.leg.setMap(null);if(j!==v){j.setPosition(j._omsData.usualPosition)}j.setZIndex(null);z=j._omsData.hightlightListeners;if(z!=null){t.removeListener(z.highlight);t.removeListener(z.unhighlight)}delete j._omsData;w.push(j)}else{A.push(j)}}delete this.unspiderfying;delete this.spiderfied;this.trigger("unspiderfy",w,A);return this};i.ptDistanceSq=function(w,v){var p,j;p=w.x-v.x;j=w.y-v.y;return p*p+j*j};i.ptAverage=function(z){var j,p,x,w,y,v;y=v=0;for(j=0,p=z.length;j<p;j++){w=z[j];y+=w.x;v+=w.y}x=z.length;return new o.Point(y/x,v/x)};i.llToPt=function(j){return this.projHelper.getProjection().fromLatLngToDivPixel(j)};i.ptToLl=function(j){return this.projHelper.getProjection().fromDivPixelToLatLng(j)};i.minExtract=function(A,v){var y,j,z,B,w,x,p;for(z=w=0,x=A.length;w<x;z=++w){B=A[z];p=v(B);if((typeof y==="undefined"||y===null)||p<j){j=p;y=z}}return A.splice(y,1)[0]};i.arrIndexOf=function(j,x){var w,p,v,y;if(j.indexOf!=null){return j.indexOf(x)}for(w=p=0,v=j.length;p<v;w=++p){y=j[w];if(y===x){return w}}return -1};return l})();f.then(function(){d.OverlappingMarkerSpiderfier.initializeGoogleMaps(b.google)});return this.OverlappingMarkerSpiderfier}]);a.module("uiGmapgoogle-maps.extensions").service("uiGmapExtendMarkerClusterer",["uiGmapLodash","uiGmapPropMap","lodash",function(d,f,e){return{init:e.once(function(){(function(){var g={}.hasOwnProperty,h=function(l,j){for(var i in j){if(g.call(j,i)){l[i]=j[i]}}function k(){this.constructor=l}k.prototype=j.prototype;l.prototype=new k();l.__super__=j.prototype;return l};b.NgMapCluster=(function(i){h(j,i);function j(k){j.__super__.constructor.call(this,k);this.markers_=new f()}j.prototype.addMarker=function(n){var q;var p;var r;if(this.isMarkerAlreadyAdded_(n)){var k=this.markers_.get(n.key);if(k.getPosition().lat()==n.getPosition().lat()&&k.getPosition().lon()==n.getPosition().lon()){return false}}if(!this.center_){this.center_=n.getPosition();this.calculateBounds_()}else{if(this.averageCenter_){var m=this.markers_.length+1;var s=(this.center_.lat()*(m-1)+n.getPosition().lat())/m;var o=(this.center_.lng()*(m-1)+n.getPosition().lng())/m;this.center_=new google.maps.LatLng(s,o);this.calculateBounds_()}}n.isAdded=true;this.markers_.push(n);p=this.markers_.length;r=this.markerClusterer_.getMaxZoom();if(r!==null&&this.map_.getZoom()>r){if(n.getMap()!==this.map_){n.setMap(this.map_)}}else{if(p<this.minClusterSize_){if(n.getMap()!==this.map_){n.setMap(this.map_)}}else{if(p===this.minClusterSize_){this.markers_.each(function(l){l.setMap(null)})}else{n.setMap(null)}}}return true};j.prototype.isMarkerAlreadyAdded_=function(k){return d.isNullOrUndefined(this.markers_.get(k.key))};j.prototype.getBounds=function(){var k;var l=new google.maps.LatLngBounds(this.center_,this.center_);this.getMarkers().each(function(n){l.extend(n.getPosition())});return l};j.prototype.remove=function(){this.clusterIcon_.setMap(null);this.markers_=new f();delete this.markers_};return j})(Cluster);b.NgMapMarkerClusterer=(function(i){h(j,i);function j(m,k,l){j.__super__.constructor.call(this,m,k,l);this.markers_=new f()}j.prototype.clearMarkers=function(){this.resetViewport_(true);this.markers_=new f()};j.prototype.removeMarker_=function(k){if(!this.markers_.get(k.key)){return false}k.setMap(null);this.markers_.remove(k.key);return true};j.prototype.createClusters_=function(k){var o,m;var l;var n=this;if(!this.ready_){return}if(k===0){google.maps.event.trigger(this,"clusteringbegin",this);if(typeof this.timerRefStatic!=="undefined"){clearTimeout(this.timerRefStatic);delete this.timerRefStatic}}if(this.getMap().getZoom()>3){l=new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),this.getMap().getBounds().getNorthEast())}else{l=new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472,-178.48388434375),new google.maps.LatLng(-85.08136444384544,178.00048865625))}var q=this.getExtendedBounds(l);var p=Math.min(k+this.batchSize_,this.markers_.length);var r=this.markers_.values();for(o=k;o<p;o++){m=r[o];if(!m.isAdded&&this.isMarkerInBounds_(m,q)){if(!this.ignoreHidden_||(this.ignoreHidden_&&m.getVisible())){this.addToClosestCluster_(m)}}}if(p<this.markers_.length){this.timerRefStatic=setTimeout(function(){n.createClusters_(p)},0)}else{for(o=0;o<this.clusters_.length;o++){this.clusters_[o].updateIcon_()}delete this.timerRefStatic;google.maps.event.trigger(this,"clusteringend",this)}};j.prototype.addToClosestCluster_=function(m){var o,p,l,k;var q=40000;var n=null;for(o=0;o<this.clusters_.length;o++){l=this.clusters_[o];k=l.getCenter();if(k){p=this.distanceBetweenPoints_(k,m.getPosition());if(p<q){q=p;n=l}}}if(n&&n.isMarkerInClusterBounds(m)){n.addMarker(m)}else{l=new NgMapCluster(this);l.addMarker(m);this.clusters_.push(l)}};j.prototype.redraw_=function(){this.createClusters_(0)};j.prototype.resetViewport_=function(m){var l,k;for(l=0;l<this.clusters_.length;l++){this.clusters_[l].remove()}this.clusters_=[];this.markers_.each(function(n){n.isAdded=false;if(m){n.setMap(null)}})};j.prototype.extend=function(l,k){return(function(m){var n;for(n in m.prototype){if(n!=="constructor"){this.prototype[n]=m.prototype[n]}}return this}).apply(l,[k])};ClusterIcon.prototype.show=function(){if(this.div_){var k="";var m=this.backgroundPosition_.split(" ");var n=parseInt(m[0].trim(),10);var l=parseInt(m[1].trim(),10);var o=this.getPosFromLatLng_(this.center_);this.div_.style.cssText=this.createCss(o);k="<img src='"+this.url_+"' style='position: absolute; top: "+l+"px; left: "+n+"px; ";if(!this.cluster_.getMarkerClusterer().enableRetinaIcons_){k+="clip: rect("+(-1*l)+"px, "+((-1*n)+this.width_)+"px, "+((-1*l)+this.height_)+"px, "+(-1*n)+"px);"}else{k+="width: "+this.width_+"px;height: "+this.height_+"px;"}k+="'>";this.div_.innerHTML=k+"<div style='position: absolute;top: "+this.anchorText_[0]+"px;left: "+this.anchorText_[1]+"px;color: "+this.textColor_+";font-size: "+this.textSize_+"px;font-family: "+this.fontFamily_+";font-weight: "+this.fontWeight_+";font-style: "+this.fontStyle_+";text-decoration: "+this.textDecoration_+";text-align: center;width: "+this.width_+"px;line-height:"+this.height_+"px;'>"+this.sums_.text+"</div>";if(typeof this.sums_.title==="undefined"||this.sums_.title===""){this.div_.title=this.cluster_.getMarkerClusterer().getTitle()}else{this.div_.title=this.sums_.title}this.div_.style.display=""}this.visible_=true};return j})(MarkerClusterer)}).call(this)})}}])}(window,angular));